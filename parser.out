Grammar:

Rule 0     S' -> program
Rule 1     program -> instructions
Rule 2     instructions -> instructions instruction
Rule 3     instructions -> instruction
Rule 4     instruction -> { instructions }
Rule 5     instruction -> non_end_instruction
Rule 6     instruction -> end_line_instruction ;
Rule 7     end_line_instruction -> print_stmt
Rule 8     end_line_instruction -> return_stmt
Rule 9     end_line_instruction -> continue_stmt
Rule 10    end_line_instruction -> break_stmt
Rule 11    end_line_instruction -> assignment
Rule 12    non_end_instruction -> while_loop
Rule 13    non_end_instruction -> for_loop
Rule 14    non_end_instruction -> if_statement
Rule 15    assignment -> ID DIVASSIGN expression
Rule 16    assignment -> ID MULASSIGN expression
Rule 17    assignment -> ID SUBASSIGN expression
Rule 18    assignment -> ID ADDASSIGN expression
Rule 19    assignment -> ID ASSIGN expression
Rule 20    factor -> expression_transpose TRANSPOSE  [precedence=right, level=10]
Rule 21    factor -> matrix_function
Rule 22    factor -> [ value_list ]
Rule 23    factor -> ( expression )
Rule 24    factor -> STRING
Rule 25    factor -> ID
Rule 26    factor -> NUMBER
Rule 27    expression_bin -> expression NEQ expression  [precedence=left, level=4]
Rule 28    expression_bin -> expression EQ expression  [precedence=left, level=4]
Rule 29    expression_bin -> expression LE expression  [precedence=left, level=4]
Rule 30    expression_bin -> expression GE expression  [precedence=left, level=4]
Rule 31    expression_bin -> expression LT expression  [precedence=left, level=4]
Rule 32    expression_bin -> expression GT expression  [precedence=left, level=4]
Rule 33    expression_bin -> expression DOTDIV expression  [precedence=left, level=8]
Rule 34    expression_bin -> expression DOTMUL expression  [precedence=left, level=8]
Rule 35    expression_bin -> expression DIVIDE expression  [precedence=left, level=7]
Rule 36    expression_bin -> expression TIMES expression  [precedence=left, level=7]
Rule 37    expression_bin -> expression DOTSUB expression  [precedence=left, level=6]
Rule 38    expression_bin -> expression DOTADD expression  [precedence=left, level=6]
Rule 39    expression_bin -> expression MINUS expression  [precedence=left, level=5]
Rule 40    expression_bin -> expression PLUS expression  [precedence=left, level=5]
Rule 41    expression_negate -> expression  [precedence=right, level=9]
Rule 42    expression_transpose -> factor  [precedence=right, level=10]
Rule 43    matrix_function -> EYE ( expression )
Rule 44    matrix_function -> ONES ( expression )
Rule 45    matrix_function -> ZEROS ( expression )
Rule 46    expression -> factor
Rule 47    expression -> expression_bin
Rule 48    expression -> MINUS expression_negate  [precedence=left, level=5]
Rule 49    value_list -> expression
Rule 50    value_list -> value_list , expression
Rule 51    if_statement -> IF ( expression ) instruction else_if_chain
Rule 52    if_statement -> IF ( expression ) instruction  [precedence=nonassoc, level=1]
Rule 53    else_if_chain -> ELSE instruction  [precedence=nonassoc, level=2]
Rule 54    else_if_chain -> ELSE_IF ( expression ) instruction else_if_chain
Rule 55    else_if_chain -> ELSE_IF ( expression ) instruction
Rule 56    for_loop -> FOR ID ASSIGN expression RANGE expression instruction
Rule 57    while_loop -> WHILE ( expression ) instruction
Rule 58    break_stmt -> BREAK
Rule 59    continue_stmt -> CONTINUE
Rule 60    return_stmt -> RETURN expression
Rule 61    print_stmt -> PRINT value_list
Rule 62    NUMBER -> FLOATNUM
Rule 63    NUMBER -> INTNUM

Terminals, with rules where they appear:

(                    : 23 43 44 45 51 52 54 55 57
)                    : 23 43 44 45 51 52 54 55 57
,                    : 50
;                    : 6
ADDASSIGN            : 18
ASSIGN               : 19 56
BREAK                : 58
CONTINUE             : 59
DIVASSIGN            : 15
DIVIDE               : 35
DOTADD               : 38
DOTDIV               : 33
DOTMUL               : 34
DOTSUB               : 37
ELSE                 : 53
ELSE_IF              : 54 55
EQ                   : 28
EYE                  : 43
FLOATNUM             : 62
FOR                  : 56
GE                   : 30
GT                   : 32
ID                   : 15 16 17 18 19 25 56
IF                   : 51 52
INTNUM               : 63
LE                   : 29
LT                   : 31
MINUS                : 39 48
MULASSIGN            : 16
NEQ                  : 27
ONES                 : 44
PLUS                 : 40
PRINT                : 61
RANGE                : 56
RETURN               : 60
STRING               : 24
SUBASSIGN            : 17
TIMES                : 36
TRANSPOSE            : 20
WHILE                : 57
ZEROS                : 45
[                    : 22
]                    : 22
error                : 
{                    : 4
}                    : 4

Nonterminals, with rules where they appear:

NUMBER               : 26
assignment           : 11
break_stmt           : 10
continue_stmt        : 9
else_if_chain        : 51 54
end_line_instruction : 6
expression           : 15 16 17 18 19 23 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 43 44 45 49 50 51 52 54 55 56 56 57 60
expression_bin       : 47
expression_negate    : 48
expression_transpose : 20
factor               : 42 46
for_loop             : 13
if_statement         : 14
instruction          : 2 3 51 52 53 54 55 56 57
instructions         : 1 2 4
matrix_function      : 21
non_end_instruction  : 5
print_stmt           : 7
program              : 0
return_stmt          : 8
value_list           : 22 50 61
while_loop           : 12


state 0

    (0) S' -> . program
    (1) program -> . instructions
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction ;
    (12) non_end_instruction -> . while_loop
    (13) non_end_instruction -> . for_loop
    (14) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . print_stmt
    (8) end_line_instruction -> . return_stmt
    (9) end_line_instruction -> . continue_stmt
    (10) end_line_instruction -> . break_stmt
    (11) end_line_instruction -> . assignment
    (57) while_loop -> . WHILE ( expression ) instruction
    (56) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (51) if_statement -> . IF ( expression ) instruction else_if_chain
    (52) if_statement -> . IF ( expression ) instruction
    (61) print_stmt -> . PRINT value_list
    (60) return_stmt -> . RETURN expression
    (59) continue_stmt -> . CONTINUE
    (58) break_stmt -> . BREAK
    (15) assignment -> . ID DIVASSIGN expression
    (16) assignment -> . ID MULASSIGN expression
    (17) assignment -> . ID SUBASSIGN expression
    (18) assignment -> . ID ADDASSIGN expression
    (19) assignment -> . ID ASSIGN expression
    {               shift and go to state 4
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    CONTINUE        shift and go to state 21
    BREAK           shift and go to state 22
    ID              shift and go to state 17

    program                        shift and go to state 1
    instructions                   shift and go to state 2
    instruction                    shift and go to state 3
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 10
    return_stmt                    shift and go to state 11
    continue_stmt                  shift and go to state 12
    break_stmt                     shift and go to state 13
    assignment                     shift and go to state 14

state 1

    (0) S' -> program .


state 2

    (1) program -> instructions .
    (2) instructions -> instructions . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction ;
    (12) non_end_instruction -> . while_loop
    (13) non_end_instruction -> . for_loop
    (14) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . print_stmt
    (8) end_line_instruction -> . return_stmt
    (9) end_line_instruction -> . continue_stmt
    (10) end_line_instruction -> . break_stmt
    (11) end_line_instruction -> . assignment
    (57) while_loop -> . WHILE ( expression ) instruction
    (56) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (51) if_statement -> . IF ( expression ) instruction else_if_chain
    (52) if_statement -> . IF ( expression ) instruction
    (61) print_stmt -> . PRINT value_list
    (60) return_stmt -> . RETURN expression
    (59) continue_stmt -> . CONTINUE
    (58) break_stmt -> . BREAK
    (15) assignment -> . ID DIVASSIGN expression
    (16) assignment -> . ID MULASSIGN expression
    (17) assignment -> . ID SUBASSIGN expression
    (18) assignment -> . ID ADDASSIGN expression
    (19) assignment -> . ID ASSIGN expression
    $end            reduce using rule 1 (program -> instructions .)
    {               shift and go to state 4
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    CONTINUE        shift and go to state 21
    BREAK           shift and go to state 22
    ID              shift and go to state 17

    instruction                    shift and go to state 23
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 10
    return_stmt                    shift and go to state 11
    continue_stmt                  shift and go to state 12
    break_stmt                     shift and go to state 13
    assignment                     shift and go to state 14

state 3

    (3) instructions -> instruction .
    {               reduce using rule 3 (instructions -> instruction .)
    WHILE           reduce using rule 3 (instructions -> instruction .)
    FOR             reduce using rule 3 (instructions -> instruction .)
    IF              reduce using rule 3 (instructions -> instruction .)
    PRINT           reduce using rule 3 (instructions -> instruction .)
    RETURN          reduce using rule 3 (instructions -> instruction .)
    CONTINUE        reduce using rule 3 (instructions -> instruction .)
    BREAK           reduce using rule 3 (instructions -> instruction .)
    ID              reduce using rule 3 (instructions -> instruction .)
    $end            reduce using rule 3 (instructions -> instruction .)
    }               reduce using rule 3 (instructions -> instruction .)


state 4

    (4) instruction -> { . instructions }
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction ;
    (12) non_end_instruction -> . while_loop
    (13) non_end_instruction -> . for_loop
    (14) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . print_stmt
    (8) end_line_instruction -> . return_stmt
    (9) end_line_instruction -> . continue_stmt
    (10) end_line_instruction -> . break_stmt
    (11) end_line_instruction -> . assignment
    (57) while_loop -> . WHILE ( expression ) instruction
    (56) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (51) if_statement -> . IF ( expression ) instruction else_if_chain
    (52) if_statement -> . IF ( expression ) instruction
    (61) print_stmt -> . PRINT value_list
    (60) return_stmt -> . RETURN expression
    (59) continue_stmt -> . CONTINUE
    (58) break_stmt -> . BREAK
    (15) assignment -> . ID DIVASSIGN expression
    (16) assignment -> . ID MULASSIGN expression
    (17) assignment -> . ID SUBASSIGN expression
    (18) assignment -> . ID ADDASSIGN expression
    (19) assignment -> . ID ASSIGN expression
    {               shift and go to state 4
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    CONTINUE        shift and go to state 21
    BREAK           shift and go to state 22
    ID              shift and go to state 17

    instructions                   shift and go to state 24
    instruction                    shift and go to state 3
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 10
    return_stmt                    shift and go to state 11
    continue_stmt                  shift and go to state 12
    break_stmt                     shift and go to state 13
    assignment                     shift and go to state 14

state 5

    (5) instruction -> non_end_instruction .
    {               reduce using rule 5 (instruction -> non_end_instruction .)
    WHILE           reduce using rule 5 (instruction -> non_end_instruction .)
    FOR             reduce using rule 5 (instruction -> non_end_instruction .)
    IF              reduce using rule 5 (instruction -> non_end_instruction .)
    PRINT           reduce using rule 5 (instruction -> non_end_instruction .)
    RETURN          reduce using rule 5 (instruction -> non_end_instruction .)
    CONTINUE        reduce using rule 5 (instruction -> non_end_instruction .)
    BREAK           reduce using rule 5 (instruction -> non_end_instruction .)
    ID              reduce using rule 5 (instruction -> non_end_instruction .)
    $end            reduce using rule 5 (instruction -> non_end_instruction .)
    }               reduce using rule 5 (instruction -> non_end_instruction .)
    ELSE            reduce using rule 5 (instruction -> non_end_instruction .)
    ELSE_IF         reduce using rule 5 (instruction -> non_end_instruction .)


state 6

    (6) instruction -> end_line_instruction . ;
    ;               shift and go to state 25


state 7

    (12) non_end_instruction -> while_loop .
    {               reduce using rule 12 (non_end_instruction -> while_loop .)
    WHILE           reduce using rule 12 (non_end_instruction -> while_loop .)
    FOR             reduce using rule 12 (non_end_instruction -> while_loop .)
    IF              reduce using rule 12 (non_end_instruction -> while_loop .)
    PRINT           reduce using rule 12 (non_end_instruction -> while_loop .)
    RETURN          reduce using rule 12 (non_end_instruction -> while_loop .)
    CONTINUE        reduce using rule 12 (non_end_instruction -> while_loop .)
    BREAK           reduce using rule 12 (non_end_instruction -> while_loop .)
    ID              reduce using rule 12 (non_end_instruction -> while_loop .)
    $end            reduce using rule 12 (non_end_instruction -> while_loop .)
    }               reduce using rule 12 (non_end_instruction -> while_loop .)
    ELSE            reduce using rule 12 (non_end_instruction -> while_loop .)
    ELSE_IF         reduce using rule 12 (non_end_instruction -> while_loop .)


state 8

    (13) non_end_instruction -> for_loop .
    {               reduce using rule 13 (non_end_instruction -> for_loop .)
    WHILE           reduce using rule 13 (non_end_instruction -> for_loop .)
    FOR             reduce using rule 13 (non_end_instruction -> for_loop .)
    IF              reduce using rule 13 (non_end_instruction -> for_loop .)
    PRINT           reduce using rule 13 (non_end_instruction -> for_loop .)
    RETURN          reduce using rule 13 (non_end_instruction -> for_loop .)
    CONTINUE        reduce using rule 13 (non_end_instruction -> for_loop .)
    BREAK           reduce using rule 13 (non_end_instruction -> for_loop .)
    ID              reduce using rule 13 (non_end_instruction -> for_loop .)
    $end            reduce using rule 13 (non_end_instruction -> for_loop .)
    }               reduce using rule 13 (non_end_instruction -> for_loop .)
    ELSE            reduce using rule 13 (non_end_instruction -> for_loop .)
    ELSE_IF         reduce using rule 13 (non_end_instruction -> for_loop .)


state 9

    (14) non_end_instruction -> if_statement .
    {               reduce using rule 14 (non_end_instruction -> if_statement .)
    WHILE           reduce using rule 14 (non_end_instruction -> if_statement .)
    FOR             reduce using rule 14 (non_end_instruction -> if_statement .)
    IF              reduce using rule 14 (non_end_instruction -> if_statement .)
    PRINT           reduce using rule 14 (non_end_instruction -> if_statement .)
    RETURN          reduce using rule 14 (non_end_instruction -> if_statement .)
    CONTINUE        reduce using rule 14 (non_end_instruction -> if_statement .)
    BREAK           reduce using rule 14 (non_end_instruction -> if_statement .)
    ID              reduce using rule 14 (non_end_instruction -> if_statement .)
    $end            reduce using rule 14 (non_end_instruction -> if_statement .)
    }               reduce using rule 14 (non_end_instruction -> if_statement .)
    ELSE            reduce using rule 14 (non_end_instruction -> if_statement .)
    ELSE_IF         reduce using rule 14 (non_end_instruction -> if_statement .)


state 10

    (7) end_line_instruction -> print_stmt .
    ;               reduce using rule 7 (end_line_instruction -> print_stmt .)


state 11

    (8) end_line_instruction -> return_stmt .
    ;               reduce using rule 8 (end_line_instruction -> return_stmt .)


state 12

    (9) end_line_instruction -> continue_stmt .
    ;               reduce using rule 9 (end_line_instruction -> continue_stmt .)


state 13

    (10) end_line_instruction -> break_stmt .
    ;               reduce using rule 10 (end_line_instruction -> break_stmt .)


state 14

    (11) end_line_instruction -> assignment .
    ;               reduce using rule 11 (end_line_instruction -> assignment .)


state 15

    (57) while_loop -> WHILE . ( expression ) instruction
    (               shift and go to state 26


state 16

    (56) for_loop -> FOR . ID ASSIGN expression RANGE expression instruction
    ID              shift and go to state 27


state 17

    (15) assignment -> ID . DIVASSIGN expression
    (16) assignment -> ID . MULASSIGN expression
    (17) assignment -> ID . SUBASSIGN expression
    (18) assignment -> ID . ADDASSIGN expression
    (19) assignment -> ID . ASSIGN expression
    DIVASSIGN       shift and go to state 28
    MULASSIGN       shift and go to state 29
    SUBASSIGN       shift and go to state 30
    ADDASSIGN       shift and go to state 31
    ASSIGN          shift and go to state 32


state 18

    (51) if_statement -> IF . ( expression ) instruction else_if_chain
    (52) if_statement -> IF . ( expression ) instruction
    (               shift and go to state 33


state 19

    (61) print_stmt -> PRINT . value_list
    (49) value_list -> . expression
    (50) value_list -> . value_list , expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    value_list                     shift and go to state 34
    expression                     shift and go to state 35
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 20

    (60) return_stmt -> RETURN . expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 51
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 21

    (59) continue_stmt -> CONTINUE .
    ;               reduce using rule 59 (continue_stmt -> CONTINUE .)


state 22

    (58) break_stmt -> BREAK .
    ;               reduce using rule 58 (break_stmt -> BREAK .)


state 23

    (2) instructions -> instructions instruction .
    {               reduce using rule 2 (instructions -> instructions instruction .)
    WHILE           reduce using rule 2 (instructions -> instructions instruction .)
    FOR             reduce using rule 2 (instructions -> instructions instruction .)
    IF              reduce using rule 2 (instructions -> instructions instruction .)
    PRINT           reduce using rule 2 (instructions -> instructions instruction .)
    RETURN          reduce using rule 2 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 2 (instructions -> instructions instruction .)
    BREAK           reduce using rule 2 (instructions -> instructions instruction .)
    ID              reduce using rule 2 (instructions -> instructions instruction .)
    $end            reduce using rule 2 (instructions -> instructions instruction .)
    }               reduce using rule 2 (instructions -> instructions instruction .)


state 24

    (4) instruction -> { instructions . }
    (2) instructions -> instructions . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction ;
    (12) non_end_instruction -> . while_loop
    (13) non_end_instruction -> . for_loop
    (14) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . print_stmt
    (8) end_line_instruction -> . return_stmt
    (9) end_line_instruction -> . continue_stmt
    (10) end_line_instruction -> . break_stmt
    (11) end_line_instruction -> . assignment
    (57) while_loop -> . WHILE ( expression ) instruction
    (56) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (51) if_statement -> . IF ( expression ) instruction else_if_chain
    (52) if_statement -> . IF ( expression ) instruction
    (61) print_stmt -> . PRINT value_list
    (60) return_stmt -> . RETURN expression
    (59) continue_stmt -> . CONTINUE
    (58) break_stmt -> . BREAK
    (15) assignment -> . ID DIVASSIGN expression
    (16) assignment -> . ID MULASSIGN expression
    (17) assignment -> . ID SUBASSIGN expression
    (18) assignment -> . ID ADDASSIGN expression
    (19) assignment -> . ID ASSIGN expression
    }               shift and go to state 52
    {               shift and go to state 4
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    CONTINUE        shift and go to state 21
    BREAK           shift and go to state 22
    ID              shift and go to state 17

    instruction                    shift and go to state 23
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 10
    return_stmt                    shift and go to state 11
    continue_stmt                  shift and go to state 12
    break_stmt                     shift and go to state 13
    assignment                     shift and go to state 14

state 25

    (6) instruction -> end_line_instruction ; .
    {               reduce using rule 6 (instruction -> end_line_instruction ; .)
    WHILE           reduce using rule 6 (instruction -> end_line_instruction ; .)
    FOR             reduce using rule 6 (instruction -> end_line_instruction ; .)
    IF              reduce using rule 6 (instruction -> end_line_instruction ; .)
    PRINT           reduce using rule 6 (instruction -> end_line_instruction ; .)
    RETURN          reduce using rule 6 (instruction -> end_line_instruction ; .)
    CONTINUE        reduce using rule 6 (instruction -> end_line_instruction ; .)
    BREAK           reduce using rule 6 (instruction -> end_line_instruction ; .)
    ID              reduce using rule 6 (instruction -> end_line_instruction ; .)
    $end            reduce using rule 6 (instruction -> end_line_instruction ; .)
    }               reduce using rule 6 (instruction -> end_line_instruction ; .)
    ELSE            reduce using rule 6 (instruction -> end_line_instruction ; .)
    ELSE_IF         reduce using rule 6 (instruction -> end_line_instruction ; .)


state 26

    (57) while_loop -> WHILE ( . expression ) instruction
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 53
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 27

    (56) for_loop -> FOR ID . ASSIGN expression RANGE expression instruction
    ASSIGN          shift and go to state 54


state 28

    (15) assignment -> ID DIVASSIGN . expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 55
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 29

    (16) assignment -> ID MULASSIGN . expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 56
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 30

    (17) assignment -> ID SUBASSIGN . expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 57
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 31

    (18) assignment -> ID ADDASSIGN . expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 58
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 32

    (19) assignment -> ID ASSIGN . expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 59
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 33

    (51) if_statement -> IF ( . expression ) instruction else_if_chain
    (52) if_statement -> IF ( . expression ) instruction
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 60
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 34

    (61) print_stmt -> PRINT value_list .
    (50) value_list -> value_list . , expression
    ;               reduce using rule 61 (print_stmt -> PRINT value_list .)
    ,               shift and go to state 61


state 35

    (49) value_list -> expression .
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    ,               reduce using rule 49 (value_list -> expression .)
    ;               reduce using rule 49 (value_list -> expression .)
    ]               reduce using rule 49 (value_list -> expression .)
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 36

    (46) expression -> factor .
    (42) expression_transpose -> factor .
    NEQ             reduce using rule 46 (expression -> factor .)
    EQ              reduce using rule 46 (expression -> factor .)
    LE              reduce using rule 46 (expression -> factor .)
    GE              reduce using rule 46 (expression -> factor .)
    LT              reduce using rule 46 (expression -> factor .)
    GT              reduce using rule 46 (expression -> factor .)
    DOTDIV          reduce using rule 46 (expression -> factor .)
    DOTMUL          reduce using rule 46 (expression -> factor .)
    DIVIDE          reduce using rule 46 (expression -> factor .)
    TIMES           reduce using rule 46 (expression -> factor .)
    DOTSUB          reduce using rule 46 (expression -> factor .)
    DOTADD          reduce using rule 46 (expression -> factor .)
    MINUS           reduce using rule 46 (expression -> factor .)
    PLUS            reduce using rule 46 (expression -> factor .)
    ,               reduce using rule 46 (expression -> factor .)
    ;               reduce using rule 46 (expression -> factor .)
    )               reduce using rule 46 (expression -> factor .)
    ]               reduce using rule 46 (expression -> factor .)
    RANGE           reduce using rule 46 (expression -> factor .)
    {               reduce using rule 46 (expression -> factor .)
    WHILE           reduce using rule 46 (expression -> factor .)
    FOR             reduce using rule 46 (expression -> factor .)
    IF              reduce using rule 46 (expression -> factor .)
    PRINT           reduce using rule 46 (expression -> factor .)
    RETURN          reduce using rule 46 (expression -> factor .)
    CONTINUE        reduce using rule 46 (expression -> factor .)
    BREAK           reduce using rule 46 (expression -> factor .)
    ID              reduce using rule 46 (expression -> factor .)
    TRANSPOSE       reduce using rule 42 (expression_transpose -> factor .)


state 37

    (47) expression -> expression_bin .
    NEQ             reduce using rule 47 (expression -> expression_bin .)
    EQ              reduce using rule 47 (expression -> expression_bin .)
    LE              reduce using rule 47 (expression -> expression_bin .)
    GE              reduce using rule 47 (expression -> expression_bin .)
    LT              reduce using rule 47 (expression -> expression_bin .)
    GT              reduce using rule 47 (expression -> expression_bin .)
    DOTDIV          reduce using rule 47 (expression -> expression_bin .)
    DOTMUL          reduce using rule 47 (expression -> expression_bin .)
    DIVIDE          reduce using rule 47 (expression -> expression_bin .)
    TIMES           reduce using rule 47 (expression -> expression_bin .)
    DOTSUB          reduce using rule 47 (expression -> expression_bin .)
    DOTADD          reduce using rule 47 (expression -> expression_bin .)
    MINUS           reduce using rule 47 (expression -> expression_bin .)
    PLUS            reduce using rule 47 (expression -> expression_bin .)
    ,               reduce using rule 47 (expression -> expression_bin .)
    ;               reduce using rule 47 (expression -> expression_bin .)
    )               reduce using rule 47 (expression -> expression_bin .)
    ]               reduce using rule 47 (expression -> expression_bin .)
    RANGE           reduce using rule 47 (expression -> expression_bin .)
    {               reduce using rule 47 (expression -> expression_bin .)
    WHILE           reduce using rule 47 (expression -> expression_bin .)
    FOR             reduce using rule 47 (expression -> expression_bin .)
    IF              reduce using rule 47 (expression -> expression_bin .)
    PRINT           reduce using rule 47 (expression -> expression_bin .)
    RETURN          reduce using rule 47 (expression -> expression_bin .)
    CONTINUE        reduce using rule 47 (expression -> expression_bin .)
    BREAK           reduce using rule 47 (expression -> expression_bin .)
    ID              reduce using rule 47 (expression -> expression_bin .)


state 38

    (48) expression -> MINUS . expression_negate
    (41) expression_negate -> . expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression_negate              shift and go to state 76
    expression                     shift and go to state 77
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 39

    (20) factor -> expression_transpose . TRANSPOSE
    TRANSPOSE       shift and go to state 78


state 40

    (21) factor -> matrix_function .
    NEQ             reduce using rule 21 (factor -> matrix_function .)
    EQ              reduce using rule 21 (factor -> matrix_function .)
    LE              reduce using rule 21 (factor -> matrix_function .)
    GE              reduce using rule 21 (factor -> matrix_function .)
    LT              reduce using rule 21 (factor -> matrix_function .)
    GT              reduce using rule 21 (factor -> matrix_function .)
    DOTDIV          reduce using rule 21 (factor -> matrix_function .)
    DOTMUL          reduce using rule 21 (factor -> matrix_function .)
    DIVIDE          reduce using rule 21 (factor -> matrix_function .)
    TIMES           reduce using rule 21 (factor -> matrix_function .)
    DOTSUB          reduce using rule 21 (factor -> matrix_function .)
    DOTADD          reduce using rule 21 (factor -> matrix_function .)
    MINUS           reduce using rule 21 (factor -> matrix_function .)
    PLUS            reduce using rule 21 (factor -> matrix_function .)
    ,               reduce using rule 21 (factor -> matrix_function .)
    ;               reduce using rule 21 (factor -> matrix_function .)
    TRANSPOSE       reduce using rule 21 (factor -> matrix_function .)
    )               reduce using rule 21 (factor -> matrix_function .)
    ]               reduce using rule 21 (factor -> matrix_function .)
    RANGE           reduce using rule 21 (factor -> matrix_function .)
    {               reduce using rule 21 (factor -> matrix_function .)
    WHILE           reduce using rule 21 (factor -> matrix_function .)
    FOR             reduce using rule 21 (factor -> matrix_function .)
    IF              reduce using rule 21 (factor -> matrix_function .)
    PRINT           reduce using rule 21 (factor -> matrix_function .)
    RETURN          reduce using rule 21 (factor -> matrix_function .)
    CONTINUE        reduce using rule 21 (factor -> matrix_function .)
    BREAK           reduce using rule 21 (factor -> matrix_function .)
    ID              reduce using rule 21 (factor -> matrix_function .)


state 41

    (22) factor -> [ . value_list ]
    (49) value_list -> . expression
    (50) value_list -> . value_list , expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    value_list                     shift and go to state 79
    expression                     shift and go to state 35
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 42

    (23) factor -> ( . expression )
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 80
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 43

    (24) factor -> STRING .
    NEQ             reduce using rule 24 (factor -> STRING .)
    EQ              reduce using rule 24 (factor -> STRING .)
    LE              reduce using rule 24 (factor -> STRING .)
    GE              reduce using rule 24 (factor -> STRING .)
    LT              reduce using rule 24 (factor -> STRING .)
    GT              reduce using rule 24 (factor -> STRING .)
    DOTDIV          reduce using rule 24 (factor -> STRING .)
    DOTMUL          reduce using rule 24 (factor -> STRING .)
    DIVIDE          reduce using rule 24 (factor -> STRING .)
    TIMES           reduce using rule 24 (factor -> STRING .)
    DOTSUB          reduce using rule 24 (factor -> STRING .)
    DOTADD          reduce using rule 24 (factor -> STRING .)
    MINUS           reduce using rule 24 (factor -> STRING .)
    PLUS            reduce using rule 24 (factor -> STRING .)
    ,               reduce using rule 24 (factor -> STRING .)
    ;               reduce using rule 24 (factor -> STRING .)
    TRANSPOSE       reduce using rule 24 (factor -> STRING .)
    )               reduce using rule 24 (factor -> STRING .)
    ]               reduce using rule 24 (factor -> STRING .)
    RANGE           reduce using rule 24 (factor -> STRING .)
    {               reduce using rule 24 (factor -> STRING .)
    WHILE           reduce using rule 24 (factor -> STRING .)
    FOR             reduce using rule 24 (factor -> STRING .)
    IF              reduce using rule 24 (factor -> STRING .)
    PRINT           reduce using rule 24 (factor -> STRING .)
    RETURN          reduce using rule 24 (factor -> STRING .)
    CONTINUE        reduce using rule 24 (factor -> STRING .)
    BREAK           reduce using rule 24 (factor -> STRING .)
    ID              reduce using rule 24 (factor -> STRING .)


state 44

    (25) factor -> ID .
    NEQ             reduce using rule 25 (factor -> ID .)
    EQ              reduce using rule 25 (factor -> ID .)
    LE              reduce using rule 25 (factor -> ID .)
    GE              reduce using rule 25 (factor -> ID .)
    LT              reduce using rule 25 (factor -> ID .)
    GT              reduce using rule 25 (factor -> ID .)
    DOTDIV          reduce using rule 25 (factor -> ID .)
    DOTMUL          reduce using rule 25 (factor -> ID .)
    DIVIDE          reduce using rule 25 (factor -> ID .)
    TIMES           reduce using rule 25 (factor -> ID .)
    DOTSUB          reduce using rule 25 (factor -> ID .)
    DOTADD          reduce using rule 25 (factor -> ID .)
    MINUS           reduce using rule 25 (factor -> ID .)
    PLUS            reduce using rule 25 (factor -> ID .)
    ,               reduce using rule 25 (factor -> ID .)
    ;               reduce using rule 25 (factor -> ID .)
    TRANSPOSE       reduce using rule 25 (factor -> ID .)
    )               reduce using rule 25 (factor -> ID .)
    ]               reduce using rule 25 (factor -> ID .)
    RANGE           reduce using rule 25 (factor -> ID .)
    {               reduce using rule 25 (factor -> ID .)
    WHILE           reduce using rule 25 (factor -> ID .)
    FOR             reduce using rule 25 (factor -> ID .)
    IF              reduce using rule 25 (factor -> ID .)
    PRINT           reduce using rule 25 (factor -> ID .)
    RETURN          reduce using rule 25 (factor -> ID .)
    CONTINUE        reduce using rule 25 (factor -> ID .)
    BREAK           reduce using rule 25 (factor -> ID .)
    ID              reduce using rule 25 (factor -> ID .)


state 45

    (26) factor -> NUMBER .
    NEQ             reduce using rule 26 (factor -> NUMBER .)
    EQ              reduce using rule 26 (factor -> NUMBER .)
    LE              reduce using rule 26 (factor -> NUMBER .)
    GE              reduce using rule 26 (factor -> NUMBER .)
    LT              reduce using rule 26 (factor -> NUMBER .)
    GT              reduce using rule 26 (factor -> NUMBER .)
    DOTDIV          reduce using rule 26 (factor -> NUMBER .)
    DOTMUL          reduce using rule 26 (factor -> NUMBER .)
    DIVIDE          reduce using rule 26 (factor -> NUMBER .)
    TIMES           reduce using rule 26 (factor -> NUMBER .)
    DOTSUB          reduce using rule 26 (factor -> NUMBER .)
    DOTADD          reduce using rule 26 (factor -> NUMBER .)
    MINUS           reduce using rule 26 (factor -> NUMBER .)
    PLUS            reduce using rule 26 (factor -> NUMBER .)
    ,               reduce using rule 26 (factor -> NUMBER .)
    ;               reduce using rule 26 (factor -> NUMBER .)
    TRANSPOSE       reduce using rule 26 (factor -> NUMBER .)
    )               reduce using rule 26 (factor -> NUMBER .)
    ]               reduce using rule 26 (factor -> NUMBER .)
    RANGE           reduce using rule 26 (factor -> NUMBER .)
    {               reduce using rule 26 (factor -> NUMBER .)
    WHILE           reduce using rule 26 (factor -> NUMBER .)
    FOR             reduce using rule 26 (factor -> NUMBER .)
    IF              reduce using rule 26 (factor -> NUMBER .)
    PRINT           reduce using rule 26 (factor -> NUMBER .)
    RETURN          reduce using rule 26 (factor -> NUMBER .)
    CONTINUE        reduce using rule 26 (factor -> NUMBER .)
    BREAK           reduce using rule 26 (factor -> NUMBER .)
    ID              reduce using rule 26 (factor -> NUMBER .)


state 46

    (43) matrix_function -> EYE . ( expression )
    (               shift and go to state 81


state 47

    (44) matrix_function -> ONES . ( expression )
    (               shift and go to state 82


state 48

    (45) matrix_function -> ZEROS . ( expression )
    (               shift and go to state 83


state 49

    (62) NUMBER -> FLOATNUM .
    NEQ             reduce using rule 62 (NUMBER -> FLOATNUM .)
    EQ              reduce using rule 62 (NUMBER -> FLOATNUM .)
    LE              reduce using rule 62 (NUMBER -> FLOATNUM .)
    GE              reduce using rule 62 (NUMBER -> FLOATNUM .)
    LT              reduce using rule 62 (NUMBER -> FLOATNUM .)
    GT              reduce using rule 62 (NUMBER -> FLOATNUM .)
    DOTDIV          reduce using rule 62 (NUMBER -> FLOATNUM .)
    DOTMUL          reduce using rule 62 (NUMBER -> FLOATNUM .)
    DIVIDE          reduce using rule 62 (NUMBER -> FLOATNUM .)
    TIMES           reduce using rule 62 (NUMBER -> FLOATNUM .)
    DOTSUB          reduce using rule 62 (NUMBER -> FLOATNUM .)
    DOTADD          reduce using rule 62 (NUMBER -> FLOATNUM .)
    MINUS           reduce using rule 62 (NUMBER -> FLOATNUM .)
    PLUS            reduce using rule 62 (NUMBER -> FLOATNUM .)
    ,               reduce using rule 62 (NUMBER -> FLOATNUM .)
    ;               reduce using rule 62 (NUMBER -> FLOATNUM .)
    TRANSPOSE       reduce using rule 62 (NUMBER -> FLOATNUM .)
    )               reduce using rule 62 (NUMBER -> FLOATNUM .)
    ]               reduce using rule 62 (NUMBER -> FLOATNUM .)
    RANGE           reduce using rule 62 (NUMBER -> FLOATNUM .)
    {               reduce using rule 62 (NUMBER -> FLOATNUM .)
    WHILE           reduce using rule 62 (NUMBER -> FLOATNUM .)
    FOR             reduce using rule 62 (NUMBER -> FLOATNUM .)
    IF              reduce using rule 62 (NUMBER -> FLOATNUM .)
    PRINT           reduce using rule 62 (NUMBER -> FLOATNUM .)
    RETURN          reduce using rule 62 (NUMBER -> FLOATNUM .)
    CONTINUE        reduce using rule 62 (NUMBER -> FLOATNUM .)
    BREAK           reduce using rule 62 (NUMBER -> FLOATNUM .)
    ID              reduce using rule 62 (NUMBER -> FLOATNUM .)


state 50

    (63) NUMBER -> INTNUM .
    NEQ             reduce using rule 63 (NUMBER -> INTNUM .)
    EQ              reduce using rule 63 (NUMBER -> INTNUM .)
    LE              reduce using rule 63 (NUMBER -> INTNUM .)
    GE              reduce using rule 63 (NUMBER -> INTNUM .)
    LT              reduce using rule 63 (NUMBER -> INTNUM .)
    GT              reduce using rule 63 (NUMBER -> INTNUM .)
    DOTDIV          reduce using rule 63 (NUMBER -> INTNUM .)
    DOTMUL          reduce using rule 63 (NUMBER -> INTNUM .)
    DIVIDE          reduce using rule 63 (NUMBER -> INTNUM .)
    TIMES           reduce using rule 63 (NUMBER -> INTNUM .)
    DOTSUB          reduce using rule 63 (NUMBER -> INTNUM .)
    DOTADD          reduce using rule 63 (NUMBER -> INTNUM .)
    MINUS           reduce using rule 63 (NUMBER -> INTNUM .)
    PLUS            reduce using rule 63 (NUMBER -> INTNUM .)
    ,               reduce using rule 63 (NUMBER -> INTNUM .)
    ;               reduce using rule 63 (NUMBER -> INTNUM .)
    TRANSPOSE       reduce using rule 63 (NUMBER -> INTNUM .)
    )               reduce using rule 63 (NUMBER -> INTNUM .)
    ]               reduce using rule 63 (NUMBER -> INTNUM .)
    RANGE           reduce using rule 63 (NUMBER -> INTNUM .)
    {               reduce using rule 63 (NUMBER -> INTNUM .)
    WHILE           reduce using rule 63 (NUMBER -> INTNUM .)
    FOR             reduce using rule 63 (NUMBER -> INTNUM .)
    IF              reduce using rule 63 (NUMBER -> INTNUM .)
    PRINT           reduce using rule 63 (NUMBER -> INTNUM .)
    RETURN          reduce using rule 63 (NUMBER -> INTNUM .)
    CONTINUE        reduce using rule 63 (NUMBER -> INTNUM .)
    BREAK           reduce using rule 63 (NUMBER -> INTNUM .)
    ID              reduce using rule 63 (NUMBER -> INTNUM .)


state 51

    (60) return_stmt -> RETURN expression .
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    ;               reduce using rule 60 (return_stmt -> RETURN expression .)
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 52

    (4) instruction -> { instructions } .
    {               reduce using rule 4 (instruction -> { instructions } .)
    WHILE           reduce using rule 4 (instruction -> { instructions } .)
    FOR             reduce using rule 4 (instruction -> { instructions } .)
    IF              reduce using rule 4 (instruction -> { instructions } .)
    PRINT           reduce using rule 4 (instruction -> { instructions } .)
    RETURN          reduce using rule 4 (instruction -> { instructions } .)
    CONTINUE        reduce using rule 4 (instruction -> { instructions } .)
    BREAK           reduce using rule 4 (instruction -> { instructions } .)
    ID              reduce using rule 4 (instruction -> { instructions } .)
    $end            reduce using rule 4 (instruction -> { instructions } .)
    }               reduce using rule 4 (instruction -> { instructions } .)
    ELSE            reduce using rule 4 (instruction -> { instructions } .)
    ELSE_IF         reduce using rule 4 (instruction -> { instructions } .)


state 53

    (57) while_loop -> WHILE ( expression . ) instruction
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    )               shift and go to state 84
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 54

    (56) for_loop -> FOR ID ASSIGN . expression RANGE expression instruction
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 85
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 55

    (15) assignment -> ID DIVASSIGN expression .
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    ;               reduce using rule 15 (assignment -> ID DIVASSIGN expression .)
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 56

    (16) assignment -> ID MULASSIGN expression .
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    ;               reduce using rule 16 (assignment -> ID MULASSIGN expression .)
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 57

    (17) assignment -> ID SUBASSIGN expression .
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    ;               reduce using rule 17 (assignment -> ID SUBASSIGN expression .)
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 58

    (18) assignment -> ID ADDASSIGN expression .
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    ;               reduce using rule 18 (assignment -> ID ADDASSIGN expression .)
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 59

    (19) assignment -> ID ASSIGN expression .
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    ;               reduce using rule 19 (assignment -> ID ASSIGN expression .)
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 60

    (51) if_statement -> IF ( expression . ) instruction else_if_chain
    (52) if_statement -> IF ( expression . ) instruction
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    )               shift and go to state 86
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 61

    (50) value_list -> value_list , . expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 87
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 62

    (27) expression_bin -> expression NEQ . expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 88
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 63

    (28) expression_bin -> expression EQ . expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 89
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 64

    (29) expression_bin -> expression LE . expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 90
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 65

    (30) expression_bin -> expression GE . expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 91
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 66

    (31) expression_bin -> expression LT . expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 92
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 67

    (32) expression_bin -> expression GT . expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 93
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 68

    (33) expression_bin -> expression DOTDIV . expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 94
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 69

    (34) expression_bin -> expression DOTMUL . expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 95
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 70

    (35) expression_bin -> expression DIVIDE . expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 96
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 71

    (36) expression_bin -> expression TIMES . expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 97
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 72

    (37) expression_bin -> expression DOTSUB . expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 98
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 73

    (38) expression_bin -> expression DOTADD . expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 99
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 74

    (39) expression_bin -> expression MINUS . expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 100
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 75

    (40) expression_bin -> expression PLUS . expression
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 101
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 76

    (48) expression -> MINUS expression_negate .
    NEQ             reduce using rule 48 (expression -> MINUS expression_negate .)
    EQ              reduce using rule 48 (expression -> MINUS expression_negate .)
    LE              reduce using rule 48 (expression -> MINUS expression_negate .)
    GE              reduce using rule 48 (expression -> MINUS expression_negate .)
    LT              reduce using rule 48 (expression -> MINUS expression_negate .)
    GT              reduce using rule 48 (expression -> MINUS expression_negate .)
    DOTDIV          reduce using rule 48 (expression -> MINUS expression_negate .)
    DOTMUL          reduce using rule 48 (expression -> MINUS expression_negate .)
    DIVIDE          reduce using rule 48 (expression -> MINUS expression_negate .)
    TIMES           reduce using rule 48 (expression -> MINUS expression_negate .)
    DOTSUB          reduce using rule 48 (expression -> MINUS expression_negate .)
    DOTADD          reduce using rule 48 (expression -> MINUS expression_negate .)
    MINUS           reduce using rule 48 (expression -> MINUS expression_negate .)
    PLUS            reduce using rule 48 (expression -> MINUS expression_negate .)
    ,               reduce using rule 48 (expression -> MINUS expression_negate .)
    ;               reduce using rule 48 (expression -> MINUS expression_negate .)
    )               reduce using rule 48 (expression -> MINUS expression_negate .)
    ]               reduce using rule 48 (expression -> MINUS expression_negate .)
    RANGE           reduce using rule 48 (expression -> MINUS expression_negate .)
    {               reduce using rule 48 (expression -> MINUS expression_negate .)
    WHILE           reduce using rule 48 (expression -> MINUS expression_negate .)
    FOR             reduce using rule 48 (expression -> MINUS expression_negate .)
    IF              reduce using rule 48 (expression -> MINUS expression_negate .)
    PRINT           reduce using rule 48 (expression -> MINUS expression_negate .)
    RETURN          reduce using rule 48 (expression -> MINUS expression_negate .)
    CONTINUE        reduce using rule 48 (expression -> MINUS expression_negate .)
    BREAK           reduce using rule 48 (expression -> MINUS expression_negate .)
    ID              reduce using rule 48 (expression -> MINUS expression_negate .)


state 77

    (41) expression_negate -> expression .
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    NEQ             reduce using rule 41 (expression_negate -> expression .)
    EQ              reduce using rule 41 (expression_negate -> expression .)
    LE              reduce using rule 41 (expression_negate -> expression .)
    GE              reduce using rule 41 (expression_negate -> expression .)
    LT              reduce using rule 41 (expression_negate -> expression .)
    GT              reduce using rule 41 (expression_negate -> expression .)
    DOTDIV          reduce using rule 41 (expression_negate -> expression .)
    DOTMUL          reduce using rule 41 (expression_negate -> expression .)
    DIVIDE          reduce using rule 41 (expression_negate -> expression .)
    TIMES           reduce using rule 41 (expression_negate -> expression .)
    DOTSUB          reduce using rule 41 (expression_negate -> expression .)
    DOTADD          reduce using rule 41 (expression_negate -> expression .)
    MINUS           reduce using rule 41 (expression_negate -> expression .)
    PLUS            reduce using rule 41 (expression_negate -> expression .)
    ,               reduce using rule 41 (expression_negate -> expression .)
    ;               reduce using rule 41 (expression_negate -> expression .)
    )               reduce using rule 41 (expression_negate -> expression .)
    ]               reduce using rule 41 (expression_negate -> expression .)
    RANGE           reduce using rule 41 (expression_negate -> expression .)
    {               reduce using rule 41 (expression_negate -> expression .)
    WHILE           reduce using rule 41 (expression_negate -> expression .)
    FOR             reduce using rule 41 (expression_negate -> expression .)
    IF              reduce using rule 41 (expression_negate -> expression .)
    PRINT           reduce using rule 41 (expression_negate -> expression .)
    RETURN          reduce using rule 41 (expression_negate -> expression .)
    CONTINUE        reduce using rule 41 (expression_negate -> expression .)
    BREAK           reduce using rule 41 (expression_negate -> expression .)
    ID              reduce using rule 41 (expression_negate -> expression .)


state 78

    (20) factor -> expression_transpose TRANSPOSE .
    NEQ             reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    EQ              reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    LE              reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    GE              reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    LT              reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    GT              reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    DOTDIV          reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    DOTMUL          reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    DIVIDE          reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    TIMES           reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    DOTSUB          reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    DOTADD          reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    MINUS           reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    PLUS            reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    ,               reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    ;               reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    TRANSPOSE       reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    )               reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    ]               reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    RANGE           reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    {               reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    WHILE           reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    FOR             reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    IF              reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    PRINT           reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    RETURN          reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    CONTINUE        reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    BREAK           reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)
    ID              reduce using rule 20 (factor -> expression_transpose TRANSPOSE .)


state 79

    (22) factor -> [ value_list . ]
    (50) value_list -> value_list . , expression
    ]               shift and go to state 102
    ,               shift and go to state 61


state 80

    (23) factor -> ( expression . )
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    )               shift and go to state 103
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 81

    (43) matrix_function -> EYE ( . expression )
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 104
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 82

    (44) matrix_function -> ONES ( . expression )
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 105
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 83

    (45) matrix_function -> ZEROS ( . expression )
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 106
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 84

    (57) while_loop -> WHILE ( expression ) . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction ;
    (12) non_end_instruction -> . while_loop
    (13) non_end_instruction -> . for_loop
    (14) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . print_stmt
    (8) end_line_instruction -> . return_stmt
    (9) end_line_instruction -> . continue_stmt
    (10) end_line_instruction -> . break_stmt
    (11) end_line_instruction -> . assignment
    (57) while_loop -> . WHILE ( expression ) instruction
    (56) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (51) if_statement -> . IF ( expression ) instruction else_if_chain
    (52) if_statement -> . IF ( expression ) instruction
    (61) print_stmt -> . PRINT value_list
    (60) return_stmt -> . RETURN expression
    (59) continue_stmt -> . CONTINUE
    (58) break_stmt -> . BREAK
    (15) assignment -> . ID DIVASSIGN expression
    (16) assignment -> . ID MULASSIGN expression
    (17) assignment -> . ID SUBASSIGN expression
    (18) assignment -> . ID ADDASSIGN expression
    (19) assignment -> . ID ASSIGN expression
    {               shift and go to state 4
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    CONTINUE        shift and go to state 21
    BREAK           shift and go to state 22
    ID              shift and go to state 17

    instruction                    shift and go to state 107
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 10
    return_stmt                    shift and go to state 11
    continue_stmt                  shift and go to state 12
    break_stmt                     shift and go to state 13
    assignment                     shift and go to state 14

state 85

    (56) for_loop -> FOR ID ASSIGN expression . RANGE expression instruction
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    RANGE           shift and go to state 108
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 86

    (51) if_statement -> IF ( expression ) . instruction else_if_chain
    (52) if_statement -> IF ( expression ) . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction ;
    (12) non_end_instruction -> . while_loop
    (13) non_end_instruction -> . for_loop
    (14) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . print_stmt
    (8) end_line_instruction -> . return_stmt
    (9) end_line_instruction -> . continue_stmt
    (10) end_line_instruction -> . break_stmt
    (11) end_line_instruction -> . assignment
    (57) while_loop -> . WHILE ( expression ) instruction
    (56) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (51) if_statement -> . IF ( expression ) instruction else_if_chain
    (52) if_statement -> . IF ( expression ) instruction
    (61) print_stmt -> . PRINT value_list
    (60) return_stmt -> . RETURN expression
    (59) continue_stmt -> . CONTINUE
    (58) break_stmt -> . BREAK
    (15) assignment -> . ID DIVASSIGN expression
    (16) assignment -> . ID MULASSIGN expression
    (17) assignment -> . ID SUBASSIGN expression
    (18) assignment -> . ID ADDASSIGN expression
    (19) assignment -> . ID ASSIGN expression
    {               shift and go to state 4
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    CONTINUE        shift and go to state 21
    BREAK           shift and go to state 22
    ID              shift and go to state 17

    instruction                    shift and go to state 109
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 10
    return_stmt                    shift and go to state 11
    continue_stmt                  shift and go to state 12
    break_stmt                     shift and go to state 13
    assignment                     shift and go to state 14

state 87

    (50) value_list -> value_list , expression .
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    ,               reduce using rule 50 (value_list -> value_list , expression .)
    ;               reduce using rule 50 (value_list -> value_list , expression .)
    ]               reduce using rule 50 (value_list -> value_list , expression .)
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 88

    (27) expression_bin -> expression NEQ expression .
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    NEQ             reduce using rule 27 (expression_bin -> expression NEQ expression .)
    EQ              reduce using rule 27 (expression_bin -> expression NEQ expression .)
    LE              reduce using rule 27 (expression_bin -> expression NEQ expression .)
    GE              reduce using rule 27 (expression_bin -> expression NEQ expression .)
    LT              reduce using rule 27 (expression_bin -> expression NEQ expression .)
    GT              reduce using rule 27 (expression_bin -> expression NEQ expression .)
    ,               reduce using rule 27 (expression_bin -> expression NEQ expression .)
    ;               reduce using rule 27 (expression_bin -> expression NEQ expression .)
    )               reduce using rule 27 (expression_bin -> expression NEQ expression .)
    ]               reduce using rule 27 (expression_bin -> expression NEQ expression .)
    RANGE           reduce using rule 27 (expression_bin -> expression NEQ expression .)
    {               reduce using rule 27 (expression_bin -> expression NEQ expression .)
    WHILE           reduce using rule 27 (expression_bin -> expression NEQ expression .)
    FOR             reduce using rule 27 (expression_bin -> expression NEQ expression .)
    IF              reduce using rule 27 (expression_bin -> expression NEQ expression .)
    PRINT           reduce using rule 27 (expression_bin -> expression NEQ expression .)
    RETURN          reduce using rule 27 (expression_bin -> expression NEQ expression .)
    CONTINUE        reduce using rule 27 (expression_bin -> expression NEQ expression .)
    BREAK           reduce using rule 27 (expression_bin -> expression NEQ expression .)
    ID              reduce using rule 27 (expression_bin -> expression NEQ expression .)
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 89

    (28) expression_bin -> expression EQ expression .
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    NEQ             reduce using rule 28 (expression_bin -> expression EQ expression .)
    EQ              reduce using rule 28 (expression_bin -> expression EQ expression .)
    LE              reduce using rule 28 (expression_bin -> expression EQ expression .)
    GE              reduce using rule 28 (expression_bin -> expression EQ expression .)
    LT              reduce using rule 28 (expression_bin -> expression EQ expression .)
    GT              reduce using rule 28 (expression_bin -> expression EQ expression .)
    ,               reduce using rule 28 (expression_bin -> expression EQ expression .)
    ;               reduce using rule 28 (expression_bin -> expression EQ expression .)
    )               reduce using rule 28 (expression_bin -> expression EQ expression .)
    ]               reduce using rule 28 (expression_bin -> expression EQ expression .)
    RANGE           reduce using rule 28 (expression_bin -> expression EQ expression .)
    {               reduce using rule 28 (expression_bin -> expression EQ expression .)
    WHILE           reduce using rule 28 (expression_bin -> expression EQ expression .)
    FOR             reduce using rule 28 (expression_bin -> expression EQ expression .)
    IF              reduce using rule 28 (expression_bin -> expression EQ expression .)
    PRINT           reduce using rule 28 (expression_bin -> expression EQ expression .)
    RETURN          reduce using rule 28 (expression_bin -> expression EQ expression .)
    CONTINUE        reduce using rule 28 (expression_bin -> expression EQ expression .)
    BREAK           reduce using rule 28 (expression_bin -> expression EQ expression .)
    ID              reduce using rule 28 (expression_bin -> expression EQ expression .)
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 90

    (29) expression_bin -> expression LE expression .
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    NEQ             reduce using rule 29 (expression_bin -> expression LE expression .)
    EQ              reduce using rule 29 (expression_bin -> expression LE expression .)
    LE              reduce using rule 29 (expression_bin -> expression LE expression .)
    GE              reduce using rule 29 (expression_bin -> expression LE expression .)
    LT              reduce using rule 29 (expression_bin -> expression LE expression .)
    GT              reduce using rule 29 (expression_bin -> expression LE expression .)
    ,               reduce using rule 29 (expression_bin -> expression LE expression .)
    ;               reduce using rule 29 (expression_bin -> expression LE expression .)
    )               reduce using rule 29 (expression_bin -> expression LE expression .)
    ]               reduce using rule 29 (expression_bin -> expression LE expression .)
    RANGE           reduce using rule 29 (expression_bin -> expression LE expression .)
    {               reduce using rule 29 (expression_bin -> expression LE expression .)
    WHILE           reduce using rule 29 (expression_bin -> expression LE expression .)
    FOR             reduce using rule 29 (expression_bin -> expression LE expression .)
    IF              reduce using rule 29 (expression_bin -> expression LE expression .)
    PRINT           reduce using rule 29 (expression_bin -> expression LE expression .)
    RETURN          reduce using rule 29 (expression_bin -> expression LE expression .)
    CONTINUE        reduce using rule 29 (expression_bin -> expression LE expression .)
    BREAK           reduce using rule 29 (expression_bin -> expression LE expression .)
    ID              reduce using rule 29 (expression_bin -> expression LE expression .)
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 91

    (30) expression_bin -> expression GE expression .
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    NEQ             reduce using rule 30 (expression_bin -> expression GE expression .)
    EQ              reduce using rule 30 (expression_bin -> expression GE expression .)
    LE              reduce using rule 30 (expression_bin -> expression GE expression .)
    GE              reduce using rule 30 (expression_bin -> expression GE expression .)
    LT              reduce using rule 30 (expression_bin -> expression GE expression .)
    GT              reduce using rule 30 (expression_bin -> expression GE expression .)
    ,               reduce using rule 30 (expression_bin -> expression GE expression .)
    ;               reduce using rule 30 (expression_bin -> expression GE expression .)
    )               reduce using rule 30 (expression_bin -> expression GE expression .)
    ]               reduce using rule 30 (expression_bin -> expression GE expression .)
    RANGE           reduce using rule 30 (expression_bin -> expression GE expression .)
    {               reduce using rule 30 (expression_bin -> expression GE expression .)
    WHILE           reduce using rule 30 (expression_bin -> expression GE expression .)
    FOR             reduce using rule 30 (expression_bin -> expression GE expression .)
    IF              reduce using rule 30 (expression_bin -> expression GE expression .)
    PRINT           reduce using rule 30 (expression_bin -> expression GE expression .)
    RETURN          reduce using rule 30 (expression_bin -> expression GE expression .)
    CONTINUE        reduce using rule 30 (expression_bin -> expression GE expression .)
    BREAK           reduce using rule 30 (expression_bin -> expression GE expression .)
    ID              reduce using rule 30 (expression_bin -> expression GE expression .)
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 92

    (31) expression_bin -> expression LT expression .
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    NEQ             reduce using rule 31 (expression_bin -> expression LT expression .)
    EQ              reduce using rule 31 (expression_bin -> expression LT expression .)
    LE              reduce using rule 31 (expression_bin -> expression LT expression .)
    GE              reduce using rule 31 (expression_bin -> expression LT expression .)
    LT              reduce using rule 31 (expression_bin -> expression LT expression .)
    GT              reduce using rule 31 (expression_bin -> expression LT expression .)
    ,               reduce using rule 31 (expression_bin -> expression LT expression .)
    ;               reduce using rule 31 (expression_bin -> expression LT expression .)
    )               reduce using rule 31 (expression_bin -> expression LT expression .)
    ]               reduce using rule 31 (expression_bin -> expression LT expression .)
    RANGE           reduce using rule 31 (expression_bin -> expression LT expression .)
    {               reduce using rule 31 (expression_bin -> expression LT expression .)
    WHILE           reduce using rule 31 (expression_bin -> expression LT expression .)
    FOR             reduce using rule 31 (expression_bin -> expression LT expression .)
    IF              reduce using rule 31 (expression_bin -> expression LT expression .)
    PRINT           reduce using rule 31 (expression_bin -> expression LT expression .)
    RETURN          reduce using rule 31 (expression_bin -> expression LT expression .)
    CONTINUE        reduce using rule 31 (expression_bin -> expression LT expression .)
    BREAK           reduce using rule 31 (expression_bin -> expression LT expression .)
    ID              reduce using rule 31 (expression_bin -> expression LT expression .)
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 93

    (32) expression_bin -> expression GT expression .
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    NEQ             reduce using rule 32 (expression_bin -> expression GT expression .)
    EQ              reduce using rule 32 (expression_bin -> expression GT expression .)
    LE              reduce using rule 32 (expression_bin -> expression GT expression .)
    GE              reduce using rule 32 (expression_bin -> expression GT expression .)
    LT              reduce using rule 32 (expression_bin -> expression GT expression .)
    GT              reduce using rule 32 (expression_bin -> expression GT expression .)
    ,               reduce using rule 32 (expression_bin -> expression GT expression .)
    ;               reduce using rule 32 (expression_bin -> expression GT expression .)
    )               reduce using rule 32 (expression_bin -> expression GT expression .)
    ]               reduce using rule 32 (expression_bin -> expression GT expression .)
    RANGE           reduce using rule 32 (expression_bin -> expression GT expression .)
    {               reduce using rule 32 (expression_bin -> expression GT expression .)
    WHILE           reduce using rule 32 (expression_bin -> expression GT expression .)
    FOR             reduce using rule 32 (expression_bin -> expression GT expression .)
    IF              reduce using rule 32 (expression_bin -> expression GT expression .)
    PRINT           reduce using rule 32 (expression_bin -> expression GT expression .)
    RETURN          reduce using rule 32 (expression_bin -> expression GT expression .)
    CONTINUE        reduce using rule 32 (expression_bin -> expression GT expression .)
    BREAK           reduce using rule 32 (expression_bin -> expression GT expression .)
    ID              reduce using rule 32 (expression_bin -> expression GT expression .)
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 94

    (33) expression_bin -> expression DOTDIV expression .
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    NEQ             reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    EQ              reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    LE              reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    GE              reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    LT              reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    GT              reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    DIVIDE          reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    TIMES           reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    DOTADD          reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    MINUS           reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    PLUS            reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    ,               reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    ;               reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    )               reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    ]               reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    RANGE           reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    {               reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    WHILE           reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    FOR             reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    IF              reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    PRINT           reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    RETURN          reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    BREAK           reduce using rule 33 (expression_bin -> expression DOTDIV expression .)
    ID              reduce using rule 33 (expression_bin -> expression DOTDIV expression .)


state 95

    (34) expression_bin -> expression DOTMUL expression .
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    NEQ             reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    EQ              reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    LE              reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    GE              reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    LT              reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    GT              reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    DIVIDE          reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    TIMES           reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    DOTADD          reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    MINUS           reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    PLUS            reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    ,               reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    ;               reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    )               reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    ]               reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    RANGE           reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    {               reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    WHILE           reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    FOR             reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    IF              reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    PRINT           reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    RETURN          reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    BREAK           reduce using rule 34 (expression_bin -> expression DOTMUL expression .)
    ID              reduce using rule 34 (expression_bin -> expression DOTMUL expression .)


state 96

    (35) expression_bin -> expression DIVIDE expression .
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    NEQ             reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    EQ              reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    LE              reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    GE              reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    LT              reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    GT              reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    TIMES           reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    DOTSUB          reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    DOTADD          reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    MINUS           reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    PLUS            reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    ,               reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    ;               reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    )               reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    ]               reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    RANGE           reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    {               reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    WHILE           reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    FOR             reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    IF              reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    PRINT           reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    RETURN          reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    CONTINUE        reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    BREAK           reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    ID              reduce using rule 35 (expression_bin -> expression DIVIDE expression .)
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69


state 97

    (36) expression_bin -> expression TIMES expression .
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    NEQ             reduce using rule 36 (expression_bin -> expression TIMES expression .)
    EQ              reduce using rule 36 (expression_bin -> expression TIMES expression .)
    LE              reduce using rule 36 (expression_bin -> expression TIMES expression .)
    GE              reduce using rule 36 (expression_bin -> expression TIMES expression .)
    LT              reduce using rule 36 (expression_bin -> expression TIMES expression .)
    GT              reduce using rule 36 (expression_bin -> expression TIMES expression .)
    DIVIDE          reduce using rule 36 (expression_bin -> expression TIMES expression .)
    TIMES           reduce using rule 36 (expression_bin -> expression TIMES expression .)
    DOTSUB          reduce using rule 36 (expression_bin -> expression TIMES expression .)
    DOTADD          reduce using rule 36 (expression_bin -> expression TIMES expression .)
    MINUS           reduce using rule 36 (expression_bin -> expression TIMES expression .)
    PLUS            reduce using rule 36 (expression_bin -> expression TIMES expression .)
    ,               reduce using rule 36 (expression_bin -> expression TIMES expression .)
    ;               reduce using rule 36 (expression_bin -> expression TIMES expression .)
    )               reduce using rule 36 (expression_bin -> expression TIMES expression .)
    ]               reduce using rule 36 (expression_bin -> expression TIMES expression .)
    RANGE           reduce using rule 36 (expression_bin -> expression TIMES expression .)
    {               reduce using rule 36 (expression_bin -> expression TIMES expression .)
    WHILE           reduce using rule 36 (expression_bin -> expression TIMES expression .)
    FOR             reduce using rule 36 (expression_bin -> expression TIMES expression .)
    IF              reduce using rule 36 (expression_bin -> expression TIMES expression .)
    PRINT           reduce using rule 36 (expression_bin -> expression TIMES expression .)
    RETURN          reduce using rule 36 (expression_bin -> expression TIMES expression .)
    CONTINUE        reduce using rule 36 (expression_bin -> expression TIMES expression .)
    BREAK           reduce using rule 36 (expression_bin -> expression TIMES expression .)
    ID              reduce using rule 36 (expression_bin -> expression TIMES expression .)
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69


state 98

    (37) expression_bin -> expression DOTSUB expression .
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    NEQ             reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    EQ              reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    LE              reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    GE              reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    LT              reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    GT              reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    DOTADD          reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    MINUS           reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    PLUS            reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    ,               reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    ;               reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    )               reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    ]               reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    RANGE           reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    {               reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    WHILE           reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    FOR             reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    IF              reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    PRINT           reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    RETURN          reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    BREAK           reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    ID              reduce using rule 37 (expression_bin -> expression DOTSUB expression .)
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71


state 99

    (38) expression_bin -> expression DOTADD expression .
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    NEQ             reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    EQ              reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    LE              reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    GE              reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    LT              reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    GT              reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    DOTSUB          reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    DOTADD          reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    MINUS           reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    PLUS            reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    ,               reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    ;               reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    )               reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    ]               reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    RANGE           reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    {               reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    WHILE           reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    FOR             reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    IF              reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    PRINT           reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    RETURN          reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    CONTINUE        reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    BREAK           reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    ID              reduce using rule 38 (expression_bin -> expression DOTADD expression .)
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71


state 100

    (39) expression_bin -> expression MINUS expression .
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    NEQ             reduce using rule 39 (expression_bin -> expression MINUS expression .)
    EQ              reduce using rule 39 (expression_bin -> expression MINUS expression .)
    LE              reduce using rule 39 (expression_bin -> expression MINUS expression .)
    GE              reduce using rule 39 (expression_bin -> expression MINUS expression .)
    LT              reduce using rule 39 (expression_bin -> expression MINUS expression .)
    GT              reduce using rule 39 (expression_bin -> expression MINUS expression .)
    MINUS           reduce using rule 39 (expression_bin -> expression MINUS expression .)
    PLUS            reduce using rule 39 (expression_bin -> expression MINUS expression .)
    ,               reduce using rule 39 (expression_bin -> expression MINUS expression .)
    ;               reduce using rule 39 (expression_bin -> expression MINUS expression .)
    )               reduce using rule 39 (expression_bin -> expression MINUS expression .)
    ]               reduce using rule 39 (expression_bin -> expression MINUS expression .)
    RANGE           reduce using rule 39 (expression_bin -> expression MINUS expression .)
    {               reduce using rule 39 (expression_bin -> expression MINUS expression .)
    WHILE           reduce using rule 39 (expression_bin -> expression MINUS expression .)
    FOR             reduce using rule 39 (expression_bin -> expression MINUS expression .)
    IF              reduce using rule 39 (expression_bin -> expression MINUS expression .)
    PRINT           reduce using rule 39 (expression_bin -> expression MINUS expression .)
    RETURN          reduce using rule 39 (expression_bin -> expression MINUS expression .)
    CONTINUE        reduce using rule 39 (expression_bin -> expression MINUS expression .)
    BREAK           reduce using rule 39 (expression_bin -> expression MINUS expression .)
    ID              reduce using rule 39 (expression_bin -> expression MINUS expression .)
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73


state 101

    (40) expression_bin -> expression PLUS expression .
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    NEQ             reduce using rule 40 (expression_bin -> expression PLUS expression .)
    EQ              reduce using rule 40 (expression_bin -> expression PLUS expression .)
    LE              reduce using rule 40 (expression_bin -> expression PLUS expression .)
    GE              reduce using rule 40 (expression_bin -> expression PLUS expression .)
    LT              reduce using rule 40 (expression_bin -> expression PLUS expression .)
    GT              reduce using rule 40 (expression_bin -> expression PLUS expression .)
    MINUS           reduce using rule 40 (expression_bin -> expression PLUS expression .)
    PLUS            reduce using rule 40 (expression_bin -> expression PLUS expression .)
    ,               reduce using rule 40 (expression_bin -> expression PLUS expression .)
    ;               reduce using rule 40 (expression_bin -> expression PLUS expression .)
    )               reduce using rule 40 (expression_bin -> expression PLUS expression .)
    ]               reduce using rule 40 (expression_bin -> expression PLUS expression .)
    RANGE           reduce using rule 40 (expression_bin -> expression PLUS expression .)
    {               reduce using rule 40 (expression_bin -> expression PLUS expression .)
    WHILE           reduce using rule 40 (expression_bin -> expression PLUS expression .)
    FOR             reduce using rule 40 (expression_bin -> expression PLUS expression .)
    IF              reduce using rule 40 (expression_bin -> expression PLUS expression .)
    PRINT           reduce using rule 40 (expression_bin -> expression PLUS expression .)
    RETURN          reduce using rule 40 (expression_bin -> expression PLUS expression .)
    CONTINUE        reduce using rule 40 (expression_bin -> expression PLUS expression .)
    BREAK           reduce using rule 40 (expression_bin -> expression PLUS expression .)
    ID              reduce using rule 40 (expression_bin -> expression PLUS expression .)
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73


state 102

    (22) factor -> [ value_list ] .
    NEQ             reduce using rule 22 (factor -> [ value_list ] .)
    EQ              reduce using rule 22 (factor -> [ value_list ] .)
    LE              reduce using rule 22 (factor -> [ value_list ] .)
    GE              reduce using rule 22 (factor -> [ value_list ] .)
    LT              reduce using rule 22 (factor -> [ value_list ] .)
    GT              reduce using rule 22 (factor -> [ value_list ] .)
    DOTDIV          reduce using rule 22 (factor -> [ value_list ] .)
    DOTMUL          reduce using rule 22 (factor -> [ value_list ] .)
    DIVIDE          reduce using rule 22 (factor -> [ value_list ] .)
    TIMES           reduce using rule 22 (factor -> [ value_list ] .)
    DOTSUB          reduce using rule 22 (factor -> [ value_list ] .)
    DOTADD          reduce using rule 22 (factor -> [ value_list ] .)
    MINUS           reduce using rule 22 (factor -> [ value_list ] .)
    PLUS            reduce using rule 22 (factor -> [ value_list ] .)
    ,               reduce using rule 22 (factor -> [ value_list ] .)
    ;               reduce using rule 22 (factor -> [ value_list ] .)
    TRANSPOSE       reduce using rule 22 (factor -> [ value_list ] .)
    )               reduce using rule 22 (factor -> [ value_list ] .)
    ]               reduce using rule 22 (factor -> [ value_list ] .)
    RANGE           reduce using rule 22 (factor -> [ value_list ] .)
    {               reduce using rule 22 (factor -> [ value_list ] .)
    WHILE           reduce using rule 22 (factor -> [ value_list ] .)
    FOR             reduce using rule 22 (factor -> [ value_list ] .)
    IF              reduce using rule 22 (factor -> [ value_list ] .)
    PRINT           reduce using rule 22 (factor -> [ value_list ] .)
    RETURN          reduce using rule 22 (factor -> [ value_list ] .)
    CONTINUE        reduce using rule 22 (factor -> [ value_list ] .)
    BREAK           reduce using rule 22 (factor -> [ value_list ] .)
    ID              reduce using rule 22 (factor -> [ value_list ] .)


state 103

    (23) factor -> ( expression ) .
    NEQ             reduce using rule 23 (factor -> ( expression ) .)
    EQ              reduce using rule 23 (factor -> ( expression ) .)
    LE              reduce using rule 23 (factor -> ( expression ) .)
    GE              reduce using rule 23 (factor -> ( expression ) .)
    LT              reduce using rule 23 (factor -> ( expression ) .)
    GT              reduce using rule 23 (factor -> ( expression ) .)
    DOTDIV          reduce using rule 23 (factor -> ( expression ) .)
    DOTMUL          reduce using rule 23 (factor -> ( expression ) .)
    DIVIDE          reduce using rule 23 (factor -> ( expression ) .)
    TIMES           reduce using rule 23 (factor -> ( expression ) .)
    DOTSUB          reduce using rule 23 (factor -> ( expression ) .)
    DOTADD          reduce using rule 23 (factor -> ( expression ) .)
    MINUS           reduce using rule 23 (factor -> ( expression ) .)
    PLUS            reduce using rule 23 (factor -> ( expression ) .)
    ,               reduce using rule 23 (factor -> ( expression ) .)
    ;               reduce using rule 23 (factor -> ( expression ) .)
    TRANSPOSE       reduce using rule 23 (factor -> ( expression ) .)
    )               reduce using rule 23 (factor -> ( expression ) .)
    ]               reduce using rule 23 (factor -> ( expression ) .)
    RANGE           reduce using rule 23 (factor -> ( expression ) .)
    {               reduce using rule 23 (factor -> ( expression ) .)
    WHILE           reduce using rule 23 (factor -> ( expression ) .)
    FOR             reduce using rule 23 (factor -> ( expression ) .)
    IF              reduce using rule 23 (factor -> ( expression ) .)
    PRINT           reduce using rule 23 (factor -> ( expression ) .)
    RETURN          reduce using rule 23 (factor -> ( expression ) .)
    CONTINUE        reduce using rule 23 (factor -> ( expression ) .)
    BREAK           reduce using rule 23 (factor -> ( expression ) .)
    ID              reduce using rule 23 (factor -> ( expression ) .)


state 104

    (43) matrix_function -> EYE ( expression . )
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    )               shift and go to state 110
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 105

    (44) matrix_function -> ONES ( expression . )
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    )               shift and go to state 111
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 106

    (45) matrix_function -> ZEROS ( expression . )
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    )               shift and go to state 112
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 107

    (57) while_loop -> WHILE ( expression ) instruction .
    {               reduce using rule 57 (while_loop -> WHILE ( expression ) instruction .)
    WHILE           reduce using rule 57 (while_loop -> WHILE ( expression ) instruction .)
    FOR             reduce using rule 57 (while_loop -> WHILE ( expression ) instruction .)
    IF              reduce using rule 57 (while_loop -> WHILE ( expression ) instruction .)
    PRINT           reduce using rule 57 (while_loop -> WHILE ( expression ) instruction .)
    RETURN          reduce using rule 57 (while_loop -> WHILE ( expression ) instruction .)
    CONTINUE        reduce using rule 57 (while_loop -> WHILE ( expression ) instruction .)
    BREAK           reduce using rule 57 (while_loop -> WHILE ( expression ) instruction .)
    ID              reduce using rule 57 (while_loop -> WHILE ( expression ) instruction .)
    $end            reduce using rule 57 (while_loop -> WHILE ( expression ) instruction .)
    }               reduce using rule 57 (while_loop -> WHILE ( expression ) instruction .)
    ELSE            reduce using rule 57 (while_loop -> WHILE ( expression ) instruction .)
    ELSE_IF         reduce using rule 57 (while_loop -> WHILE ( expression ) instruction .)


state 108

    (56) for_loop -> FOR ID ASSIGN expression RANGE . expression instruction
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 113
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 109

    (51) if_statement -> IF ( expression ) instruction . else_if_chain
    (52) if_statement -> IF ( expression ) instruction .
    (53) else_if_chain -> . ELSE instruction
    (54) else_if_chain -> . ELSE_IF ( expression ) instruction else_if_chain
    (55) else_if_chain -> . ELSE_IF ( expression ) instruction
    {               reduce using rule 52 (if_statement -> IF ( expression ) instruction .)
    WHILE           reduce using rule 52 (if_statement -> IF ( expression ) instruction .)
    FOR             reduce using rule 52 (if_statement -> IF ( expression ) instruction .)
    IF              reduce using rule 52 (if_statement -> IF ( expression ) instruction .)
    PRINT           reduce using rule 52 (if_statement -> IF ( expression ) instruction .)
    RETURN          reduce using rule 52 (if_statement -> IF ( expression ) instruction .)
    CONTINUE        reduce using rule 52 (if_statement -> IF ( expression ) instruction .)
    BREAK           reduce using rule 52 (if_statement -> IF ( expression ) instruction .)
    ID              reduce using rule 52 (if_statement -> IF ( expression ) instruction .)
    $end            reduce using rule 52 (if_statement -> IF ( expression ) instruction .)
    }               reduce using rule 52 (if_statement -> IF ( expression ) instruction .)
    ELSE            shift and go to state 115
    ELSE_IF         shift and go to state 116

    else_if_chain                  shift and go to state 114

state 110

    (43) matrix_function -> EYE ( expression ) .
    NEQ             reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    EQ              reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    LE              reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    GE              reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    LT              reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    GT              reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    DOTDIV          reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    DOTMUL          reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    DIVIDE          reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    TIMES           reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    DOTSUB          reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    DOTADD          reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    MINUS           reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    PLUS            reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    ,               reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    ;               reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    TRANSPOSE       reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    )               reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    ]               reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    RANGE           reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    {               reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    WHILE           reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    FOR             reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    IF              reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    PRINT           reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    RETURN          reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    CONTINUE        reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    BREAK           reduce using rule 43 (matrix_function -> EYE ( expression ) .)
    ID              reduce using rule 43 (matrix_function -> EYE ( expression ) .)


state 111

    (44) matrix_function -> ONES ( expression ) .
    NEQ             reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    EQ              reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    LE              reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    GE              reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    LT              reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    GT              reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    DOTDIV          reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    DOTMUL          reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    DIVIDE          reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    TIMES           reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    DOTSUB          reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    DOTADD          reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    MINUS           reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    PLUS            reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    ,               reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    ;               reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    TRANSPOSE       reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    )               reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    ]               reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    RANGE           reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    {               reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    WHILE           reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    FOR             reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    IF              reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    PRINT           reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    RETURN          reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    CONTINUE        reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    BREAK           reduce using rule 44 (matrix_function -> ONES ( expression ) .)
    ID              reduce using rule 44 (matrix_function -> ONES ( expression ) .)


state 112

    (45) matrix_function -> ZEROS ( expression ) .
    NEQ             reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    EQ              reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    LE              reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    GE              reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    LT              reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    GT              reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    DOTDIV          reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    DOTMUL          reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    DIVIDE          reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    TIMES           reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    DOTSUB          reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    DOTADD          reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    MINUS           reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    PLUS            reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    ,               reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    ;               reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    TRANSPOSE       reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    )               reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    ]               reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    RANGE           reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    {               reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    WHILE           reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    FOR             reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    IF              reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    PRINT           reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    RETURN          reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    CONTINUE        reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    BREAK           reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)
    ID              reduce using rule 45 (matrix_function -> ZEROS ( expression ) .)


state 113

    (56) for_loop -> FOR ID ASSIGN expression RANGE expression . instruction
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    (4) instruction -> . { instructions }
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction ;
    (12) non_end_instruction -> . while_loop
    (13) non_end_instruction -> . for_loop
    (14) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . print_stmt
    (8) end_line_instruction -> . return_stmt
    (9) end_line_instruction -> . continue_stmt
    (10) end_line_instruction -> . break_stmt
    (11) end_line_instruction -> . assignment
    (57) while_loop -> . WHILE ( expression ) instruction
    (56) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (51) if_statement -> . IF ( expression ) instruction else_if_chain
    (52) if_statement -> . IF ( expression ) instruction
    (61) print_stmt -> . PRINT value_list
    (60) return_stmt -> . RETURN expression
    (59) continue_stmt -> . CONTINUE
    (58) break_stmt -> . BREAK
    (15) assignment -> . ID DIVASSIGN expression
    (16) assignment -> . ID MULASSIGN expression
    (17) assignment -> . ID SUBASSIGN expression
    (18) assignment -> . ID ADDASSIGN expression
    (19) assignment -> . ID ASSIGN expression
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75
    {               shift and go to state 4
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    CONTINUE        shift and go to state 21
    BREAK           shift and go to state 22
    ID              shift and go to state 17

    instruction                    shift and go to state 117
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 10
    return_stmt                    shift and go to state 11
    continue_stmt                  shift and go to state 12
    break_stmt                     shift and go to state 13
    assignment                     shift and go to state 14

state 114

    (51) if_statement -> IF ( expression ) instruction else_if_chain .
    {               reduce using rule 51 (if_statement -> IF ( expression ) instruction else_if_chain .)
    WHILE           reduce using rule 51 (if_statement -> IF ( expression ) instruction else_if_chain .)
    FOR             reduce using rule 51 (if_statement -> IF ( expression ) instruction else_if_chain .)
    IF              reduce using rule 51 (if_statement -> IF ( expression ) instruction else_if_chain .)
    PRINT           reduce using rule 51 (if_statement -> IF ( expression ) instruction else_if_chain .)
    RETURN          reduce using rule 51 (if_statement -> IF ( expression ) instruction else_if_chain .)
    CONTINUE        reduce using rule 51 (if_statement -> IF ( expression ) instruction else_if_chain .)
    BREAK           reduce using rule 51 (if_statement -> IF ( expression ) instruction else_if_chain .)
    ID              reduce using rule 51 (if_statement -> IF ( expression ) instruction else_if_chain .)
    $end            reduce using rule 51 (if_statement -> IF ( expression ) instruction else_if_chain .)
    }               reduce using rule 51 (if_statement -> IF ( expression ) instruction else_if_chain .)
    ELSE            reduce using rule 51 (if_statement -> IF ( expression ) instruction else_if_chain .)
    ELSE_IF         reduce using rule 51 (if_statement -> IF ( expression ) instruction else_if_chain .)


state 115

    (53) else_if_chain -> ELSE . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction ;
    (12) non_end_instruction -> . while_loop
    (13) non_end_instruction -> . for_loop
    (14) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . print_stmt
    (8) end_line_instruction -> . return_stmt
    (9) end_line_instruction -> . continue_stmt
    (10) end_line_instruction -> . break_stmt
    (11) end_line_instruction -> . assignment
    (57) while_loop -> . WHILE ( expression ) instruction
    (56) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (51) if_statement -> . IF ( expression ) instruction else_if_chain
    (52) if_statement -> . IF ( expression ) instruction
    (61) print_stmt -> . PRINT value_list
    (60) return_stmt -> . RETURN expression
    (59) continue_stmt -> . CONTINUE
    (58) break_stmt -> . BREAK
    (15) assignment -> . ID DIVASSIGN expression
    (16) assignment -> . ID MULASSIGN expression
    (17) assignment -> . ID SUBASSIGN expression
    (18) assignment -> . ID ADDASSIGN expression
    (19) assignment -> . ID ASSIGN expression
    {               shift and go to state 4
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    CONTINUE        shift and go to state 21
    BREAK           shift and go to state 22
    ID              shift and go to state 17

    instruction                    shift and go to state 118
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 10
    return_stmt                    shift and go to state 11
    continue_stmt                  shift and go to state 12
    break_stmt                     shift and go to state 13
    assignment                     shift and go to state 14

state 116

    (54) else_if_chain -> ELSE_IF . ( expression ) instruction else_if_chain
    (55) else_if_chain -> ELSE_IF . ( expression ) instruction
    (               shift and go to state 119


state 117

    (56) for_loop -> FOR ID ASSIGN expression RANGE expression instruction .
    {               reduce using rule 56 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    WHILE           reduce using rule 56 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    FOR             reduce using rule 56 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    IF              reduce using rule 56 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    PRINT           reduce using rule 56 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    RETURN          reduce using rule 56 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    CONTINUE        reduce using rule 56 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    BREAK           reduce using rule 56 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    ID              reduce using rule 56 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    $end            reduce using rule 56 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    }               reduce using rule 56 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    ELSE            reduce using rule 56 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    ELSE_IF         reduce using rule 56 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)


state 118

    (53) else_if_chain -> ELSE instruction .
    {               reduce using rule 53 (else_if_chain -> ELSE instruction .)
    WHILE           reduce using rule 53 (else_if_chain -> ELSE instruction .)
    FOR             reduce using rule 53 (else_if_chain -> ELSE instruction .)
    IF              reduce using rule 53 (else_if_chain -> ELSE instruction .)
    PRINT           reduce using rule 53 (else_if_chain -> ELSE instruction .)
    RETURN          reduce using rule 53 (else_if_chain -> ELSE instruction .)
    CONTINUE        reduce using rule 53 (else_if_chain -> ELSE instruction .)
    BREAK           reduce using rule 53 (else_if_chain -> ELSE instruction .)
    ID              reduce using rule 53 (else_if_chain -> ELSE instruction .)
    $end            reduce using rule 53 (else_if_chain -> ELSE instruction .)
    }               reduce using rule 53 (else_if_chain -> ELSE instruction .)
    ELSE            reduce using rule 53 (else_if_chain -> ELSE instruction .)
    ELSE_IF         reduce using rule 53 (else_if_chain -> ELSE instruction .)


state 119

    (54) else_if_chain -> ELSE_IF ( . expression ) instruction else_if_chain
    (55) else_if_chain -> ELSE_IF ( . expression ) instruction
    (46) expression -> . factor
    (47) expression -> . expression_bin
    (48) expression -> . MINUS expression_negate
    (20) factor -> . expression_transpose TRANSPOSE
    (21) factor -> . matrix_function
    (22) factor -> . [ value_list ]
    (23) factor -> . ( expression )
    (24) factor -> . STRING
    (25) factor -> . ID
    (26) factor -> . NUMBER
    (27) expression_bin -> . expression NEQ expression
    (28) expression_bin -> . expression EQ expression
    (29) expression_bin -> . expression LE expression
    (30) expression_bin -> . expression GE expression
    (31) expression_bin -> . expression LT expression
    (32) expression_bin -> . expression GT expression
    (33) expression_bin -> . expression DOTDIV expression
    (34) expression_bin -> . expression DOTMUL expression
    (35) expression_bin -> . expression DIVIDE expression
    (36) expression_bin -> . expression TIMES expression
    (37) expression_bin -> . expression DOTSUB expression
    (38) expression_bin -> . expression DOTADD expression
    (39) expression_bin -> . expression MINUS expression
    (40) expression_bin -> . expression PLUS expression
    (42) expression_transpose -> . factor
    (43) matrix_function -> . EYE ( expression )
    (44) matrix_function -> . ONES ( expression )
    (45) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 38
    [               shift and go to state 41
    (               shift and go to state 42
    STRING          shift and go to state 43
    ID              shift and go to state 44
    EYE             shift and go to state 46
    ONES            shift and go to state 47
    ZEROS           shift and go to state 48
    FLOATNUM        shift and go to state 49
    INTNUM          shift and go to state 50

    expression                     shift and go to state 120
    factor                         shift and go to state 36
    expression_bin                 shift and go to state 37
    expression_transpose           shift and go to state 39
    matrix_function                shift and go to state 40
    NUMBER                         shift and go to state 45

state 120

    (54) else_if_chain -> ELSE_IF ( expression . ) instruction else_if_chain
    (55) else_if_chain -> ELSE_IF ( expression . ) instruction
    (27) expression_bin -> expression . NEQ expression
    (28) expression_bin -> expression . EQ expression
    (29) expression_bin -> expression . LE expression
    (30) expression_bin -> expression . GE expression
    (31) expression_bin -> expression . LT expression
    (32) expression_bin -> expression . GT expression
    (33) expression_bin -> expression . DOTDIV expression
    (34) expression_bin -> expression . DOTMUL expression
    (35) expression_bin -> expression . DIVIDE expression
    (36) expression_bin -> expression . TIMES expression
    (37) expression_bin -> expression . DOTSUB expression
    (38) expression_bin -> expression . DOTADD expression
    (39) expression_bin -> expression . MINUS expression
    (40) expression_bin -> expression . PLUS expression
    )               shift and go to state 121
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTDIV          shift and go to state 68
    DOTMUL          shift and go to state 69
    DIVIDE          shift and go to state 70
    TIMES           shift and go to state 71
    DOTSUB          shift and go to state 72
    DOTADD          shift and go to state 73
    MINUS           shift and go to state 74
    PLUS            shift and go to state 75


state 121

    (54) else_if_chain -> ELSE_IF ( expression ) . instruction else_if_chain
    (55) else_if_chain -> ELSE_IF ( expression ) . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction ;
    (12) non_end_instruction -> . while_loop
    (13) non_end_instruction -> . for_loop
    (14) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . print_stmt
    (8) end_line_instruction -> . return_stmt
    (9) end_line_instruction -> . continue_stmt
    (10) end_line_instruction -> . break_stmt
    (11) end_line_instruction -> . assignment
    (57) while_loop -> . WHILE ( expression ) instruction
    (56) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (51) if_statement -> . IF ( expression ) instruction else_if_chain
    (52) if_statement -> . IF ( expression ) instruction
    (61) print_stmt -> . PRINT value_list
    (60) return_stmt -> . RETURN expression
    (59) continue_stmt -> . CONTINUE
    (58) break_stmt -> . BREAK
    (15) assignment -> . ID DIVASSIGN expression
    (16) assignment -> . ID MULASSIGN expression
    (17) assignment -> . ID SUBASSIGN expression
    (18) assignment -> . ID ADDASSIGN expression
    (19) assignment -> . ID ASSIGN expression
    {               shift and go to state 4
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    CONTINUE        shift and go to state 21
    BREAK           shift and go to state 22
    ID              shift and go to state 17

    instruction                    shift and go to state 122
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 10
    return_stmt                    shift and go to state 11
    continue_stmt                  shift and go to state 12
    break_stmt                     shift and go to state 13
    assignment                     shift and go to state 14

state 122

    (54) else_if_chain -> ELSE_IF ( expression ) instruction . else_if_chain
    (55) else_if_chain -> ELSE_IF ( expression ) instruction .
    (53) else_if_chain -> . ELSE instruction
    (54) else_if_chain -> . ELSE_IF ( expression ) instruction else_if_chain
    (55) else_if_chain -> . ELSE_IF ( expression ) instruction
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSE_IF resolved as shift
    {               reduce using rule 55 (else_if_chain -> ELSE_IF ( expression ) instruction .)
    WHILE           reduce using rule 55 (else_if_chain -> ELSE_IF ( expression ) instruction .)
    FOR             reduce using rule 55 (else_if_chain -> ELSE_IF ( expression ) instruction .)
    IF              reduce using rule 55 (else_if_chain -> ELSE_IF ( expression ) instruction .)
    PRINT           reduce using rule 55 (else_if_chain -> ELSE_IF ( expression ) instruction .)
    RETURN          reduce using rule 55 (else_if_chain -> ELSE_IF ( expression ) instruction .)
    CONTINUE        reduce using rule 55 (else_if_chain -> ELSE_IF ( expression ) instruction .)
    BREAK           reduce using rule 55 (else_if_chain -> ELSE_IF ( expression ) instruction .)
    ID              reduce using rule 55 (else_if_chain -> ELSE_IF ( expression ) instruction .)
    $end            reduce using rule 55 (else_if_chain -> ELSE_IF ( expression ) instruction .)
    }               reduce using rule 55 (else_if_chain -> ELSE_IF ( expression ) instruction .)
    ELSE            shift and go to state 115
    ELSE_IF         shift and go to state 116

    else_if_chain                  shift and go to state 123

state 123

    (54) else_if_chain -> ELSE_IF ( expression ) instruction else_if_chain .
    {               reduce using rule 54 (else_if_chain -> ELSE_IF ( expression ) instruction else_if_chain .)
    WHILE           reduce using rule 54 (else_if_chain -> ELSE_IF ( expression ) instruction else_if_chain .)
    FOR             reduce using rule 54 (else_if_chain -> ELSE_IF ( expression ) instruction else_if_chain .)
    IF              reduce using rule 54 (else_if_chain -> ELSE_IF ( expression ) instruction else_if_chain .)
    PRINT           reduce using rule 54 (else_if_chain -> ELSE_IF ( expression ) instruction else_if_chain .)
    RETURN          reduce using rule 54 (else_if_chain -> ELSE_IF ( expression ) instruction else_if_chain .)
    CONTINUE        reduce using rule 54 (else_if_chain -> ELSE_IF ( expression ) instruction else_if_chain .)
    BREAK           reduce using rule 54 (else_if_chain -> ELSE_IF ( expression ) instruction else_if_chain .)
    ID              reduce using rule 54 (else_if_chain -> ELSE_IF ( expression ) instruction else_if_chain .)
    $end            reduce using rule 54 (else_if_chain -> ELSE_IF ( expression ) instruction else_if_chain .)
    }               reduce using rule 54 (else_if_chain -> ELSE_IF ( expression ) instruction else_if_chain .)
    ELSE            reduce using rule 54 (else_if_chain -> ELSE_IF ( expression ) instruction else_if_chain .)
    ELSE_IF         reduce using rule 54 (else_if_chain -> ELSE_IF ( expression ) instruction else_if_chain .)


Conflicts:

shift/reduce conflict for ELSE in state 122 resolved as shift
shift/reduce conflict for ELSE_IF in state 122 resolved as shift