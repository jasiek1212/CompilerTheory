Grammar:

Rule 0     S' -> program
Rule 1     program -> instructions
Rule 2     instructions -> instructions instruction
Rule 3     instructions -> instruction
Rule 4     instruction -> { instructions }
Rule 5     instruction -> non_end_instruction
Rule 6     instruction -> end_line_instruction
Rule 7     end_line_instruction -> RETURN expression ;
Rule 8     end_line_instruction -> print_stmt
Rule 9     end_line_instruction -> CONTINUE ;
Rule 10    end_line_instruction -> BREAK ;
Rule 11    end_line_instruction -> assignment
Rule 12    end_line_instruction -> ;
Rule 13    non_end_instruction -> while_loop
Rule 14    non_end_instruction -> for_loop
Rule 15    non_end_instruction -> if_statement
Rule 16    assignment -> id_all DIVASSIGN expression ;
Rule 17    assignment -> id_all MULASSIGN expression ;
Rule 18    assignment -> id_all SUBASSIGN expression ;
Rule 19    assignment -> id_all ADDASSIGN expression ;
Rule 20    assignment -> id_all ASSIGN expression ;
Rule 21    id_all -> matrix_ref
Rule 22    id_all -> ID
Rule 23    string_of_ints -> string_of_ints , INTNUM
Rule 24    string_of_ints -> INTNUM
Rule 25    matrix_ref -> ID [ string_of_ints ]
Rule 26    factor -> expression_transpose TRANSPOSE  [precedence=right, level=9]
Rule 27    factor -> matrix_function
Rule 28    factor -> [ value_list ]
Rule 29    factor -> ( expression )
Rule 30    factor -> STRING
Rule 31    factor -> ID
Rule 32    factor -> NUMBER
Rule 33    expression_bin -> expression NEQ expression  [precedence=left, level=3]
Rule 34    expression_bin -> expression EQ expression  [precedence=left, level=3]
Rule 35    expression_bin -> expression LE expression  [precedence=left, level=3]
Rule 36    expression_bin -> expression GE expression  [precedence=left, level=3]
Rule 37    expression_bin -> expression LT expression  [precedence=left, level=3]
Rule 38    expression_bin -> expression GT expression  [precedence=left, level=3]
Rule 39    expression_bin -> expression DOTDIV expression  [precedence=left, level=7]
Rule 40    expression_bin -> expression DOTMUL expression  [precedence=left, level=7]
Rule 41    expression_bin -> expression DIVIDE expression  [precedence=left, level=6]
Rule 42    expression_bin -> expression TIMES expression  [precedence=left, level=6]
Rule 43    expression_bin -> expression DOTSUB expression  [precedence=left, level=5]
Rule 44    expression_bin -> expression DOTADD expression  [precedence=left, level=5]
Rule 45    expression_bin -> expression MINUS expression  [precedence=left, level=4]
Rule 46    expression_bin -> expression PLUS expression  [precedence=left, level=4]
Rule 47    expression_negate -> expression  [precedence=right, level=8]
Rule 48    expression_transpose -> factor  [precedence=right, level=9]
Rule 49    matrix_function -> EYE ( expression )
Rule 50    matrix_function -> ONES ( expression )
Rule 51    matrix_function -> ZEROS ( expression )
Rule 52    expression -> factor
Rule 53    expression -> expression_bin
Rule 54    expression -> MINUS expression_negate  [precedence=left, level=4]
Rule 55    value_list -> expression
Rule 56    value_list -> value_list , expression
Rule 57    if_statement -> IF ( expression ) instruction ELSE instruction  [precedence=nonassoc, level=2]
Rule 58    if_statement -> IF ( expression ) instruction  [precedence=nonassoc, level=1]
Rule 59    for_loop -> FOR ID ASSIGN expression RANGE expression instruction
Rule 60    while_loop -> WHILE ( expression ) instruction
Rule 61    print_stmt -> PRINT value_list ;
Rule 62    NUMBER -> FLOATNUM
Rule 63    NUMBER -> INTNUM

Terminals, with rules where they appear:

(                    : 29 49 50 51 57 58 60
)                    : 29 49 50 51 57 58 60
,                    : 23 56
;                    : 7 9 10 12 16 17 18 19 20 61
ADDASSIGN            : 19
ASSIGN               : 20 59
BREAK                : 10
CONTINUE             : 9
DIVASSIGN            : 16
DIVIDE               : 41
DOTADD               : 44
DOTDIV               : 39
DOTMUL               : 40
DOTSUB               : 43
ELSE                 : 57
EQ                   : 34
EYE                  : 49
FLOATNUM             : 62
FOR                  : 59
GE                   : 36
GT                   : 38
ID                   : 22 25 31 59
IF                   : 57 58
INTNUM               : 23 24 63
LE                   : 35
LT                   : 37
MINUS                : 45 54
MULASSIGN            : 17
NEQ                  : 33
ONES                 : 50
PLUS                 : 46
PRINT                : 61
RANGE                : 59
RETURN               : 7
STRING               : 30
SUBASSIGN            : 18
TIMES                : 42
TRANSPOSE            : 26
WHILE                : 60
ZEROS                : 51
[                    : 25 28
]                    : 25 28
error                : 
{                    : 4
}                    : 4

Nonterminals, with rules where they appear:

NUMBER               : 32
assignment           : 11
end_line_instruction : 6
expression           : 7 16 17 18 19 20 29 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 49 50 51 55 56 57 58 59 59 60
expression_bin       : 53
expression_negate    : 54
expression_transpose : 26
factor               : 48 52
for_loop             : 14
id_all               : 16 17 18 19 20
if_statement         : 15
instruction          : 2 3 57 57 58 59 60
instructions         : 1 2 4
matrix_function      : 27
matrix_ref           : 21
non_end_instruction  : 5
print_stmt           : 8
program              : 0
string_of_ints       : 23 25
value_list           : 28 56 61
while_loop           : 13


state 0

    (0) S' -> . program
    (1) program -> . instructions
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction
    (13) non_end_instruction -> . while_loop
    (14) non_end_instruction -> . for_loop
    (15) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . RETURN expression ;
    (8) end_line_instruction -> . print_stmt
    (9) end_line_instruction -> . CONTINUE ;
    (10) end_line_instruction -> . BREAK ;
    (11) end_line_instruction -> . assignment
    (12) end_line_instruction -> . ;
    (60) while_loop -> . WHILE ( expression ) instruction
    (59) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (57) if_statement -> . IF ( expression ) instruction ELSE instruction
    (58) if_statement -> . IF ( expression ) instruction
    (61) print_stmt -> . PRINT value_list ;
    (16) assignment -> . id_all DIVASSIGN expression ;
    (17) assignment -> . id_all MULASSIGN expression ;
    (18) assignment -> . id_all SUBASSIGN expression ;
    (19) assignment -> . id_all ADDASSIGN expression ;
    (20) assignment -> . id_all ASSIGN expression ;
    (21) id_all -> . matrix_ref
    (22) id_all -> . ID
    (25) matrix_ref -> . ID [ string_of_ints ]
    {               shift and go to state 4
    RETURN          shift and go to state 10
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ;               shift and go to state 11
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    IF              shift and go to state 19
    PRINT           shift and go to state 20
    ID              shift and go to state 18

    program                        shift and go to state 1
    instructions                   shift and go to state 2
    instruction                    shift and go to state 3
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 12
    assignment                     shift and go to state 15
    id_all                         shift and go to state 21
    matrix_ref                     shift and go to state 22

state 1

    (0) S' -> program .


state 2

    (1) program -> instructions .
    (2) instructions -> instructions . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction
    (13) non_end_instruction -> . while_loop
    (14) non_end_instruction -> . for_loop
    (15) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . RETURN expression ;
    (8) end_line_instruction -> . print_stmt
    (9) end_line_instruction -> . CONTINUE ;
    (10) end_line_instruction -> . BREAK ;
    (11) end_line_instruction -> . assignment
    (12) end_line_instruction -> . ;
    (60) while_loop -> . WHILE ( expression ) instruction
    (59) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (57) if_statement -> . IF ( expression ) instruction ELSE instruction
    (58) if_statement -> . IF ( expression ) instruction
    (61) print_stmt -> . PRINT value_list ;
    (16) assignment -> . id_all DIVASSIGN expression ;
    (17) assignment -> . id_all MULASSIGN expression ;
    (18) assignment -> . id_all SUBASSIGN expression ;
    (19) assignment -> . id_all ADDASSIGN expression ;
    (20) assignment -> . id_all ASSIGN expression ;
    (21) id_all -> . matrix_ref
    (22) id_all -> . ID
    (25) matrix_ref -> . ID [ string_of_ints ]
    $end            reduce using rule 1 (program -> instructions .)
    {               shift and go to state 4
    RETURN          shift and go to state 10
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ;               shift and go to state 11
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    IF              shift and go to state 19
    PRINT           shift and go to state 20
    ID              shift and go to state 18

    instruction                    shift and go to state 23
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 12
    assignment                     shift and go to state 15
    id_all                         shift and go to state 21
    matrix_ref                     shift and go to state 22

state 3

    (3) instructions -> instruction .
    {               reduce using rule 3 (instructions -> instruction .)
    RETURN          reduce using rule 3 (instructions -> instruction .)
    CONTINUE        reduce using rule 3 (instructions -> instruction .)
    BREAK           reduce using rule 3 (instructions -> instruction .)
    ;               reduce using rule 3 (instructions -> instruction .)
    WHILE           reduce using rule 3 (instructions -> instruction .)
    FOR             reduce using rule 3 (instructions -> instruction .)
    IF              reduce using rule 3 (instructions -> instruction .)
    PRINT           reduce using rule 3 (instructions -> instruction .)
    ID              reduce using rule 3 (instructions -> instruction .)
    $end            reduce using rule 3 (instructions -> instruction .)
    }               reduce using rule 3 (instructions -> instruction .)


state 4

    (4) instruction -> { . instructions }
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction
    (13) non_end_instruction -> . while_loop
    (14) non_end_instruction -> . for_loop
    (15) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . RETURN expression ;
    (8) end_line_instruction -> . print_stmt
    (9) end_line_instruction -> . CONTINUE ;
    (10) end_line_instruction -> . BREAK ;
    (11) end_line_instruction -> . assignment
    (12) end_line_instruction -> . ;
    (60) while_loop -> . WHILE ( expression ) instruction
    (59) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (57) if_statement -> . IF ( expression ) instruction ELSE instruction
    (58) if_statement -> . IF ( expression ) instruction
    (61) print_stmt -> . PRINT value_list ;
    (16) assignment -> . id_all DIVASSIGN expression ;
    (17) assignment -> . id_all MULASSIGN expression ;
    (18) assignment -> . id_all SUBASSIGN expression ;
    (19) assignment -> . id_all ADDASSIGN expression ;
    (20) assignment -> . id_all ASSIGN expression ;
    (21) id_all -> . matrix_ref
    (22) id_all -> . ID
    (25) matrix_ref -> . ID [ string_of_ints ]
    {               shift and go to state 4
    RETURN          shift and go to state 10
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ;               shift and go to state 11
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    IF              shift and go to state 19
    PRINT           shift and go to state 20
    ID              shift and go to state 18

    instructions                   shift and go to state 24
    instruction                    shift and go to state 3
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 12
    assignment                     shift and go to state 15
    id_all                         shift and go to state 21
    matrix_ref                     shift and go to state 22

state 5

    (5) instruction -> non_end_instruction .
    {               reduce using rule 5 (instruction -> non_end_instruction .)
    RETURN          reduce using rule 5 (instruction -> non_end_instruction .)
    CONTINUE        reduce using rule 5 (instruction -> non_end_instruction .)
    BREAK           reduce using rule 5 (instruction -> non_end_instruction .)
    ;               reduce using rule 5 (instruction -> non_end_instruction .)
    WHILE           reduce using rule 5 (instruction -> non_end_instruction .)
    FOR             reduce using rule 5 (instruction -> non_end_instruction .)
    IF              reduce using rule 5 (instruction -> non_end_instruction .)
    PRINT           reduce using rule 5 (instruction -> non_end_instruction .)
    ID              reduce using rule 5 (instruction -> non_end_instruction .)
    $end            reduce using rule 5 (instruction -> non_end_instruction .)
    }               reduce using rule 5 (instruction -> non_end_instruction .)
    ELSE            reduce using rule 5 (instruction -> non_end_instruction .)


state 6

    (6) instruction -> end_line_instruction .
    {               reduce using rule 6 (instruction -> end_line_instruction .)
    RETURN          reduce using rule 6 (instruction -> end_line_instruction .)
    CONTINUE        reduce using rule 6 (instruction -> end_line_instruction .)
    BREAK           reduce using rule 6 (instruction -> end_line_instruction .)
    ;               reduce using rule 6 (instruction -> end_line_instruction .)
    WHILE           reduce using rule 6 (instruction -> end_line_instruction .)
    FOR             reduce using rule 6 (instruction -> end_line_instruction .)
    IF              reduce using rule 6 (instruction -> end_line_instruction .)
    PRINT           reduce using rule 6 (instruction -> end_line_instruction .)
    ID              reduce using rule 6 (instruction -> end_line_instruction .)
    $end            reduce using rule 6 (instruction -> end_line_instruction .)
    }               reduce using rule 6 (instruction -> end_line_instruction .)
    ELSE            reduce using rule 6 (instruction -> end_line_instruction .)


state 7

    (13) non_end_instruction -> while_loop .
    {               reduce using rule 13 (non_end_instruction -> while_loop .)
    RETURN          reduce using rule 13 (non_end_instruction -> while_loop .)
    CONTINUE        reduce using rule 13 (non_end_instruction -> while_loop .)
    BREAK           reduce using rule 13 (non_end_instruction -> while_loop .)
    ;               reduce using rule 13 (non_end_instruction -> while_loop .)
    WHILE           reduce using rule 13 (non_end_instruction -> while_loop .)
    FOR             reduce using rule 13 (non_end_instruction -> while_loop .)
    IF              reduce using rule 13 (non_end_instruction -> while_loop .)
    PRINT           reduce using rule 13 (non_end_instruction -> while_loop .)
    ID              reduce using rule 13 (non_end_instruction -> while_loop .)
    $end            reduce using rule 13 (non_end_instruction -> while_loop .)
    }               reduce using rule 13 (non_end_instruction -> while_loop .)
    ELSE            reduce using rule 13 (non_end_instruction -> while_loop .)


state 8

    (14) non_end_instruction -> for_loop .
    {               reduce using rule 14 (non_end_instruction -> for_loop .)
    RETURN          reduce using rule 14 (non_end_instruction -> for_loop .)
    CONTINUE        reduce using rule 14 (non_end_instruction -> for_loop .)
    BREAK           reduce using rule 14 (non_end_instruction -> for_loop .)
    ;               reduce using rule 14 (non_end_instruction -> for_loop .)
    WHILE           reduce using rule 14 (non_end_instruction -> for_loop .)
    FOR             reduce using rule 14 (non_end_instruction -> for_loop .)
    IF              reduce using rule 14 (non_end_instruction -> for_loop .)
    PRINT           reduce using rule 14 (non_end_instruction -> for_loop .)
    ID              reduce using rule 14 (non_end_instruction -> for_loop .)
    $end            reduce using rule 14 (non_end_instruction -> for_loop .)
    }               reduce using rule 14 (non_end_instruction -> for_loop .)
    ELSE            reduce using rule 14 (non_end_instruction -> for_loop .)


state 9

    (15) non_end_instruction -> if_statement .
    {               reduce using rule 15 (non_end_instruction -> if_statement .)
    RETURN          reduce using rule 15 (non_end_instruction -> if_statement .)
    CONTINUE        reduce using rule 15 (non_end_instruction -> if_statement .)
    BREAK           reduce using rule 15 (non_end_instruction -> if_statement .)
    ;               reduce using rule 15 (non_end_instruction -> if_statement .)
    WHILE           reduce using rule 15 (non_end_instruction -> if_statement .)
    FOR             reduce using rule 15 (non_end_instruction -> if_statement .)
    IF              reduce using rule 15 (non_end_instruction -> if_statement .)
    PRINT           reduce using rule 15 (non_end_instruction -> if_statement .)
    ID              reduce using rule 15 (non_end_instruction -> if_statement .)
    $end            reduce using rule 15 (non_end_instruction -> if_statement .)
    }               reduce using rule 15 (non_end_instruction -> if_statement .)
    ELSE            reduce using rule 15 (non_end_instruction -> if_statement .)


state 10

    (7) end_line_instruction -> RETURN . expression ;
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 25
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 11

    (12) end_line_instruction -> ; .
    {               reduce using rule 12 (end_line_instruction -> ; .)
    RETURN          reduce using rule 12 (end_line_instruction -> ; .)
    CONTINUE        reduce using rule 12 (end_line_instruction -> ; .)
    BREAK           reduce using rule 12 (end_line_instruction -> ; .)
    ;               reduce using rule 12 (end_line_instruction -> ; .)
    WHILE           reduce using rule 12 (end_line_instruction -> ; .)
    FOR             reduce using rule 12 (end_line_instruction -> ; .)
    IF              reduce using rule 12 (end_line_instruction -> ; .)
    PRINT           reduce using rule 12 (end_line_instruction -> ; .)
    ID              reduce using rule 12 (end_line_instruction -> ; .)
    $end            reduce using rule 12 (end_line_instruction -> ; .)
    }               reduce using rule 12 (end_line_instruction -> ; .)
    ELSE            reduce using rule 12 (end_line_instruction -> ; .)


state 12

    (8) end_line_instruction -> print_stmt .
    {               reduce using rule 8 (end_line_instruction -> print_stmt .)
    RETURN          reduce using rule 8 (end_line_instruction -> print_stmt .)
    CONTINUE        reduce using rule 8 (end_line_instruction -> print_stmt .)
    BREAK           reduce using rule 8 (end_line_instruction -> print_stmt .)
    ;               reduce using rule 8 (end_line_instruction -> print_stmt .)
    WHILE           reduce using rule 8 (end_line_instruction -> print_stmt .)
    FOR             reduce using rule 8 (end_line_instruction -> print_stmt .)
    IF              reduce using rule 8 (end_line_instruction -> print_stmt .)
    PRINT           reduce using rule 8 (end_line_instruction -> print_stmt .)
    ID              reduce using rule 8 (end_line_instruction -> print_stmt .)
    $end            reduce using rule 8 (end_line_instruction -> print_stmt .)
    }               reduce using rule 8 (end_line_instruction -> print_stmt .)
    ELSE            reduce using rule 8 (end_line_instruction -> print_stmt .)


state 13

    (9) end_line_instruction -> CONTINUE . ;
    ;               shift and go to state 41


state 14

    (10) end_line_instruction -> BREAK . ;
    ;               shift and go to state 42


state 15

    (11) end_line_instruction -> assignment .
    {               reduce using rule 11 (end_line_instruction -> assignment .)
    RETURN          reduce using rule 11 (end_line_instruction -> assignment .)
    CONTINUE        reduce using rule 11 (end_line_instruction -> assignment .)
    BREAK           reduce using rule 11 (end_line_instruction -> assignment .)
    ;               reduce using rule 11 (end_line_instruction -> assignment .)
    WHILE           reduce using rule 11 (end_line_instruction -> assignment .)
    FOR             reduce using rule 11 (end_line_instruction -> assignment .)
    IF              reduce using rule 11 (end_line_instruction -> assignment .)
    PRINT           reduce using rule 11 (end_line_instruction -> assignment .)
    ID              reduce using rule 11 (end_line_instruction -> assignment .)
    $end            reduce using rule 11 (end_line_instruction -> assignment .)
    }               reduce using rule 11 (end_line_instruction -> assignment .)
    ELSE            reduce using rule 11 (end_line_instruction -> assignment .)


state 16

    (60) while_loop -> WHILE . ( expression ) instruction
    (               shift and go to state 43


state 17

    (59) for_loop -> FOR . ID ASSIGN expression RANGE expression instruction
    ID              shift and go to state 44


state 18

    (22) id_all -> ID .
    (25) matrix_ref -> ID . [ string_of_ints ]
    DIVASSIGN       reduce using rule 22 (id_all -> ID .)
    MULASSIGN       reduce using rule 22 (id_all -> ID .)
    SUBASSIGN       reduce using rule 22 (id_all -> ID .)
    ADDASSIGN       reduce using rule 22 (id_all -> ID .)
    ASSIGN          reduce using rule 22 (id_all -> ID .)
    [               shift and go to state 45


state 19

    (57) if_statement -> IF . ( expression ) instruction ELSE instruction
    (58) if_statement -> IF . ( expression ) instruction
    (               shift and go to state 46


state 20

    (61) print_stmt -> PRINT . value_list ;
    (55) value_list -> . expression
    (56) value_list -> . value_list , expression
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    value_list                     shift and go to state 47
    expression                     shift and go to state 48
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 21

    (16) assignment -> id_all . DIVASSIGN expression ;
    (17) assignment -> id_all . MULASSIGN expression ;
    (18) assignment -> id_all . SUBASSIGN expression ;
    (19) assignment -> id_all . ADDASSIGN expression ;
    (20) assignment -> id_all . ASSIGN expression ;
    DIVASSIGN       shift and go to state 49
    MULASSIGN       shift and go to state 50
    SUBASSIGN       shift and go to state 51
    ADDASSIGN       shift and go to state 52
    ASSIGN          shift and go to state 53


state 22

    (21) id_all -> matrix_ref .
    DIVASSIGN       reduce using rule 21 (id_all -> matrix_ref .)
    MULASSIGN       reduce using rule 21 (id_all -> matrix_ref .)
    SUBASSIGN       reduce using rule 21 (id_all -> matrix_ref .)
    ADDASSIGN       reduce using rule 21 (id_all -> matrix_ref .)
    ASSIGN          reduce using rule 21 (id_all -> matrix_ref .)


state 23

    (2) instructions -> instructions instruction .
    {               reduce using rule 2 (instructions -> instructions instruction .)
    RETURN          reduce using rule 2 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 2 (instructions -> instructions instruction .)
    BREAK           reduce using rule 2 (instructions -> instructions instruction .)
    ;               reduce using rule 2 (instructions -> instructions instruction .)
    WHILE           reduce using rule 2 (instructions -> instructions instruction .)
    FOR             reduce using rule 2 (instructions -> instructions instruction .)
    IF              reduce using rule 2 (instructions -> instructions instruction .)
    PRINT           reduce using rule 2 (instructions -> instructions instruction .)
    ID              reduce using rule 2 (instructions -> instructions instruction .)
    $end            reduce using rule 2 (instructions -> instructions instruction .)
    }               reduce using rule 2 (instructions -> instructions instruction .)


state 24

    (4) instruction -> { instructions . }
    (2) instructions -> instructions . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction
    (13) non_end_instruction -> . while_loop
    (14) non_end_instruction -> . for_loop
    (15) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . RETURN expression ;
    (8) end_line_instruction -> . print_stmt
    (9) end_line_instruction -> . CONTINUE ;
    (10) end_line_instruction -> . BREAK ;
    (11) end_line_instruction -> . assignment
    (12) end_line_instruction -> . ;
    (60) while_loop -> . WHILE ( expression ) instruction
    (59) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (57) if_statement -> . IF ( expression ) instruction ELSE instruction
    (58) if_statement -> . IF ( expression ) instruction
    (61) print_stmt -> . PRINT value_list ;
    (16) assignment -> . id_all DIVASSIGN expression ;
    (17) assignment -> . id_all MULASSIGN expression ;
    (18) assignment -> . id_all SUBASSIGN expression ;
    (19) assignment -> . id_all ADDASSIGN expression ;
    (20) assignment -> . id_all ASSIGN expression ;
    (21) id_all -> . matrix_ref
    (22) id_all -> . ID
    (25) matrix_ref -> . ID [ string_of_ints ]
    }               shift and go to state 54
    {               shift and go to state 4
    RETURN          shift and go to state 10
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ;               shift and go to state 11
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    IF              shift and go to state 19
    PRINT           shift and go to state 20
    ID              shift and go to state 18

    instruction                    shift and go to state 23
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 12
    assignment                     shift and go to state 15
    id_all                         shift and go to state 21
    matrix_ref                     shift and go to state 22

state 25

    (7) end_line_instruction -> RETURN expression . ;
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    ;               shift and go to state 55
    NEQ             shift and go to state 56
    EQ              shift and go to state 57
    LE              shift and go to state 58
    GE              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67
    MINUS           shift and go to state 68
    PLUS            shift and go to state 69


state 26

    (52) expression -> factor .
    (48) expression_transpose -> factor .
    ;               reduce using rule 52 (expression -> factor .)
    NEQ             reduce using rule 52 (expression -> factor .)
    EQ              reduce using rule 52 (expression -> factor .)
    LE              reduce using rule 52 (expression -> factor .)
    GE              reduce using rule 52 (expression -> factor .)
    LT              reduce using rule 52 (expression -> factor .)
    GT              reduce using rule 52 (expression -> factor .)
    DOTDIV          reduce using rule 52 (expression -> factor .)
    DOTMUL          reduce using rule 52 (expression -> factor .)
    DIVIDE          reduce using rule 52 (expression -> factor .)
    TIMES           reduce using rule 52 (expression -> factor .)
    DOTSUB          reduce using rule 52 (expression -> factor .)
    DOTADD          reduce using rule 52 (expression -> factor .)
    MINUS           reduce using rule 52 (expression -> factor .)
    PLUS            reduce using rule 52 (expression -> factor .)
    ,               reduce using rule 52 (expression -> factor .)
    ]               reduce using rule 52 (expression -> factor .)
    )               reduce using rule 52 (expression -> factor .)
    RANGE           reduce using rule 52 (expression -> factor .)
    {               reduce using rule 52 (expression -> factor .)
    RETURN          reduce using rule 52 (expression -> factor .)
    CONTINUE        reduce using rule 52 (expression -> factor .)
    BREAK           reduce using rule 52 (expression -> factor .)
    WHILE           reduce using rule 52 (expression -> factor .)
    FOR             reduce using rule 52 (expression -> factor .)
    IF              reduce using rule 52 (expression -> factor .)
    PRINT           reduce using rule 52 (expression -> factor .)
    ID              reduce using rule 52 (expression -> factor .)
    TRANSPOSE       reduce using rule 48 (expression_transpose -> factor .)


state 27

    (53) expression -> expression_bin .
    ;               reduce using rule 53 (expression -> expression_bin .)
    NEQ             reduce using rule 53 (expression -> expression_bin .)
    EQ              reduce using rule 53 (expression -> expression_bin .)
    LE              reduce using rule 53 (expression -> expression_bin .)
    GE              reduce using rule 53 (expression -> expression_bin .)
    LT              reduce using rule 53 (expression -> expression_bin .)
    GT              reduce using rule 53 (expression -> expression_bin .)
    DOTDIV          reduce using rule 53 (expression -> expression_bin .)
    DOTMUL          reduce using rule 53 (expression -> expression_bin .)
    DIVIDE          reduce using rule 53 (expression -> expression_bin .)
    TIMES           reduce using rule 53 (expression -> expression_bin .)
    DOTSUB          reduce using rule 53 (expression -> expression_bin .)
    DOTADD          reduce using rule 53 (expression -> expression_bin .)
    MINUS           reduce using rule 53 (expression -> expression_bin .)
    PLUS            reduce using rule 53 (expression -> expression_bin .)
    ,               reduce using rule 53 (expression -> expression_bin .)
    ]               reduce using rule 53 (expression -> expression_bin .)
    )               reduce using rule 53 (expression -> expression_bin .)
    RANGE           reduce using rule 53 (expression -> expression_bin .)
    {               reduce using rule 53 (expression -> expression_bin .)
    RETURN          reduce using rule 53 (expression -> expression_bin .)
    CONTINUE        reduce using rule 53 (expression -> expression_bin .)
    BREAK           reduce using rule 53 (expression -> expression_bin .)
    WHILE           reduce using rule 53 (expression -> expression_bin .)
    FOR             reduce using rule 53 (expression -> expression_bin .)
    IF              reduce using rule 53 (expression -> expression_bin .)
    PRINT           reduce using rule 53 (expression -> expression_bin .)
    ID              reduce using rule 53 (expression -> expression_bin .)


state 28

    (54) expression -> MINUS . expression_negate
    (47) expression_negate -> . expression
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression_negate              shift and go to state 70
    expression                     shift and go to state 71
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 29

    (26) factor -> expression_transpose . TRANSPOSE
    TRANSPOSE       shift and go to state 72


state 30

    (27) factor -> matrix_function .
    ;               reduce using rule 27 (factor -> matrix_function .)
    NEQ             reduce using rule 27 (factor -> matrix_function .)
    EQ              reduce using rule 27 (factor -> matrix_function .)
    LE              reduce using rule 27 (factor -> matrix_function .)
    GE              reduce using rule 27 (factor -> matrix_function .)
    LT              reduce using rule 27 (factor -> matrix_function .)
    GT              reduce using rule 27 (factor -> matrix_function .)
    DOTDIV          reduce using rule 27 (factor -> matrix_function .)
    DOTMUL          reduce using rule 27 (factor -> matrix_function .)
    DIVIDE          reduce using rule 27 (factor -> matrix_function .)
    TIMES           reduce using rule 27 (factor -> matrix_function .)
    DOTSUB          reduce using rule 27 (factor -> matrix_function .)
    DOTADD          reduce using rule 27 (factor -> matrix_function .)
    MINUS           reduce using rule 27 (factor -> matrix_function .)
    PLUS            reduce using rule 27 (factor -> matrix_function .)
    TRANSPOSE       reduce using rule 27 (factor -> matrix_function .)
    ,               reduce using rule 27 (factor -> matrix_function .)
    ]               reduce using rule 27 (factor -> matrix_function .)
    )               reduce using rule 27 (factor -> matrix_function .)
    RANGE           reduce using rule 27 (factor -> matrix_function .)
    {               reduce using rule 27 (factor -> matrix_function .)
    RETURN          reduce using rule 27 (factor -> matrix_function .)
    CONTINUE        reduce using rule 27 (factor -> matrix_function .)
    BREAK           reduce using rule 27 (factor -> matrix_function .)
    WHILE           reduce using rule 27 (factor -> matrix_function .)
    FOR             reduce using rule 27 (factor -> matrix_function .)
    IF              reduce using rule 27 (factor -> matrix_function .)
    PRINT           reduce using rule 27 (factor -> matrix_function .)
    ID              reduce using rule 27 (factor -> matrix_function .)


state 31

    (28) factor -> [ . value_list ]
    (55) value_list -> . expression
    (56) value_list -> . value_list , expression
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    value_list                     shift and go to state 73
    expression                     shift and go to state 48
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 32

    (29) factor -> ( . expression )
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 74
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 33

    (30) factor -> STRING .
    ;               reduce using rule 30 (factor -> STRING .)
    NEQ             reduce using rule 30 (factor -> STRING .)
    EQ              reduce using rule 30 (factor -> STRING .)
    LE              reduce using rule 30 (factor -> STRING .)
    GE              reduce using rule 30 (factor -> STRING .)
    LT              reduce using rule 30 (factor -> STRING .)
    GT              reduce using rule 30 (factor -> STRING .)
    DOTDIV          reduce using rule 30 (factor -> STRING .)
    DOTMUL          reduce using rule 30 (factor -> STRING .)
    DIVIDE          reduce using rule 30 (factor -> STRING .)
    TIMES           reduce using rule 30 (factor -> STRING .)
    DOTSUB          reduce using rule 30 (factor -> STRING .)
    DOTADD          reduce using rule 30 (factor -> STRING .)
    MINUS           reduce using rule 30 (factor -> STRING .)
    PLUS            reduce using rule 30 (factor -> STRING .)
    TRANSPOSE       reduce using rule 30 (factor -> STRING .)
    ,               reduce using rule 30 (factor -> STRING .)
    ]               reduce using rule 30 (factor -> STRING .)
    )               reduce using rule 30 (factor -> STRING .)
    RANGE           reduce using rule 30 (factor -> STRING .)
    {               reduce using rule 30 (factor -> STRING .)
    RETURN          reduce using rule 30 (factor -> STRING .)
    CONTINUE        reduce using rule 30 (factor -> STRING .)
    BREAK           reduce using rule 30 (factor -> STRING .)
    WHILE           reduce using rule 30 (factor -> STRING .)
    FOR             reduce using rule 30 (factor -> STRING .)
    IF              reduce using rule 30 (factor -> STRING .)
    PRINT           reduce using rule 30 (factor -> STRING .)
    ID              reduce using rule 30 (factor -> STRING .)


state 34

    (31) factor -> ID .
    ;               reduce using rule 31 (factor -> ID .)
    NEQ             reduce using rule 31 (factor -> ID .)
    EQ              reduce using rule 31 (factor -> ID .)
    LE              reduce using rule 31 (factor -> ID .)
    GE              reduce using rule 31 (factor -> ID .)
    LT              reduce using rule 31 (factor -> ID .)
    GT              reduce using rule 31 (factor -> ID .)
    DOTDIV          reduce using rule 31 (factor -> ID .)
    DOTMUL          reduce using rule 31 (factor -> ID .)
    DIVIDE          reduce using rule 31 (factor -> ID .)
    TIMES           reduce using rule 31 (factor -> ID .)
    DOTSUB          reduce using rule 31 (factor -> ID .)
    DOTADD          reduce using rule 31 (factor -> ID .)
    MINUS           reduce using rule 31 (factor -> ID .)
    PLUS            reduce using rule 31 (factor -> ID .)
    TRANSPOSE       reduce using rule 31 (factor -> ID .)
    ,               reduce using rule 31 (factor -> ID .)
    ]               reduce using rule 31 (factor -> ID .)
    )               reduce using rule 31 (factor -> ID .)
    RANGE           reduce using rule 31 (factor -> ID .)
    {               reduce using rule 31 (factor -> ID .)
    RETURN          reduce using rule 31 (factor -> ID .)
    CONTINUE        reduce using rule 31 (factor -> ID .)
    BREAK           reduce using rule 31 (factor -> ID .)
    WHILE           reduce using rule 31 (factor -> ID .)
    FOR             reduce using rule 31 (factor -> ID .)
    IF              reduce using rule 31 (factor -> ID .)
    PRINT           reduce using rule 31 (factor -> ID .)
    ID              reduce using rule 31 (factor -> ID .)


state 35

    (32) factor -> NUMBER .
    ;               reduce using rule 32 (factor -> NUMBER .)
    NEQ             reduce using rule 32 (factor -> NUMBER .)
    EQ              reduce using rule 32 (factor -> NUMBER .)
    LE              reduce using rule 32 (factor -> NUMBER .)
    GE              reduce using rule 32 (factor -> NUMBER .)
    LT              reduce using rule 32 (factor -> NUMBER .)
    GT              reduce using rule 32 (factor -> NUMBER .)
    DOTDIV          reduce using rule 32 (factor -> NUMBER .)
    DOTMUL          reduce using rule 32 (factor -> NUMBER .)
    DIVIDE          reduce using rule 32 (factor -> NUMBER .)
    TIMES           reduce using rule 32 (factor -> NUMBER .)
    DOTSUB          reduce using rule 32 (factor -> NUMBER .)
    DOTADD          reduce using rule 32 (factor -> NUMBER .)
    MINUS           reduce using rule 32 (factor -> NUMBER .)
    PLUS            reduce using rule 32 (factor -> NUMBER .)
    TRANSPOSE       reduce using rule 32 (factor -> NUMBER .)
    ,               reduce using rule 32 (factor -> NUMBER .)
    ]               reduce using rule 32 (factor -> NUMBER .)
    )               reduce using rule 32 (factor -> NUMBER .)
    RANGE           reduce using rule 32 (factor -> NUMBER .)
    {               reduce using rule 32 (factor -> NUMBER .)
    RETURN          reduce using rule 32 (factor -> NUMBER .)
    CONTINUE        reduce using rule 32 (factor -> NUMBER .)
    BREAK           reduce using rule 32 (factor -> NUMBER .)
    WHILE           reduce using rule 32 (factor -> NUMBER .)
    FOR             reduce using rule 32 (factor -> NUMBER .)
    IF              reduce using rule 32 (factor -> NUMBER .)
    PRINT           reduce using rule 32 (factor -> NUMBER .)
    ID              reduce using rule 32 (factor -> NUMBER .)


state 36

    (49) matrix_function -> EYE . ( expression )
    (               shift and go to state 75


state 37

    (50) matrix_function -> ONES . ( expression )
    (               shift and go to state 76


state 38

    (51) matrix_function -> ZEROS . ( expression )
    (               shift and go to state 77


state 39

    (62) NUMBER -> FLOATNUM .
    ;               reduce using rule 62 (NUMBER -> FLOATNUM .)
    NEQ             reduce using rule 62 (NUMBER -> FLOATNUM .)
    EQ              reduce using rule 62 (NUMBER -> FLOATNUM .)
    LE              reduce using rule 62 (NUMBER -> FLOATNUM .)
    GE              reduce using rule 62 (NUMBER -> FLOATNUM .)
    LT              reduce using rule 62 (NUMBER -> FLOATNUM .)
    GT              reduce using rule 62 (NUMBER -> FLOATNUM .)
    DOTDIV          reduce using rule 62 (NUMBER -> FLOATNUM .)
    DOTMUL          reduce using rule 62 (NUMBER -> FLOATNUM .)
    DIVIDE          reduce using rule 62 (NUMBER -> FLOATNUM .)
    TIMES           reduce using rule 62 (NUMBER -> FLOATNUM .)
    DOTSUB          reduce using rule 62 (NUMBER -> FLOATNUM .)
    DOTADD          reduce using rule 62 (NUMBER -> FLOATNUM .)
    MINUS           reduce using rule 62 (NUMBER -> FLOATNUM .)
    PLUS            reduce using rule 62 (NUMBER -> FLOATNUM .)
    TRANSPOSE       reduce using rule 62 (NUMBER -> FLOATNUM .)
    ,               reduce using rule 62 (NUMBER -> FLOATNUM .)
    ]               reduce using rule 62 (NUMBER -> FLOATNUM .)
    )               reduce using rule 62 (NUMBER -> FLOATNUM .)
    RANGE           reduce using rule 62 (NUMBER -> FLOATNUM .)
    {               reduce using rule 62 (NUMBER -> FLOATNUM .)
    RETURN          reduce using rule 62 (NUMBER -> FLOATNUM .)
    CONTINUE        reduce using rule 62 (NUMBER -> FLOATNUM .)
    BREAK           reduce using rule 62 (NUMBER -> FLOATNUM .)
    WHILE           reduce using rule 62 (NUMBER -> FLOATNUM .)
    FOR             reduce using rule 62 (NUMBER -> FLOATNUM .)
    IF              reduce using rule 62 (NUMBER -> FLOATNUM .)
    PRINT           reduce using rule 62 (NUMBER -> FLOATNUM .)
    ID              reduce using rule 62 (NUMBER -> FLOATNUM .)


state 40

    (63) NUMBER -> INTNUM .
    ;               reduce using rule 63 (NUMBER -> INTNUM .)
    NEQ             reduce using rule 63 (NUMBER -> INTNUM .)
    EQ              reduce using rule 63 (NUMBER -> INTNUM .)
    LE              reduce using rule 63 (NUMBER -> INTNUM .)
    GE              reduce using rule 63 (NUMBER -> INTNUM .)
    LT              reduce using rule 63 (NUMBER -> INTNUM .)
    GT              reduce using rule 63 (NUMBER -> INTNUM .)
    DOTDIV          reduce using rule 63 (NUMBER -> INTNUM .)
    DOTMUL          reduce using rule 63 (NUMBER -> INTNUM .)
    DIVIDE          reduce using rule 63 (NUMBER -> INTNUM .)
    TIMES           reduce using rule 63 (NUMBER -> INTNUM .)
    DOTSUB          reduce using rule 63 (NUMBER -> INTNUM .)
    DOTADD          reduce using rule 63 (NUMBER -> INTNUM .)
    MINUS           reduce using rule 63 (NUMBER -> INTNUM .)
    PLUS            reduce using rule 63 (NUMBER -> INTNUM .)
    TRANSPOSE       reduce using rule 63 (NUMBER -> INTNUM .)
    ,               reduce using rule 63 (NUMBER -> INTNUM .)
    ]               reduce using rule 63 (NUMBER -> INTNUM .)
    )               reduce using rule 63 (NUMBER -> INTNUM .)
    RANGE           reduce using rule 63 (NUMBER -> INTNUM .)
    {               reduce using rule 63 (NUMBER -> INTNUM .)
    RETURN          reduce using rule 63 (NUMBER -> INTNUM .)
    CONTINUE        reduce using rule 63 (NUMBER -> INTNUM .)
    BREAK           reduce using rule 63 (NUMBER -> INTNUM .)
    WHILE           reduce using rule 63 (NUMBER -> INTNUM .)
    FOR             reduce using rule 63 (NUMBER -> INTNUM .)
    IF              reduce using rule 63 (NUMBER -> INTNUM .)
    PRINT           reduce using rule 63 (NUMBER -> INTNUM .)
    ID              reduce using rule 63 (NUMBER -> INTNUM .)


state 41

    (9) end_line_instruction -> CONTINUE ; .
    {               reduce using rule 9 (end_line_instruction -> CONTINUE ; .)
    RETURN          reduce using rule 9 (end_line_instruction -> CONTINUE ; .)
    CONTINUE        reduce using rule 9 (end_line_instruction -> CONTINUE ; .)
    BREAK           reduce using rule 9 (end_line_instruction -> CONTINUE ; .)
    ;               reduce using rule 9 (end_line_instruction -> CONTINUE ; .)
    WHILE           reduce using rule 9 (end_line_instruction -> CONTINUE ; .)
    FOR             reduce using rule 9 (end_line_instruction -> CONTINUE ; .)
    IF              reduce using rule 9 (end_line_instruction -> CONTINUE ; .)
    PRINT           reduce using rule 9 (end_line_instruction -> CONTINUE ; .)
    ID              reduce using rule 9 (end_line_instruction -> CONTINUE ; .)
    $end            reduce using rule 9 (end_line_instruction -> CONTINUE ; .)
    }               reduce using rule 9 (end_line_instruction -> CONTINUE ; .)
    ELSE            reduce using rule 9 (end_line_instruction -> CONTINUE ; .)


state 42

    (10) end_line_instruction -> BREAK ; .
    {               reduce using rule 10 (end_line_instruction -> BREAK ; .)
    RETURN          reduce using rule 10 (end_line_instruction -> BREAK ; .)
    CONTINUE        reduce using rule 10 (end_line_instruction -> BREAK ; .)
    BREAK           reduce using rule 10 (end_line_instruction -> BREAK ; .)
    ;               reduce using rule 10 (end_line_instruction -> BREAK ; .)
    WHILE           reduce using rule 10 (end_line_instruction -> BREAK ; .)
    FOR             reduce using rule 10 (end_line_instruction -> BREAK ; .)
    IF              reduce using rule 10 (end_line_instruction -> BREAK ; .)
    PRINT           reduce using rule 10 (end_line_instruction -> BREAK ; .)
    ID              reduce using rule 10 (end_line_instruction -> BREAK ; .)
    $end            reduce using rule 10 (end_line_instruction -> BREAK ; .)
    }               reduce using rule 10 (end_line_instruction -> BREAK ; .)
    ELSE            reduce using rule 10 (end_line_instruction -> BREAK ; .)


state 43

    (60) while_loop -> WHILE ( . expression ) instruction
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 78
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 44

    (59) for_loop -> FOR ID . ASSIGN expression RANGE expression instruction
    ASSIGN          shift and go to state 79


state 45

    (25) matrix_ref -> ID [ . string_of_ints ]
    (23) string_of_ints -> . string_of_ints , INTNUM
    (24) string_of_ints -> . INTNUM
    INTNUM          shift and go to state 81

    string_of_ints                 shift and go to state 80

state 46

    (57) if_statement -> IF ( . expression ) instruction ELSE instruction
    (58) if_statement -> IF ( . expression ) instruction
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 82
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 47

    (61) print_stmt -> PRINT value_list . ;
    (56) value_list -> value_list . , expression
    ;               shift and go to state 83
    ,               shift and go to state 84


state 48

    (55) value_list -> expression .
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    ;               reduce using rule 55 (value_list -> expression .)
    ,               reduce using rule 55 (value_list -> expression .)
    ]               reduce using rule 55 (value_list -> expression .)
    NEQ             shift and go to state 56
    EQ              shift and go to state 57
    LE              shift and go to state 58
    GE              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67
    MINUS           shift and go to state 68
    PLUS            shift and go to state 69


state 49

    (16) assignment -> id_all DIVASSIGN . expression ;
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 85
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 50

    (17) assignment -> id_all MULASSIGN . expression ;
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 86
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 51

    (18) assignment -> id_all SUBASSIGN . expression ;
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 87
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 52

    (19) assignment -> id_all ADDASSIGN . expression ;
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 88
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 53

    (20) assignment -> id_all ASSIGN . expression ;
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 89
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 54

    (4) instruction -> { instructions } .
    {               reduce using rule 4 (instruction -> { instructions } .)
    RETURN          reduce using rule 4 (instruction -> { instructions } .)
    CONTINUE        reduce using rule 4 (instruction -> { instructions } .)
    BREAK           reduce using rule 4 (instruction -> { instructions } .)
    ;               reduce using rule 4 (instruction -> { instructions } .)
    WHILE           reduce using rule 4 (instruction -> { instructions } .)
    FOR             reduce using rule 4 (instruction -> { instructions } .)
    IF              reduce using rule 4 (instruction -> { instructions } .)
    PRINT           reduce using rule 4 (instruction -> { instructions } .)
    ID              reduce using rule 4 (instruction -> { instructions } .)
    $end            reduce using rule 4 (instruction -> { instructions } .)
    }               reduce using rule 4 (instruction -> { instructions } .)
    ELSE            reduce using rule 4 (instruction -> { instructions } .)


state 55

    (7) end_line_instruction -> RETURN expression ; .
    {               reduce using rule 7 (end_line_instruction -> RETURN expression ; .)
    RETURN          reduce using rule 7 (end_line_instruction -> RETURN expression ; .)
    CONTINUE        reduce using rule 7 (end_line_instruction -> RETURN expression ; .)
    BREAK           reduce using rule 7 (end_line_instruction -> RETURN expression ; .)
    ;               reduce using rule 7 (end_line_instruction -> RETURN expression ; .)
    WHILE           reduce using rule 7 (end_line_instruction -> RETURN expression ; .)
    FOR             reduce using rule 7 (end_line_instruction -> RETURN expression ; .)
    IF              reduce using rule 7 (end_line_instruction -> RETURN expression ; .)
    PRINT           reduce using rule 7 (end_line_instruction -> RETURN expression ; .)
    ID              reduce using rule 7 (end_line_instruction -> RETURN expression ; .)
    $end            reduce using rule 7 (end_line_instruction -> RETURN expression ; .)
    }               reduce using rule 7 (end_line_instruction -> RETURN expression ; .)
    ELSE            reduce using rule 7 (end_line_instruction -> RETURN expression ; .)


state 56

    (33) expression_bin -> expression NEQ . expression
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 90
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 57

    (34) expression_bin -> expression EQ . expression
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 91
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 58

    (35) expression_bin -> expression LE . expression
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 92
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 59

    (36) expression_bin -> expression GE . expression
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 93
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 60

    (37) expression_bin -> expression LT . expression
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 94
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 61

    (38) expression_bin -> expression GT . expression
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 95
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 62

    (39) expression_bin -> expression DOTDIV . expression
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 96
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 63

    (40) expression_bin -> expression DOTMUL . expression
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 97
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 64

    (41) expression_bin -> expression DIVIDE . expression
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 98
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 65

    (42) expression_bin -> expression TIMES . expression
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 99
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 66

    (43) expression_bin -> expression DOTSUB . expression
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 100
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 67

    (44) expression_bin -> expression DOTADD . expression
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 101
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 68

    (45) expression_bin -> expression MINUS . expression
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 102
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 69

    (46) expression_bin -> expression PLUS . expression
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 103
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 70

    (54) expression -> MINUS expression_negate .
    ;               reduce using rule 54 (expression -> MINUS expression_negate .)
    NEQ             reduce using rule 54 (expression -> MINUS expression_negate .)
    EQ              reduce using rule 54 (expression -> MINUS expression_negate .)
    LE              reduce using rule 54 (expression -> MINUS expression_negate .)
    GE              reduce using rule 54 (expression -> MINUS expression_negate .)
    LT              reduce using rule 54 (expression -> MINUS expression_negate .)
    GT              reduce using rule 54 (expression -> MINUS expression_negate .)
    DOTDIV          reduce using rule 54 (expression -> MINUS expression_negate .)
    DOTMUL          reduce using rule 54 (expression -> MINUS expression_negate .)
    DIVIDE          reduce using rule 54 (expression -> MINUS expression_negate .)
    TIMES           reduce using rule 54 (expression -> MINUS expression_negate .)
    DOTSUB          reduce using rule 54 (expression -> MINUS expression_negate .)
    DOTADD          reduce using rule 54 (expression -> MINUS expression_negate .)
    MINUS           reduce using rule 54 (expression -> MINUS expression_negate .)
    PLUS            reduce using rule 54 (expression -> MINUS expression_negate .)
    ,               reduce using rule 54 (expression -> MINUS expression_negate .)
    ]               reduce using rule 54 (expression -> MINUS expression_negate .)
    )               reduce using rule 54 (expression -> MINUS expression_negate .)
    RANGE           reduce using rule 54 (expression -> MINUS expression_negate .)
    {               reduce using rule 54 (expression -> MINUS expression_negate .)
    RETURN          reduce using rule 54 (expression -> MINUS expression_negate .)
    CONTINUE        reduce using rule 54 (expression -> MINUS expression_negate .)
    BREAK           reduce using rule 54 (expression -> MINUS expression_negate .)
    WHILE           reduce using rule 54 (expression -> MINUS expression_negate .)
    FOR             reduce using rule 54 (expression -> MINUS expression_negate .)
    IF              reduce using rule 54 (expression -> MINUS expression_negate .)
    PRINT           reduce using rule 54 (expression -> MINUS expression_negate .)
    ID              reduce using rule 54 (expression -> MINUS expression_negate .)


state 71

    (47) expression_negate -> expression .
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    ;               reduce using rule 47 (expression_negate -> expression .)
    NEQ             reduce using rule 47 (expression_negate -> expression .)
    EQ              reduce using rule 47 (expression_negate -> expression .)
    LE              reduce using rule 47 (expression_negate -> expression .)
    GE              reduce using rule 47 (expression_negate -> expression .)
    LT              reduce using rule 47 (expression_negate -> expression .)
    GT              reduce using rule 47 (expression_negate -> expression .)
    DOTDIV          reduce using rule 47 (expression_negate -> expression .)
    DOTMUL          reduce using rule 47 (expression_negate -> expression .)
    DIVIDE          reduce using rule 47 (expression_negate -> expression .)
    TIMES           reduce using rule 47 (expression_negate -> expression .)
    DOTSUB          reduce using rule 47 (expression_negate -> expression .)
    DOTADD          reduce using rule 47 (expression_negate -> expression .)
    MINUS           reduce using rule 47 (expression_negate -> expression .)
    PLUS            reduce using rule 47 (expression_negate -> expression .)
    ,               reduce using rule 47 (expression_negate -> expression .)
    ]               reduce using rule 47 (expression_negate -> expression .)
    )               reduce using rule 47 (expression_negate -> expression .)
    RANGE           reduce using rule 47 (expression_negate -> expression .)
    {               reduce using rule 47 (expression_negate -> expression .)
    RETURN          reduce using rule 47 (expression_negate -> expression .)
    CONTINUE        reduce using rule 47 (expression_negate -> expression .)
    BREAK           reduce using rule 47 (expression_negate -> expression .)
    WHILE           reduce using rule 47 (expression_negate -> expression .)
    FOR             reduce using rule 47 (expression_negate -> expression .)
    IF              reduce using rule 47 (expression_negate -> expression .)
    PRINT           reduce using rule 47 (expression_negate -> expression .)
    ID              reduce using rule 47 (expression_negate -> expression .)


state 72

    (26) factor -> expression_transpose TRANSPOSE .
    ;               reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    NEQ             reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    EQ              reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    LE              reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    GE              reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    LT              reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    GT              reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    DOTDIV          reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    DOTMUL          reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    DIVIDE          reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    TIMES           reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    DOTSUB          reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    DOTADD          reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    MINUS           reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    PLUS            reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    TRANSPOSE       reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    ,               reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    ]               reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    )               reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    RANGE           reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    {               reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    RETURN          reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    CONTINUE        reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    BREAK           reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    WHILE           reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    FOR             reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    IF              reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    PRINT           reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)
    ID              reduce using rule 26 (factor -> expression_transpose TRANSPOSE .)


state 73

    (28) factor -> [ value_list . ]
    (56) value_list -> value_list . , expression
    ]               shift and go to state 104
    ,               shift and go to state 84


state 74

    (29) factor -> ( expression . )
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    )               shift and go to state 105
    NEQ             shift and go to state 56
    EQ              shift and go to state 57
    LE              shift and go to state 58
    GE              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67
    MINUS           shift and go to state 68
    PLUS            shift and go to state 69


state 75

    (49) matrix_function -> EYE ( . expression )
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 106
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 76

    (50) matrix_function -> ONES ( . expression )
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 107
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 77

    (51) matrix_function -> ZEROS ( . expression )
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 108
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 78

    (60) while_loop -> WHILE ( expression . ) instruction
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    )               shift and go to state 109
    NEQ             shift and go to state 56
    EQ              shift and go to state 57
    LE              shift and go to state 58
    GE              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67
    MINUS           shift and go to state 68
    PLUS            shift and go to state 69


state 79

    (59) for_loop -> FOR ID ASSIGN . expression RANGE expression instruction
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 110
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 80

    (25) matrix_ref -> ID [ string_of_ints . ]
    (23) string_of_ints -> string_of_ints . , INTNUM
    ]               shift and go to state 111
    ,               shift and go to state 112


state 81

    (24) string_of_ints -> INTNUM .
    ]               reduce using rule 24 (string_of_ints -> INTNUM .)
    ,               reduce using rule 24 (string_of_ints -> INTNUM .)


state 82

    (57) if_statement -> IF ( expression . ) instruction ELSE instruction
    (58) if_statement -> IF ( expression . ) instruction
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    )               shift and go to state 113
    NEQ             shift and go to state 56
    EQ              shift and go to state 57
    LE              shift and go to state 58
    GE              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67
    MINUS           shift and go to state 68
    PLUS            shift and go to state 69


state 83

    (61) print_stmt -> PRINT value_list ; .
    {               reduce using rule 61 (print_stmt -> PRINT value_list ; .)
    RETURN          reduce using rule 61 (print_stmt -> PRINT value_list ; .)
    CONTINUE        reduce using rule 61 (print_stmt -> PRINT value_list ; .)
    BREAK           reduce using rule 61 (print_stmt -> PRINT value_list ; .)
    ;               reduce using rule 61 (print_stmt -> PRINT value_list ; .)
    WHILE           reduce using rule 61 (print_stmt -> PRINT value_list ; .)
    FOR             reduce using rule 61 (print_stmt -> PRINT value_list ; .)
    IF              reduce using rule 61 (print_stmt -> PRINT value_list ; .)
    PRINT           reduce using rule 61 (print_stmt -> PRINT value_list ; .)
    ID              reduce using rule 61 (print_stmt -> PRINT value_list ; .)
    $end            reduce using rule 61 (print_stmt -> PRINT value_list ; .)
    }               reduce using rule 61 (print_stmt -> PRINT value_list ; .)
    ELSE            reduce using rule 61 (print_stmt -> PRINT value_list ; .)


state 84

    (56) value_list -> value_list , . expression
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 114
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 85

    (16) assignment -> id_all DIVASSIGN expression . ;
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    ;               shift and go to state 115
    NEQ             shift and go to state 56
    EQ              shift and go to state 57
    LE              shift and go to state 58
    GE              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67
    MINUS           shift and go to state 68
    PLUS            shift and go to state 69


state 86

    (17) assignment -> id_all MULASSIGN expression . ;
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    ;               shift and go to state 116
    NEQ             shift and go to state 56
    EQ              shift and go to state 57
    LE              shift and go to state 58
    GE              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67
    MINUS           shift and go to state 68
    PLUS            shift and go to state 69


state 87

    (18) assignment -> id_all SUBASSIGN expression . ;
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    ;               shift and go to state 117
    NEQ             shift and go to state 56
    EQ              shift and go to state 57
    LE              shift and go to state 58
    GE              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67
    MINUS           shift and go to state 68
    PLUS            shift and go to state 69


state 88

    (19) assignment -> id_all ADDASSIGN expression . ;
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    ;               shift and go to state 118
    NEQ             shift and go to state 56
    EQ              shift and go to state 57
    LE              shift and go to state 58
    GE              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67
    MINUS           shift and go to state 68
    PLUS            shift and go to state 69


state 89

    (20) assignment -> id_all ASSIGN expression . ;
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    ;               shift and go to state 119
    NEQ             shift and go to state 56
    EQ              shift and go to state 57
    LE              shift and go to state 58
    GE              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67
    MINUS           shift and go to state 68
    PLUS            shift and go to state 69


state 90

    (33) expression_bin -> expression NEQ expression .
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    ;               reduce using rule 33 (expression_bin -> expression NEQ expression .)
    NEQ             reduce using rule 33 (expression_bin -> expression NEQ expression .)
    EQ              reduce using rule 33 (expression_bin -> expression NEQ expression .)
    LE              reduce using rule 33 (expression_bin -> expression NEQ expression .)
    GE              reduce using rule 33 (expression_bin -> expression NEQ expression .)
    LT              reduce using rule 33 (expression_bin -> expression NEQ expression .)
    GT              reduce using rule 33 (expression_bin -> expression NEQ expression .)
    ,               reduce using rule 33 (expression_bin -> expression NEQ expression .)
    ]               reduce using rule 33 (expression_bin -> expression NEQ expression .)
    )               reduce using rule 33 (expression_bin -> expression NEQ expression .)
    RANGE           reduce using rule 33 (expression_bin -> expression NEQ expression .)
    {               reduce using rule 33 (expression_bin -> expression NEQ expression .)
    RETURN          reduce using rule 33 (expression_bin -> expression NEQ expression .)
    CONTINUE        reduce using rule 33 (expression_bin -> expression NEQ expression .)
    BREAK           reduce using rule 33 (expression_bin -> expression NEQ expression .)
    WHILE           reduce using rule 33 (expression_bin -> expression NEQ expression .)
    FOR             reduce using rule 33 (expression_bin -> expression NEQ expression .)
    IF              reduce using rule 33 (expression_bin -> expression NEQ expression .)
    PRINT           reduce using rule 33 (expression_bin -> expression NEQ expression .)
    ID              reduce using rule 33 (expression_bin -> expression NEQ expression .)
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67
    MINUS           shift and go to state 68
    PLUS            shift and go to state 69


state 91

    (34) expression_bin -> expression EQ expression .
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    ;               reduce using rule 34 (expression_bin -> expression EQ expression .)
    NEQ             reduce using rule 34 (expression_bin -> expression EQ expression .)
    EQ              reduce using rule 34 (expression_bin -> expression EQ expression .)
    LE              reduce using rule 34 (expression_bin -> expression EQ expression .)
    GE              reduce using rule 34 (expression_bin -> expression EQ expression .)
    LT              reduce using rule 34 (expression_bin -> expression EQ expression .)
    GT              reduce using rule 34 (expression_bin -> expression EQ expression .)
    ,               reduce using rule 34 (expression_bin -> expression EQ expression .)
    ]               reduce using rule 34 (expression_bin -> expression EQ expression .)
    )               reduce using rule 34 (expression_bin -> expression EQ expression .)
    RANGE           reduce using rule 34 (expression_bin -> expression EQ expression .)
    {               reduce using rule 34 (expression_bin -> expression EQ expression .)
    RETURN          reduce using rule 34 (expression_bin -> expression EQ expression .)
    CONTINUE        reduce using rule 34 (expression_bin -> expression EQ expression .)
    BREAK           reduce using rule 34 (expression_bin -> expression EQ expression .)
    WHILE           reduce using rule 34 (expression_bin -> expression EQ expression .)
    FOR             reduce using rule 34 (expression_bin -> expression EQ expression .)
    IF              reduce using rule 34 (expression_bin -> expression EQ expression .)
    PRINT           reduce using rule 34 (expression_bin -> expression EQ expression .)
    ID              reduce using rule 34 (expression_bin -> expression EQ expression .)
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67
    MINUS           shift and go to state 68
    PLUS            shift and go to state 69


state 92

    (35) expression_bin -> expression LE expression .
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    ;               reduce using rule 35 (expression_bin -> expression LE expression .)
    NEQ             reduce using rule 35 (expression_bin -> expression LE expression .)
    EQ              reduce using rule 35 (expression_bin -> expression LE expression .)
    LE              reduce using rule 35 (expression_bin -> expression LE expression .)
    GE              reduce using rule 35 (expression_bin -> expression LE expression .)
    LT              reduce using rule 35 (expression_bin -> expression LE expression .)
    GT              reduce using rule 35 (expression_bin -> expression LE expression .)
    ,               reduce using rule 35 (expression_bin -> expression LE expression .)
    ]               reduce using rule 35 (expression_bin -> expression LE expression .)
    )               reduce using rule 35 (expression_bin -> expression LE expression .)
    RANGE           reduce using rule 35 (expression_bin -> expression LE expression .)
    {               reduce using rule 35 (expression_bin -> expression LE expression .)
    RETURN          reduce using rule 35 (expression_bin -> expression LE expression .)
    CONTINUE        reduce using rule 35 (expression_bin -> expression LE expression .)
    BREAK           reduce using rule 35 (expression_bin -> expression LE expression .)
    WHILE           reduce using rule 35 (expression_bin -> expression LE expression .)
    FOR             reduce using rule 35 (expression_bin -> expression LE expression .)
    IF              reduce using rule 35 (expression_bin -> expression LE expression .)
    PRINT           reduce using rule 35 (expression_bin -> expression LE expression .)
    ID              reduce using rule 35 (expression_bin -> expression LE expression .)
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67
    MINUS           shift and go to state 68
    PLUS            shift and go to state 69


state 93

    (36) expression_bin -> expression GE expression .
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    ;               reduce using rule 36 (expression_bin -> expression GE expression .)
    NEQ             reduce using rule 36 (expression_bin -> expression GE expression .)
    EQ              reduce using rule 36 (expression_bin -> expression GE expression .)
    LE              reduce using rule 36 (expression_bin -> expression GE expression .)
    GE              reduce using rule 36 (expression_bin -> expression GE expression .)
    LT              reduce using rule 36 (expression_bin -> expression GE expression .)
    GT              reduce using rule 36 (expression_bin -> expression GE expression .)
    ,               reduce using rule 36 (expression_bin -> expression GE expression .)
    ]               reduce using rule 36 (expression_bin -> expression GE expression .)
    )               reduce using rule 36 (expression_bin -> expression GE expression .)
    RANGE           reduce using rule 36 (expression_bin -> expression GE expression .)
    {               reduce using rule 36 (expression_bin -> expression GE expression .)
    RETURN          reduce using rule 36 (expression_bin -> expression GE expression .)
    CONTINUE        reduce using rule 36 (expression_bin -> expression GE expression .)
    BREAK           reduce using rule 36 (expression_bin -> expression GE expression .)
    WHILE           reduce using rule 36 (expression_bin -> expression GE expression .)
    FOR             reduce using rule 36 (expression_bin -> expression GE expression .)
    IF              reduce using rule 36 (expression_bin -> expression GE expression .)
    PRINT           reduce using rule 36 (expression_bin -> expression GE expression .)
    ID              reduce using rule 36 (expression_bin -> expression GE expression .)
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67
    MINUS           shift and go to state 68
    PLUS            shift and go to state 69


state 94

    (37) expression_bin -> expression LT expression .
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    ;               reduce using rule 37 (expression_bin -> expression LT expression .)
    NEQ             reduce using rule 37 (expression_bin -> expression LT expression .)
    EQ              reduce using rule 37 (expression_bin -> expression LT expression .)
    LE              reduce using rule 37 (expression_bin -> expression LT expression .)
    GE              reduce using rule 37 (expression_bin -> expression LT expression .)
    LT              reduce using rule 37 (expression_bin -> expression LT expression .)
    GT              reduce using rule 37 (expression_bin -> expression LT expression .)
    ,               reduce using rule 37 (expression_bin -> expression LT expression .)
    ]               reduce using rule 37 (expression_bin -> expression LT expression .)
    )               reduce using rule 37 (expression_bin -> expression LT expression .)
    RANGE           reduce using rule 37 (expression_bin -> expression LT expression .)
    {               reduce using rule 37 (expression_bin -> expression LT expression .)
    RETURN          reduce using rule 37 (expression_bin -> expression LT expression .)
    CONTINUE        reduce using rule 37 (expression_bin -> expression LT expression .)
    BREAK           reduce using rule 37 (expression_bin -> expression LT expression .)
    WHILE           reduce using rule 37 (expression_bin -> expression LT expression .)
    FOR             reduce using rule 37 (expression_bin -> expression LT expression .)
    IF              reduce using rule 37 (expression_bin -> expression LT expression .)
    PRINT           reduce using rule 37 (expression_bin -> expression LT expression .)
    ID              reduce using rule 37 (expression_bin -> expression LT expression .)
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67
    MINUS           shift and go to state 68
    PLUS            shift and go to state 69


state 95

    (38) expression_bin -> expression GT expression .
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    ;               reduce using rule 38 (expression_bin -> expression GT expression .)
    NEQ             reduce using rule 38 (expression_bin -> expression GT expression .)
    EQ              reduce using rule 38 (expression_bin -> expression GT expression .)
    LE              reduce using rule 38 (expression_bin -> expression GT expression .)
    GE              reduce using rule 38 (expression_bin -> expression GT expression .)
    LT              reduce using rule 38 (expression_bin -> expression GT expression .)
    GT              reduce using rule 38 (expression_bin -> expression GT expression .)
    ,               reduce using rule 38 (expression_bin -> expression GT expression .)
    ]               reduce using rule 38 (expression_bin -> expression GT expression .)
    )               reduce using rule 38 (expression_bin -> expression GT expression .)
    RANGE           reduce using rule 38 (expression_bin -> expression GT expression .)
    {               reduce using rule 38 (expression_bin -> expression GT expression .)
    RETURN          reduce using rule 38 (expression_bin -> expression GT expression .)
    CONTINUE        reduce using rule 38 (expression_bin -> expression GT expression .)
    BREAK           reduce using rule 38 (expression_bin -> expression GT expression .)
    WHILE           reduce using rule 38 (expression_bin -> expression GT expression .)
    FOR             reduce using rule 38 (expression_bin -> expression GT expression .)
    IF              reduce using rule 38 (expression_bin -> expression GT expression .)
    PRINT           reduce using rule 38 (expression_bin -> expression GT expression .)
    ID              reduce using rule 38 (expression_bin -> expression GT expression .)
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67
    MINUS           shift and go to state 68
    PLUS            shift and go to state 69


state 96

    (39) expression_bin -> expression DOTDIV expression .
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    ;               reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    NEQ             reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    EQ              reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    LE              reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    GE              reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    LT              reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    GT              reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    DIVIDE          reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    TIMES           reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    DOTADD          reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    MINUS           reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    PLUS            reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    ,               reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    ]               reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    )               reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    RANGE           reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    {               reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    RETURN          reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    BREAK           reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    WHILE           reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    FOR             reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    IF              reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    PRINT           reduce using rule 39 (expression_bin -> expression DOTDIV expression .)
    ID              reduce using rule 39 (expression_bin -> expression DOTDIV expression .)


state 97

    (40) expression_bin -> expression DOTMUL expression .
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    ;               reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    NEQ             reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    EQ              reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    LE              reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    GE              reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    LT              reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    GT              reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    DIVIDE          reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    TIMES           reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    DOTADD          reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    MINUS           reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    PLUS            reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    ,               reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    ]               reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    )               reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    RANGE           reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    {               reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    RETURN          reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    BREAK           reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    WHILE           reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    FOR             reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    IF              reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    PRINT           reduce using rule 40 (expression_bin -> expression DOTMUL expression .)
    ID              reduce using rule 40 (expression_bin -> expression DOTMUL expression .)


state 98

    (41) expression_bin -> expression DIVIDE expression .
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    ;               reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    NEQ             reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    EQ              reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    LE              reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    GE              reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    LT              reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    GT              reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    TIMES           reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    DOTSUB          reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    DOTADD          reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    MINUS           reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    PLUS            reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    ,               reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    ]               reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    )               reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    RANGE           reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    {               reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    RETURN          reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    CONTINUE        reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    BREAK           reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    WHILE           reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    FOR             reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    IF              reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    PRINT           reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    ID              reduce using rule 41 (expression_bin -> expression DIVIDE expression .)
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63


state 99

    (42) expression_bin -> expression TIMES expression .
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    ;               reduce using rule 42 (expression_bin -> expression TIMES expression .)
    NEQ             reduce using rule 42 (expression_bin -> expression TIMES expression .)
    EQ              reduce using rule 42 (expression_bin -> expression TIMES expression .)
    LE              reduce using rule 42 (expression_bin -> expression TIMES expression .)
    GE              reduce using rule 42 (expression_bin -> expression TIMES expression .)
    LT              reduce using rule 42 (expression_bin -> expression TIMES expression .)
    GT              reduce using rule 42 (expression_bin -> expression TIMES expression .)
    DIVIDE          reduce using rule 42 (expression_bin -> expression TIMES expression .)
    TIMES           reduce using rule 42 (expression_bin -> expression TIMES expression .)
    DOTSUB          reduce using rule 42 (expression_bin -> expression TIMES expression .)
    DOTADD          reduce using rule 42 (expression_bin -> expression TIMES expression .)
    MINUS           reduce using rule 42 (expression_bin -> expression TIMES expression .)
    PLUS            reduce using rule 42 (expression_bin -> expression TIMES expression .)
    ,               reduce using rule 42 (expression_bin -> expression TIMES expression .)
    ]               reduce using rule 42 (expression_bin -> expression TIMES expression .)
    )               reduce using rule 42 (expression_bin -> expression TIMES expression .)
    RANGE           reduce using rule 42 (expression_bin -> expression TIMES expression .)
    {               reduce using rule 42 (expression_bin -> expression TIMES expression .)
    RETURN          reduce using rule 42 (expression_bin -> expression TIMES expression .)
    CONTINUE        reduce using rule 42 (expression_bin -> expression TIMES expression .)
    BREAK           reduce using rule 42 (expression_bin -> expression TIMES expression .)
    WHILE           reduce using rule 42 (expression_bin -> expression TIMES expression .)
    FOR             reduce using rule 42 (expression_bin -> expression TIMES expression .)
    IF              reduce using rule 42 (expression_bin -> expression TIMES expression .)
    PRINT           reduce using rule 42 (expression_bin -> expression TIMES expression .)
    ID              reduce using rule 42 (expression_bin -> expression TIMES expression .)
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63


state 100

    (43) expression_bin -> expression DOTSUB expression .
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    ;               reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    NEQ             reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    EQ              reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    LE              reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    GE              reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    LT              reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    GT              reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    DOTADD          reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    MINUS           reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    PLUS            reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    ,               reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    ]               reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    )               reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    RANGE           reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    {               reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    RETURN          reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    BREAK           reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    WHILE           reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    FOR             reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    IF              reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    PRINT           reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    ID              reduce using rule 43 (expression_bin -> expression DOTSUB expression .)
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65


state 101

    (44) expression_bin -> expression DOTADD expression .
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    ;               reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    NEQ             reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    EQ              reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    LE              reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    GE              reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    LT              reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    GT              reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    DOTSUB          reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    DOTADD          reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    MINUS           reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    PLUS            reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    ,               reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    ]               reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    )               reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    RANGE           reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    {               reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    RETURN          reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    CONTINUE        reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    BREAK           reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    WHILE           reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    FOR             reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    IF              reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    PRINT           reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    ID              reduce using rule 44 (expression_bin -> expression DOTADD expression .)
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65


state 102

    (45) expression_bin -> expression MINUS expression .
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    ;               reduce using rule 45 (expression_bin -> expression MINUS expression .)
    NEQ             reduce using rule 45 (expression_bin -> expression MINUS expression .)
    EQ              reduce using rule 45 (expression_bin -> expression MINUS expression .)
    LE              reduce using rule 45 (expression_bin -> expression MINUS expression .)
    GE              reduce using rule 45 (expression_bin -> expression MINUS expression .)
    LT              reduce using rule 45 (expression_bin -> expression MINUS expression .)
    GT              reduce using rule 45 (expression_bin -> expression MINUS expression .)
    MINUS           reduce using rule 45 (expression_bin -> expression MINUS expression .)
    PLUS            reduce using rule 45 (expression_bin -> expression MINUS expression .)
    ,               reduce using rule 45 (expression_bin -> expression MINUS expression .)
    ]               reduce using rule 45 (expression_bin -> expression MINUS expression .)
    )               reduce using rule 45 (expression_bin -> expression MINUS expression .)
    RANGE           reduce using rule 45 (expression_bin -> expression MINUS expression .)
    {               reduce using rule 45 (expression_bin -> expression MINUS expression .)
    RETURN          reduce using rule 45 (expression_bin -> expression MINUS expression .)
    CONTINUE        reduce using rule 45 (expression_bin -> expression MINUS expression .)
    BREAK           reduce using rule 45 (expression_bin -> expression MINUS expression .)
    WHILE           reduce using rule 45 (expression_bin -> expression MINUS expression .)
    FOR             reduce using rule 45 (expression_bin -> expression MINUS expression .)
    IF              reduce using rule 45 (expression_bin -> expression MINUS expression .)
    PRINT           reduce using rule 45 (expression_bin -> expression MINUS expression .)
    ID              reduce using rule 45 (expression_bin -> expression MINUS expression .)
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67


state 103

    (46) expression_bin -> expression PLUS expression .
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    ;               reduce using rule 46 (expression_bin -> expression PLUS expression .)
    NEQ             reduce using rule 46 (expression_bin -> expression PLUS expression .)
    EQ              reduce using rule 46 (expression_bin -> expression PLUS expression .)
    LE              reduce using rule 46 (expression_bin -> expression PLUS expression .)
    GE              reduce using rule 46 (expression_bin -> expression PLUS expression .)
    LT              reduce using rule 46 (expression_bin -> expression PLUS expression .)
    GT              reduce using rule 46 (expression_bin -> expression PLUS expression .)
    MINUS           reduce using rule 46 (expression_bin -> expression PLUS expression .)
    PLUS            reduce using rule 46 (expression_bin -> expression PLUS expression .)
    ,               reduce using rule 46 (expression_bin -> expression PLUS expression .)
    ]               reduce using rule 46 (expression_bin -> expression PLUS expression .)
    )               reduce using rule 46 (expression_bin -> expression PLUS expression .)
    RANGE           reduce using rule 46 (expression_bin -> expression PLUS expression .)
    {               reduce using rule 46 (expression_bin -> expression PLUS expression .)
    RETURN          reduce using rule 46 (expression_bin -> expression PLUS expression .)
    CONTINUE        reduce using rule 46 (expression_bin -> expression PLUS expression .)
    BREAK           reduce using rule 46 (expression_bin -> expression PLUS expression .)
    WHILE           reduce using rule 46 (expression_bin -> expression PLUS expression .)
    FOR             reduce using rule 46 (expression_bin -> expression PLUS expression .)
    IF              reduce using rule 46 (expression_bin -> expression PLUS expression .)
    PRINT           reduce using rule 46 (expression_bin -> expression PLUS expression .)
    ID              reduce using rule 46 (expression_bin -> expression PLUS expression .)
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67


state 104

    (28) factor -> [ value_list ] .
    ;               reduce using rule 28 (factor -> [ value_list ] .)
    NEQ             reduce using rule 28 (factor -> [ value_list ] .)
    EQ              reduce using rule 28 (factor -> [ value_list ] .)
    LE              reduce using rule 28 (factor -> [ value_list ] .)
    GE              reduce using rule 28 (factor -> [ value_list ] .)
    LT              reduce using rule 28 (factor -> [ value_list ] .)
    GT              reduce using rule 28 (factor -> [ value_list ] .)
    DOTDIV          reduce using rule 28 (factor -> [ value_list ] .)
    DOTMUL          reduce using rule 28 (factor -> [ value_list ] .)
    DIVIDE          reduce using rule 28 (factor -> [ value_list ] .)
    TIMES           reduce using rule 28 (factor -> [ value_list ] .)
    DOTSUB          reduce using rule 28 (factor -> [ value_list ] .)
    DOTADD          reduce using rule 28 (factor -> [ value_list ] .)
    MINUS           reduce using rule 28 (factor -> [ value_list ] .)
    PLUS            reduce using rule 28 (factor -> [ value_list ] .)
    TRANSPOSE       reduce using rule 28 (factor -> [ value_list ] .)
    ,               reduce using rule 28 (factor -> [ value_list ] .)
    ]               reduce using rule 28 (factor -> [ value_list ] .)
    )               reduce using rule 28 (factor -> [ value_list ] .)
    RANGE           reduce using rule 28 (factor -> [ value_list ] .)
    {               reduce using rule 28 (factor -> [ value_list ] .)
    RETURN          reduce using rule 28 (factor -> [ value_list ] .)
    CONTINUE        reduce using rule 28 (factor -> [ value_list ] .)
    BREAK           reduce using rule 28 (factor -> [ value_list ] .)
    WHILE           reduce using rule 28 (factor -> [ value_list ] .)
    FOR             reduce using rule 28 (factor -> [ value_list ] .)
    IF              reduce using rule 28 (factor -> [ value_list ] .)
    PRINT           reduce using rule 28 (factor -> [ value_list ] .)
    ID              reduce using rule 28 (factor -> [ value_list ] .)


state 105

    (29) factor -> ( expression ) .
    ;               reduce using rule 29 (factor -> ( expression ) .)
    NEQ             reduce using rule 29 (factor -> ( expression ) .)
    EQ              reduce using rule 29 (factor -> ( expression ) .)
    LE              reduce using rule 29 (factor -> ( expression ) .)
    GE              reduce using rule 29 (factor -> ( expression ) .)
    LT              reduce using rule 29 (factor -> ( expression ) .)
    GT              reduce using rule 29 (factor -> ( expression ) .)
    DOTDIV          reduce using rule 29 (factor -> ( expression ) .)
    DOTMUL          reduce using rule 29 (factor -> ( expression ) .)
    DIVIDE          reduce using rule 29 (factor -> ( expression ) .)
    TIMES           reduce using rule 29 (factor -> ( expression ) .)
    DOTSUB          reduce using rule 29 (factor -> ( expression ) .)
    DOTADD          reduce using rule 29 (factor -> ( expression ) .)
    MINUS           reduce using rule 29 (factor -> ( expression ) .)
    PLUS            reduce using rule 29 (factor -> ( expression ) .)
    TRANSPOSE       reduce using rule 29 (factor -> ( expression ) .)
    ,               reduce using rule 29 (factor -> ( expression ) .)
    ]               reduce using rule 29 (factor -> ( expression ) .)
    )               reduce using rule 29 (factor -> ( expression ) .)
    RANGE           reduce using rule 29 (factor -> ( expression ) .)
    {               reduce using rule 29 (factor -> ( expression ) .)
    RETURN          reduce using rule 29 (factor -> ( expression ) .)
    CONTINUE        reduce using rule 29 (factor -> ( expression ) .)
    BREAK           reduce using rule 29 (factor -> ( expression ) .)
    WHILE           reduce using rule 29 (factor -> ( expression ) .)
    FOR             reduce using rule 29 (factor -> ( expression ) .)
    IF              reduce using rule 29 (factor -> ( expression ) .)
    PRINT           reduce using rule 29 (factor -> ( expression ) .)
    ID              reduce using rule 29 (factor -> ( expression ) .)


state 106

    (49) matrix_function -> EYE ( expression . )
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    )               shift and go to state 120
    NEQ             shift and go to state 56
    EQ              shift and go to state 57
    LE              shift and go to state 58
    GE              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67
    MINUS           shift and go to state 68
    PLUS            shift and go to state 69


state 107

    (50) matrix_function -> ONES ( expression . )
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    )               shift and go to state 121
    NEQ             shift and go to state 56
    EQ              shift and go to state 57
    LE              shift and go to state 58
    GE              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67
    MINUS           shift and go to state 68
    PLUS            shift and go to state 69


state 108

    (51) matrix_function -> ZEROS ( expression . )
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    )               shift and go to state 122
    NEQ             shift and go to state 56
    EQ              shift and go to state 57
    LE              shift and go to state 58
    GE              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67
    MINUS           shift and go to state 68
    PLUS            shift and go to state 69


state 109

    (60) while_loop -> WHILE ( expression ) . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction
    (13) non_end_instruction -> . while_loop
    (14) non_end_instruction -> . for_loop
    (15) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . RETURN expression ;
    (8) end_line_instruction -> . print_stmt
    (9) end_line_instruction -> . CONTINUE ;
    (10) end_line_instruction -> . BREAK ;
    (11) end_line_instruction -> . assignment
    (12) end_line_instruction -> . ;
    (60) while_loop -> . WHILE ( expression ) instruction
    (59) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (57) if_statement -> . IF ( expression ) instruction ELSE instruction
    (58) if_statement -> . IF ( expression ) instruction
    (61) print_stmt -> . PRINT value_list ;
    (16) assignment -> . id_all DIVASSIGN expression ;
    (17) assignment -> . id_all MULASSIGN expression ;
    (18) assignment -> . id_all SUBASSIGN expression ;
    (19) assignment -> . id_all ADDASSIGN expression ;
    (20) assignment -> . id_all ASSIGN expression ;
    (21) id_all -> . matrix_ref
    (22) id_all -> . ID
    (25) matrix_ref -> . ID [ string_of_ints ]
    {               shift and go to state 4
    RETURN          shift and go to state 10
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ;               shift and go to state 11
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    IF              shift and go to state 19
    PRINT           shift and go to state 20
    ID              shift and go to state 18

    instruction                    shift and go to state 123
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 12
    assignment                     shift and go to state 15
    id_all                         shift and go to state 21
    matrix_ref                     shift and go to state 22

state 110

    (59) for_loop -> FOR ID ASSIGN expression . RANGE expression instruction
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    RANGE           shift and go to state 124
    NEQ             shift and go to state 56
    EQ              shift and go to state 57
    LE              shift and go to state 58
    GE              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67
    MINUS           shift and go to state 68
    PLUS            shift and go to state 69


state 111

    (25) matrix_ref -> ID [ string_of_ints ] .
    DIVASSIGN       reduce using rule 25 (matrix_ref -> ID [ string_of_ints ] .)
    MULASSIGN       reduce using rule 25 (matrix_ref -> ID [ string_of_ints ] .)
    SUBASSIGN       reduce using rule 25 (matrix_ref -> ID [ string_of_ints ] .)
    ADDASSIGN       reduce using rule 25 (matrix_ref -> ID [ string_of_ints ] .)
    ASSIGN          reduce using rule 25 (matrix_ref -> ID [ string_of_ints ] .)


state 112

    (23) string_of_ints -> string_of_ints , . INTNUM
    INTNUM          shift and go to state 125


state 113

    (57) if_statement -> IF ( expression ) . instruction ELSE instruction
    (58) if_statement -> IF ( expression ) . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction
    (13) non_end_instruction -> . while_loop
    (14) non_end_instruction -> . for_loop
    (15) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . RETURN expression ;
    (8) end_line_instruction -> . print_stmt
    (9) end_line_instruction -> . CONTINUE ;
    (10) end_line_instruction -> . BREAK ;
    (11) end_line_instruction -> . assignment
    (12) end_line_instruction -> . ;
    (60) while_loop -> . WHILE ( expression ) instruction
    (59) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (57) if_statement -> . IF ( expression ) instruction ELSE instruction
    (58) if_statement -> . IF ( expression ) instruction
    (61) print_stmt -> . PRINT value_list ;
    (16) assignment -> . id_all DIVASSIGN expression ;
    (17) assignment -> . id_all MULASSIGN expression ;
    (18) assignment -> . id_all SUBASSIGN expression ;
    (19) assignment -> . id_all ADDASSIGN expression ;
    (20) assignment -> . id_all ASSIGN expression ;
    (21) id_all -> . matrix_ref
    (22) id_all -> . ID
    (25) matrix_ref -> . ID [ string_of_ints ]
    {               shift and go to state 4
    RETURN          shift and go to state 10
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ;               shift and go to state 11
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    IF              shift and go to state 19
    PRINT           shift and go to state 20
    ID              shift and go to state 18

    instruction                    shift and go to state 126
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 12
    assignment                     shift and go to state 15
    id_all                         shift and go to state 21
    matrix_ref                     shift and go to state 22

state 114

    (56) value_list -> value_list , expression .
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    ;               reduce using rule 56 (value_list -> value_list , expression .)
    ,               reduce using rule 56 (value_list -> value_list , expression .)
    ]               reduce using rule 56 (value_list -> value_list , expression .)
    NEQ             shift and go to state 56
    EQ              shift and go to state 57
    LE              shift and go to state 58
    GE              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67
    MINUS           shift and go to state 68
    PLUS            shift and go to state 69


state 115

    (16) assignment -> id_all DIVASSIGN expression ; .
    {               reduce using rule 16 (assignment -> id_all DIVASSIGN expression ; .)
    RETURN          reduce using rule 16 (assignment -> id_all DIVASSIGN expression ; .)
    CONTINUE        reduce using rule 16 (assignment -> id_all DIVASSIGN expression ; .)
    BREAK           reduce using rule 16 (assignment -> id_all DIVASSIGN expression ; .)
    ;               reduce using rule 16 (assignment -> id_all DIVASSIGN expression ; .)
    WHILE           reduce using rule 16 (assignment -> id_all DIVASSIGN expression ; .)
    FOR             reduce using rule 16 (assignment -> id_all DIVASSIGN expression ; .)
    IF              reduce using rule 16 (assignment -> id_all DIVASSIGN expression ; .)
    PRINT           reduce using rule 16 (assignment -> id_all DIVASSIGN expression ; .)
    ID              reduce using rule 16 (assignment -> id_all DIVASSIGN expression ; .)
    $end            reduce using rule 16 (assignment -> id_all DIVASSIGN expression ; .)
    }               reduce using rule 16 (assignment -> id_all DIVASSIGN expression ; .)
    ELSE            reduce using rule 16 (assignment -> id_all DIVASSIGN expression ; .)


state 116

    (17) assignment -> id_all MULASSIGN expression ; .
    {               reduce using rule 17 (assignment -> id_all MULASSIGN expression ; .)
    RETURN          reduce using rule 17 (assignment -> id_all MULASSIGN expression ; .)
    CONTINUE        reduce using rule 17 (assignment -> id_all MULASSIGN expression ; .)
    BREAK           reduce using rule 17 (assignment -> id_all MULASSIGN expression ; .)
    ;               reduce using rule 17 (assignment -> id_all MULASSIGN expression ; .)
    WHILE           reduce using rule 17 (assignment -> id_all MULASSIGN expression ; .)
    FOR             reduce using rule 17 (assignment -> id_all MULASSIGN expression ; .)
    IF              reduce using rule 17 (assignment -> id_all MULASSIGN expression ; .)
    PRINT           reduce using rule 17 (assignment -> id_all MULASSIGN expression ; .)
    ID              reduce using rule 17 (assignment -> id_all MULASSIGN expression ; .)
    $end            reduce using rule 17 (assignment -> id_all MULASSIGN expression ; .)
    }               reduce using rule 17 (assignment -> id_all MULASSIGN expression ; .)
    ELSE            reduce using rule 17 (assignment -> id_all MULASSIGN expression ; .)


state 117

    (18) assignment -> id_all SUBASSIGN expression ; .
    {               reduce using rule 18 (assignment -> id_all SUBASSIGN expression ; .)
    RETURN          reduce using rule 18 (assignment -> id_all SUBASSIGN expression ; .)
    CONTINUE        reduce using rule 18 (assignment -> id_all SUBASSIGN expression ; .)
    BREAK           reduce using rule 18 (assignment -> id_all SUBASSIGN expression ; .)
    ;               reduce using rule 18 (assignment -> id_all SUBASSIGN expression ; .)
    WHILE           reduce using rule 18 (assignment -> id_all SUBASSIGN expression ; .)
    FOR             reduce using rule 18 (assignment -> id_all SUBASSIGN expression ; .)
    IF              reduce using rule 18 (assignment -> id_all SUBASSIGN expression ; .)
    PRINT           reduce using rule 18 (assignment -> id_all SUBASSIGN expression ; .)
    ID              reduce using rule 18 (assignment -> id_all SUBASSIGN expression ; .)
    $end            reduce using rule 18 (assignment -> id_all SUBASSIGN expression ; .)
    }               reduce using rule 18 (assignment -> id_all SUBASSIGN expression ; .)
    ELSE            reduce using rule 18 (assignment -> id_all SUBASSIGN expression ; .)


state 118

    (19) assignment -> id_all ADDASSIGN expression ; .
    {               reduce using rule 19 (assignment -> id_all ADDASSIGN expression ; .)
    RETURN          reduce using rule 19 (assignment -> id_all ADDASSIGN expression ; .)
    CONTINUE        reduce using rule 19 (assignment -> id_all ADDASSIGN expression ; .)
    BREAK           reduce using rule 19 (assignment -> id_all ADDASSIGN expression ; .)
    ;               reduce using rule 19 (assignment -> id_all ADDASSIGN expression ; .)
    WHILE           reduce using rule 19 (assignment -> id_all ADDASSIGN expression ; .)
    FOR             reduce using rule 19 (assignment -> id_all ADDASSIGN expression ; .)
    IF              reduce using rule 19 (assignment -> id_all ADDASSIGN expression ; .)
    PRINT           reduce using rule 19 (assignment -> id_all ADDASSIGN expression ; .)
    ID              reduce using rule 19 (assignment -> id_all ADDASSIGN expression ; .)
    $end            reduce using rule 19 (assignment -> id_all ADDASSIGN expression ; .)
    }               reduce using rule 19 (assignment -> id_all ADDASSIGN expression ; .)
    ELSE            reduce using rule 19 (assignment -> id_all ADDASSIGN expression ; .)


state 119

    (20) assignment -> id_all ASSIGN expression ; .
    {               reduce using rule 20 (assignment -> id_all ASSIGN expression ; .)
    RETURN          reduce using rule 20 (assignment -> id_all ASSIGN expression ; .)
    CONTINUE        reduce using rule 20 (assignment -> id_all ASSIGN expression ; .)
    BREAK           reduce using rule 20 (assignment -> id_all ASSIGN expression ; .)
    ;               reduce using rule 20 (assignment -> id_all ASSIGN expression ; .)
    WHILE           reduce using rule 20 (assignment -> id_all ASSIGN expression ; .)
    FOR             reduce using rule 20 (assignment -> id_all ASSIGN expression ; .)
    IF              reduce using rule 20 (assignment -> id_all ASSIGN expression ; .)
    PRINT           reduce using rule 20 (assignment -> id_all ASSIGN expression ; .)
    ID              reduce using rule 20 (assignment -> id_all ASSIGN expression ; .)
    $end            reduce using rule 20 (assignment -> id_all ASSIGN expression ; .)
    }               reduce using rule 20 (assignment -> id_all ASSIGN expression ; .)
    ELSE            reduce using rule 20 (assignment -> id_all ASSIGN expression ; .)


state 120

    (49) matrix_function -> EYE ( expression ) .
    ;               reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    NEQ             reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    EQ              reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    LE              reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    GE              reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    LT              reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    GT              reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    DOTDIV          reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    DOTMUL          reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    DIVIDE          reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    TIMES           reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    DOTSUB          reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    DOTADD          reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    MINUS           reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    PLUS            reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    TRANSPOSE       reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    ,               reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    ]               reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    )               reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    RANGE           reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    {               reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    RETURN          reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    CONTINUE        reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    BREAK           reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    WHILE           reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    FOR             reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    IF              reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    PRINT           reduce using rule 49 (matrix_function -> EYE ( expression ) .)
    ID              reduce using rule 49 (matrix_function -> EYE ( expression ) .)


state 121

    (50) matrix_function -> ONES ( expression ) .
    ;               reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    NEQ             reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    EQ              reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    LE              reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    GE              reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    LT              reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    GT              reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    DOTDIV          reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    DOTMUL          reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    DIVIDE          reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    TIMES           reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    DOTSUB          reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    DOTADD          reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    MINUS           reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    PLUS            reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    TRANSPOSE       reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    ,               reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    ]               reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    )               reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    RANGE           reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    {               reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    RETURN          reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    CONTINUE        reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    BREAK           reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    WHILE           reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    FOR             reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    IF              reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    PRINT           reduce using rule 50 (matrix_function -> ONES ( expression ) .)
    ID              reduce using rule 50 (matrix_function -> ONES ( expression ) .)


state 122

    (51) matrix_function -> ZEROS ( expression ) .
    ;               reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    NEQ             reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    EQ              reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    LE              reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    GE              reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    LT              reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    GT              reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    DOTDIV          reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    DOTMUL          reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    DIVIDE          reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    TIMES           reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    DOTSUB          reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    DOTADD          reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    MINUS           reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    PLUS            reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    TRANSPOSE       reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    ,               reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    ]               reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    )               reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    RANGE           reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    {               reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    RETURN          reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    CONTINUE        reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    BREAK           reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    WHILE           reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    FOR             reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    IF              reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    PRINT           reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)
    ID              reduce using rule 51 (matrix_function -> ZEROS ( expression ) .)


state 123

    (60) while_loop -> WHILE ( expression ) instruction .
    {               reduce using rule 60 (while_loop -> WHILE ( expression ) instruction .)
    RETURN          reduce using rule 60 (while_loop -> WHILE ( expression ) instruction .)
    CONTINUE        reduce using rule 60 (while_loop -> WHILE ( expression ) instruction .)
    BREAK           reduce using rule 60 (while_loop -> WHILE ( expression ) instruction .)
    ;               reduce using rule 60 (while_loop -> WHILE ( expression ) instruction .)
    WHILE           reduce using rule 60 (while_loop -> WHILE ( expression ) instruction .)
    FOR             reduce using rule 60 (while_loop -> WHILE ( expression ) instruction .)
    IF              reduce using rule 60 (while_loop -> WHILE ( expression ) instruction .)
    PRINT           reduce using rule 60 (while_loop -> WHILE ( expression ) instruction .)
    ID              reduce using rule 60 (while_loop -> WHILE ( expression ) instruction .)
    $end            reduce using rule 60 (while_loop -> WHILE ( expression ) instruction .)
    }               reduce using rule 60 (while_loop -> WHILE ( expression ) instruction .)
    ELSE            reduce using rule 60 (while_loop -> WHILE ( expression ) instruction .)


state 124

    (59) for_loop -> FOR ID ASSIGN expression RANGE . expression instruction
    (52) expression -> . factor
    (53) expression -> . expression_bin
    (54) expression -> . MINUS expression_negate
    (26) factor -> . expression_transpose TRANSPOSE
    (27) factor -> . matrix_function
    (28) factor -> . [ value_list ]
    (29) factor -> . ( expression )
    (30) factor -> . STRING
    (31) factor -> . ID
    (32) factor -> . NUMBER
    (33) expression_bin -> . expression NEQ expression
    (34) expression_bin -> . expression EQ expression
    (35) expression_bin -> . expression LE expression
    (36) expression_bin -> . expression GE expression
    (37) expression_bin -> . expression LT expression
    (38) expression_bin -> . expression GT expression
    (39) expression_bin -> . expression DOTDIV expression
    (40) expression_bin -> . expression DOTMUL expression
    (41) expression_bin -> . expression DIVIDE expression
    (42) expression_bin -> . expression TIMES expression
    (43) expression_bin -> . expression DOTSUB expression
    (44) expression_bin -> . expression DOTADD expression
    (45) expression_bin -> . expression MINUS expression
    (46) expression_bin -> . expression PLUS expression
    (48) expression_transpose -> . factor
    (49) matrix_function -> . EYE ( expression )
    (50) matrix_function -> . ONES ( expression )
    (51) matrix_function -> . ZEROS ( expression )
    (62) NUMBER -> . FLOATNUM
    (63) NUMBER -> . INTNUM
    MINUS           shift and go to state 28
    [               shift and go to state 31
    (               shift and go to state 32
    STRING          shift and go to state 33
    ID              shift and go to state 34
    EYE             shift and go to state 36
    ONES            shift and go to state 37
    ZEROS           shift and go to state 38
    FLOATNUM        shift and go to state 39
    INTNUM          shift and go to state 40

    expression                     shift and go to state 127
    factor                         shift and go to state 26
    expression_bin                 shift and go to state 27
    expression_transpose           shift and go to state 29
    matrix_function                shift and go to state 30
    NUMBER                         shift and go to state 35

state 125

    (23) string_of_ints -> string_of_ints , INTNUM .
    ]               reduce using rule 23 (string_of_ints -> string_of_ints , INTNUM .)
    ,               reduce using rule 23 (string_of_ints -> string_of_ints , INTNUM .)


state 126

    (57) if_statement -> IF ( expression ) instruction . ELSE instruction
    (58) if_statement -> IF ( expression ) instruction .
    ELSE            shift and go to state 128
    {               reduce using rule 58 (if_statement -> IF ( expression ) instruction .)
    RETURN          reduce using rule 58 (if_statement -> IF ( expression ) instruction .)
    CONTINUE        reduce using rule 58 (if_statement -> IF ( expression ) instruction .)
    BREAK           reduce using rule 58 (if_statement -> IF ( expression ) instruction .)
    ;               reduce using rule 58 (if_statement -> IF ( expression ) instruction .)
    WHILE           reduce using rule 58 (if_statement -> IF ( expression ) instruction .)
    FOR             reduce using rule 58 (if_statement -> IF ( expression ) instruction .)
    IF              reduce using rule 58 (if_statement -> IF ( expression ) instruction .)
    PRINT           reduce using rule 58 (if_statement -> IF ( expression ) instruction .)
    ID              reduce using rule 58 (if_statement -> IF ( expression ) instruction .)
    $end            reduce using rule 58 (if_statement -> IF ( expression ) instruction .)
    }               reduce using rule 58 (if_statement -> IF ( expression ) instruction .)


state 127

    (59) for_loop -> FOR ID ASSIGN expression RANGE expression . instruction
    (33) expression_bin -> expression . NEQ expression
    (34) expression_bin -> expression . EQ expression
    (35) expression_bin -> expression . LE expression
    (36) expression_bin -> expression . GE expression
    (37) expression_bin -> expression . LT expression
    (38) expression_bin -> expression . GT expression
    (39) expression_bin -> expression . DOTDIV expression
    (40) expression_bin -> expression . DOTMUL expression
    (41) expression_bin -> expression . DIVIDE expression
    (42) expression_bin -> expression . TIMES expression
    (43) expression_bin -> expression . DOTSUB expression
    (44) expression_bin -> expression . DOTADD expression
    (45) expression_bin -> expression . MINUS expression
    (46) expression_bin -> expression . PLUS expression
    (4) instruction -> . { instructions }
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction
    (13) non_end_instruction -> . while_loop
    (14) non_end_instruction -> . for_loop
    (15) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . RETURN expression ;
    (8) end_line_instruction -> . print_stmt
    (9) end_line_instruction -> . CONTINUE ;
    (10) end_line_instruction -> . BREAK ;
    (11) end_line_instruction -> . assignment
    (12) end_line_instruction -> . ;
    (60) while_loop -> . WHILE ( expression ) instruction
    (59) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (57) if_statement -> . IF ( expression ) instruction ELSE instruction
    (58) if_statement -> . IF ( expression ) instruction
    (61) print_stmt -> . PRINT value_list ;
    (16) assignment -> . id_all DIVASSIGN expression ;
    (17) assignment -> . id_all MULASSIGN expression ;
    (18) assignment -> . id_all SUBASSIGN expression ;
    (19) assignment -> . id_all ADDASSIGN expression ;
    (20) assignment -> . id_all ASSIGN expression ;
    (21) id_all -> . matrix_ref
    (22) id_all -> . ID
    (25) matrix_ref -> . ID [ string_of_ints ]
    NEQ             shift and go to state 56
    EQ              shift and go to state 57
    LE              shift and go to state 58
    GE              shift and go to state 59
    LT              shift and go to state 60
    GT              shift and go to state 61
    DOTDIV          shift and go to state 62
    DOTMUL          shift and go to state 63
    DIVIDE          shift and go to state 64
    TIMES           shift and go to state 65
    DOTSUB          shift and go to state 66
    DOTADD          shift and go to state 67
    MINUS           shift and go to state 68
    PLUS            shift and go to state 69
    {               shift and go to state 4
    RETURN          shift and go to state 10
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ;               shift and go to state 11
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    IF              shift and go to state 19
    PRINT           shift and go to state 20
    ID              shift and go to state 18

    instruction                    shift and go to state 129
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 12
    assignment                     shift and go to state 15
    id_all                         shift and go to state 21
    matrix_ref                     shift and go to state 22

state 128

    (57) if_statement -> IF ( expression ) instruction ELSE . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction
    (13) non_end_instruction -> . while_loop
    (14) non_end_instruction -> . for_loop
    (15) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . RETURN expression ;
    (8) end_line_instruction -> . print_stmt
    (9) end_line_instruction -> . CONTINUE ;
    (10) end_line_instruction -> . BREAK ;
    (11) end_line_instruction -> . assignment
    (12) end_line_instruction -> . ;
    (60) while_loop -> . WHILE ( expression ) instruction
    (59) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (57) if_statement -> . IF ( expression ) instruction ELSE instruction
    (58) if_statement -> . IF ( expression ) instruction
    (61) print_stmt -> . PRINT value_list ;
    (16) assignment -> . id_all DIVASSIGN expression ;
    (17) assignment -> . id_all MULASSIGN expression ;
    (18) assignment -> . id_all SUBASSIGN expression ;
    (19) assignment -> . id_all ADDASSIGN expression ;
    (20) assignment -> . id_all ASSIGN expression ;
    (21) id_all -> . matrix_ref
    (22) id_all -> . ID
    (25) matrix_ref -> . ID [ string_of_ints ]
    {               shift and go to state 4
    RETURN          shift and go to state 10
    CONTINUE        shift and go to state 13
    BREAK           shift and go to state 14
    ;               shift and go to state 11
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    IF              shift and go to state 19
    PRINT           shift and go to state 20
    ID              shift and go to state 18

    instruction                    shift and go to state 130
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 12
    assignment                     shift and go to state 15
    id_all                         shift and go to state 21
    matrix_ref                     shift and go to state 22

state 129

    (59) for_loop -> FOR ID ASSIGN expression RANGE expression instruction .
    {               reduce using rule 59 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    RETURN          reduce using rule 59 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    CONTINUE        reduce using rule 59 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    BREAK           reduce using rule 59 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    ;               reduce using rule 59 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    WHILE           reduce using rule 59 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    FOR             reduce using rule 59 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    IF              reduce using rule 59 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    PRINT           reduce using rule 59 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    ID              reduce using rule 59 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    $end            reduce using rule 59 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    }               reduce using rule 59 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    ELSE            reduce using rule 59 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)


state 130

    (57) if_statement -> IF ( expression ) instruction ELSE instruction .
    {               reduce using rule 57 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    RETURN          reduce using rule 57 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    CONTINUE        reduce using rule 57 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    BREAK           reduce using rule 57 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    ;               reduce using rule 57 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    WHILE           reduce using rule 57 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    FOR             reduce using rule 57 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    IF              reduce using rule 57 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    PRINT           reduce using rule 57 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    ID              reduce using rule 57 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    $end            reduce using rule 57 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    }               reduce using rule 57 (if_statement -> IF ( expression ) instruction ELSE instruction .)
    ELSE            reduce using rule 57 (if_statement -> IF ( expression ) instruction ELSE instruction .)
