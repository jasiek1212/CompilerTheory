Grammar:

Rule 0     S' -> program
Rule 1     program -> instructions
Rule 2     instructions -> instructions instruction
Rule 3     instructions -> instruction
Rule 4     instructions -> { instruction }
Rule 5     instruction -> non_end_instruction
Rule 6     instruction -> end_line_instruction ;
Rule 7     end_line_instruction -> print_stmt
Rule 8     end_line_instruction -> return_stmt
Rule 9     end_line_instruction -> continue_stmt
Rule 10    end_line_instruction -> break_stmt
Rule 11    end_line_instruction -> assignment
Rule 12    non_end_instruction -> while_loop
Rule 13    non_end_instruction -> for_loop
Rule 14    non_end_instruction -> if_statement
Rule 15    assignment -> ID DIVASSIGN expression  [precedence=nonassoc, level=3]
Rule 16    assignment -> ID MULASSIGN expression  [precedence=nonassoc, level=3]
Rule 17    assignment -> ID SUBASSIGN expression  [precedence=nonassoc, level=3]
Rule 18    assignment -> ID ADDASSIGN expression  [precedence=nonassoc, level=3]
Rule 19    assignment -> ID ASSIGN expression  [precedence=nonassoc, level=3]
Rule 20    expression_op -> term
Rule 21    expression_op -> expression DOTSUB term  [precedence=left, level=7]
Rule 22    expression_op -> expression DOTADD term  [precedence=left, level=7]
Rule 23    expression_op -> expression MINUS term  [precedence=left, level=5]
Rule 24    expression_op -> expression PLUS term  [precedence=left, level=5]
Rule 25    term -> factor
Rule 26    term -> term DOTDIV factor  [precedence=left, level=8]
Rule 27    term -> term DOTMUL factor  [precedence=left, level=8]
Rule 28    term -> term DIVIDE factor  [precedence=left, level=6]
Rule 29    term -> term TIMES factor  [precedence=left, level=6]
Rule 30    factor -> expression_transpose TRANSPOSE  [precedence=right, level=10]
Rule 31    factor -> matrix_function
Rule 32    factor -> [ value_list ]
Rule 33    factor -> ( expression )
Rule 34    factor -> STRING
Rule 35    factor -> ID
Rule 36    factor -> NUMBER
Rule 37    expression_relational -> expression NEQ expression  [precedence=left, level=4]
Rule 38    expression_relational -> expression EQ expression  [precedence=left, level=4]
Rule 39    expression_relational -> expression LE expression  [precedence=left, level=4]
Rule 40    expression_relational -> expression GE expression  [precedence=left, level=4]
Rule 41    expression_relational -> expression LT expression  [precedence=left, level=4]
Rule 42    expression_relational -> expression GT expression  [precedence=left, level=4]
Rule 43    expression_negate -> expression  [precedence=right, level=9]
Rule 44    expression_transpose -> factor  [precedence=right, level=10]
Rule 45    matrix_function -> EYE ( expression )
Rule 46    matrix_function -> ONES ( expression )
Rule 47    matrix_function -> ZEROS ( expression )
Rule 48    expression -> expression_relational
Rule 49    expression -> expression_op
Rule 50    expression -> MINUS expression_negate  [precedence=left, level=5]
Rule 51    value_list -> expression
Rule 52    value_list -> value_list , expression
Rule 53    if_statement -> IF ( expression ) instructions ELSE instructions  [precedence=nonassoc, level=2]
Rule 54    if_statement -> IF ( expression ) instructions  [precedence=nonassoc, level=1]
Rule 55    for_loop -> FOR ID ASSIGN expression RANGE expression instruction
Rule 56    while_loop -> WHILE ( expression ) instruction
Rule 57    break_stmt -> BREAK
Rule 58    continue_stmt -> CONTINUE
Rule 59    return_stmt -> RETURN expression
Rule 60    print_stmt -> PRINT expression
Rule 61    NUMBER -> FLOATNUM
Rule 62    NUMBER -> INTNUM

Terminals, with rules where they appear:

(                    : 33 45 46 47 53 54 56
)                    : 33 45 46 47 53 54 56
,                    : 52
;                    : 6
ADDASSIGN            : 18
ASSIGN               : 19 55
BREAK                : 57
CONTINUE             : 58
DIVASSIGN            : 15
DIVIDE               : 28
DOTADD               : 22
DOTDIV               : 26
DOTMUL               : 27
DOTSUB               : 21
ELSE                 : 53
EQ                   : 38
EYE                  : 45
FLOATNUM             : 61
FOR                  : 55
GE                   : 40
GT                   : 42
ID                   : 15 16 17 18 19 35 55
IF                   : 53 54
INTNUM               : 62
LE                   : 39
LT                   : 41
MINUS                : 23 50
MULASSIGN            : 16
NEQ                  : 37
ONES                 : 46
PLUS                 : 24
PRINT                : 60
RANGE                : 55
RETURN               : 59
STRING               : 34
SUBASSIGN            : 17
TIMES                : 29
TRANSPOSE            : 30
WHILE                : 56
ZEROS                : 47
[                    : 32
]                    : 32
error                : 
{                    : 4
}                    : 4

Nonterminals, with rules where they appear:

NUMBER               : 36
assignment           : 11
break_stmt           : 10
continue_stmt        : 9
end_line_instruction : 6
expression           : 15 16 17 18 19 21 22 23 24 33 37 37 38 38 39 39 40 40 41 41 42 42 43 45 46 47 51 52 53 54 55 55 56 59 60
expression_negate    : 50
expression_op        : 49
expression_relational : 48
expression_transpose : 30
factor               : 25 26 27 28 29 44
for_loop             : 13
if_statement         : 14
instruction          : 2 3 4 55 56
instructions         : 1 2 53 53 54
matrix_function      : 31
non_end_instruction  : 5
print_stmt           : 7
program              : 0
return_stmt          : 8
term                 : 20 21 22 23 24 26 27 28 29
value_list           : 32 52
while_loop           : 12


state 0

    (0) S' -> . program
    (1) program -> . instructions
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instructions -> . { instruction }
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction ;
    (12) non_end_instruction -> . while_loop
    (13) non_end_instruction -> . for_loop
    (14) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . print_stmt
    (8) end_line_instruction -> . return_stmt
    (9) end_line_instruction -> . continue_stmt
    (10) end_line_instruction -> . break_stmt
    (11) end_line_instruction -> . assignment
    (56) while_loop -> . WHILE ( expression ) instruction
    (55) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (53) if_statement -> . IF ( expression ) instructions ELSE instructions
    (54) if_statement -> . IF ( expression ) instructions
    (60) print_stmt -> . PRINT expression
    (59) return_stmt -> . RETURN expression
    (58) continue_stmt -> . CONTINUE
    (57) break_stmt -> . BREAK
    (15) assignment -> . ID DIVASSIGN expression
    (16) assignment -> . ID MULASSIGN expression
    (17) assignment -> . ID SUBASSIGN expression
    (18) assignment -> . ID ADDASSIGN expression
    (19) assignment -> . ID ASSIGN expression
    {               shift and go to state 4
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    CONTINUE        shift and go to state 21
    BREAK           shift and go to state 22
    ID              shift and go to state 17

    program                        shift and go to state 1
    instructions                   shift and go to state 2
    instruction                    shift and go to state 3
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 10
    return_stmt                    shift and go to state 11
    continue_stmt                  shift and go to state 12
    break_stmt                     shift and go to state 13
    assignment                     shift and go to state 14

state 1

    (0) S' -> program .


state 2

    (1) program -> instructions .
    (2) instructions -> instructions . instruction
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction ;
    (12) non_end_instruction -> . while_loop
    (13) non_end_instruction -> . for_loop
    (14) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . print_stmt
    (8) end_line_instruction -> . return_stmt
    (9) end_line_instruction -> . continue_stmt
    (10) end_line_instruction -> . break_stmt
    (11) end_line_instruction -> . assignment
    (56) while_loop -> . WHILE ( expression ) instruction
    (55) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (53) if_statement -> . IF ( expression ) instructions ELSE instructions
    (54) if_statement -> . IF ( expression ) instructions
    (60) print_stmt -> . PRINT expression
    (59) return_stmt -> . RETURN expression
    (58) continue_stmt -> . CONTINUE
    (57) break_stmt -> . BREAK
    (15) assignment -> . ID DIVASSIGN expression
    (16) assignment -> . ID MULASSIGN expression
    (17) assignment -> . ID SUBASSIGN expression
    (18) assignment -> . ID ADDASSIGN expression
    (19) assignment -> . ID ASSIGN expression
    $end            reduce using rule 1 (program -> instructions .)
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    CONTINUE        shift and go to state 21
    BREAK           shift and go to state 22
    ID              shift and go to state 17

    instruction                    shift and go to state 23
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 10
    return_stmt                    shift and go to state 11
    continue_stmt                  shift and go to state 12
    break_stmt                     shift and go to state 13
    assignment                     shift and go to state 14

state 3

    (3) instructions -> instruction .
    WHILE           reduce using rule 3 (instructions -> instruction .)
    FOR             reduce using rule 3 (instructions -> instruction .)
    IF              reduce using rule 3 (instructions -> instruction .)
    PRINT           reduce using rule 3 (instructions -> instruction .)
    RETURN          reduce using rule 3 (instructions -> instruction .)
    CONTINUE        reduce using rule 3 (instructions -> instruction .)
    BREAK           reduce using rule 3 (instructions -> instruction .)
    ID              reduce using rule 3 (instructions -> instruction .)
    $end            reduce using rule 3 (instructions -> instruction .)
    }               reduce using rule 3 (instructions -> instruction .)
    ELSE            reduce using rule 3 (instructions -> instruction .)


state 4

    (4) instructions -> { . instruction }
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction ;
    (12) non_end_instruction -> . while_loop
    (13) non_end_instruction -> . for_loop
    (14) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . print_stmt
    (8) end_line_instruction -> . return_stmt
    (9) end_line_instruction -> . continue_stmt
    (10) end_line_instruction -> . break_stmt
    (11) end_line_instruction -> . assignment
    (56) while_loop -> . WHILE ( expression ) instruction
    (55) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (53) if_statement -> . IF ( expression ) instructions ELSE instructions
    (54) if_statement -> . IF ( expression ) instructions
    (60) print_stmt -> . PRINT expression
    (59) return_stmt -> . RETURN expression
    (58) continue_stmt -> . CONTINUE
    (57) break_stmt -> . BREAK
    (15) assignment -> . ID DIVASSIGN expression
    (16) assignment -> . ID MULASSIGN expression
    (17) assignment -> . ID SUBASSIGN expression
    (18) assignment -> . ID ADDASSIGN expression
    (19) assignment -> . ID ASSIGN expression
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    CONTINUE        shift and go to state 21
    BREAK           shift and go to state 22
    ID              shift and go to state 17

    instruction                    shift and go to state 24
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 10
    return_stmt                    shift and go to state 11
    continue_stmt                  shift and go to state 12
    break_stmt                     shift and go to state 13
    assignment                     shift and go to state 14

state 5

    (5) instruction -> non_end_instruction .
    WHILE           reduce using rule 5 (instruction -> non_end_instruction .)
    FOR             reduce using rule 5 (instruction -> non_end_instruction .)
    IF              reduce using rule 5 (instruction -> non_end_instruction .)
    PRINT           reduce using rule 5 (instruction -> non_end_instruction .)
    RETURN          reduce using rule 5 (instruction -> non_end_instruction .)
    CONTINUE        reduce using rule 5 (instruction -> non_end_instruction .)
    BREAK           reduce using rule 5 (instruction -> non_end_instruction .)
    ID              reduce using rule 5 (instruction -> non_end_instruction .)
    $end            reduce using rule 5 (instruction -> non_end_instruction .)
    }               reduce using rule 5 (instruction -> non_end_instruction .)
    ELSE            reduce using rule 5 (instruction -> non_end_instruction .)


state 6

    (6) instruction -> end_line_instruction . ;
    ;               shift and go to state 25


state 7

    (12) non_end_instruction -> while_loop .
    WHILE           reduce using rule 12 (non_end_instruction -> while_loop .)
    FOR             reduce using rule 12 (non_end_instruction -> while_loop .)
    IF              reduce using rule 12 (non_end_instruction -> while_loop .)
    PRINT           reduce using rule 12 (non_end_instruction -> while_loop .)
    RETURN          reduce using rule 12 (non_end_instruction -> while_loop .)
    CONTINUE        reduce using rule 12 (non_end_instruction -> while_loop .)
    BREAK           reduce using rule 12 (non_end_instruction -> while_loop .)
    ID              reduce using rule 12 (non_end_instruction -> while_loop .)
    $end            reduce using rule 12 (non_end_instruction -> while_loop .)
    }               reduce using rule 12 (non_end_instruction -> while_loop .)
    ELSE            reduce using rule 12 (non_end_instruction -> while_loop .)


state 8

    (13) non_end_instruction -> for_loop .
    WHILE           reduce using rule 13 (non_end_instruction -> for_loop .)
    FOR             reduce using rule 13 (non_end_instruction -> for_loop .)
    IF              reduce using rule 13 (non_end_instruction -> for_loop .)
    PRINT           reduce using rule 13 (non_end_instruction -> for_loop .)
    RETURN          reduce using rule 13 (non_end_instruction -> for_loop .)
    CONTINUE        reduce using rule 13 (non_end_instruction -> for_loop .)
    BREAK           reduce using rule 13 (non_end_instruction -> for_loop .)
    ID              reduce using rule 13 (non_end_instruction -> for_loop .)
    $end            reduce using rule 13 (non_end_instruction -> for_loop .)
    }               reduce using rule 13 (non_end_instruction -> for_loop .)
    ELSE            reduce using rule 13 (non_end_instruction -> for_loop .)


state 9

    (14) non_end_instruction -> if_statement .
    WHILE           reduce using rule 14 (non_end_instruction -> if_statement .)
    FOR             reduce using rule 14 (non_end_instruction -> if_statement .)
    IF              reduce using rule 14 (non_end_instruction -> if_statement .)
    PRINT           reduce using rule 14 (non_end_instruction -> if_statement .)
    RETURN          reduce using rule 14 (non_end_instruction -> if_statement .)
    CONTINUE        reduce using rule 14 (non_end_instruction -> if_statement .)
    BREAK           reduce using rule 14 (non_end_instruction -> if_statement .)
    ID              reduce using rule 14 (non_end_instruction -> if_statement .)
    $end            reduce using rule 14 (non_end_instruction -> if_statement .)
    }               reduce using rule 14 (non_end_instruction -> if_statement .)
    ELSE            reduce using rule 14 (non_end_instruction -> if_statement .)


state 10

    (7) end_line_instruction -> print_stmt .
    ;               reduce using rule 7 (end_line_instruction -> print_stmt .)


state 11

    (8) end_line_instruction -> return_stmt .
    ;               reduce using rule 8 (end_line_instruction -> return_stmt .)


state 12

    (9) end_line_instruction -> continue_stmt .
    ;               reduce using rule 9 (end_line_instruction -> continue_stmt .)


state 13

    (10) end_line_instruction -> break_stmt .
    ;               reduce using rule 10 (end_line_instruction -> break_stmt .)


state 14

    (11) end_line_instruction -> assignment .
    ;               reduce using rule 11 (end_line_instruction -> assignment .)


state 15

    (56) while_loop -> WHILE . ( expression ) instruction
    (               shift and go to state 26


state 16

    (55) for_loop -> FOR . ID ASSIGN expression RANGE expression instruction
    ID              shift and go to state 27


state 17

    (15) assignment -> ID . DIVASSIGN expression
    (16) assignment -> ID . MULASSIGN expression
    (17) assignment -> ID . SUBASSIGN expression
    (18) assignment -> ID . ADDASSIGN expression
    (19) assignment -> ID . ASSIGN expression
    DIVASSIGN       shift and go to state 28
    MULASSIGN       shift and go to state 29
    SUBASSIGN       shift and go to state 30
    ADDASSIGN       shift and go to state 31
    ASSIGN          shift and go to state 32


state 18

    (53) if_statement -> IF . ( expression ) instructions ELSE instructions
    (54) if_statement -> IF . ( expression ) instructions
    (               shift and go to state 33


state 19

    (60) print_stmt -> PRINT . expression
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    expression                     shift and go to state 34
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 20

    (59) return_stmt -> RETURN . expression
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    expression                     shift and go to state 52
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 21

    (58) continue_stmt -> CONTINUE .
    ;               reduce using rule 58 (continue_stmt -> CONTINUE .)


state 22

    (57) break_stmt -> BREAK .
    ;               reduce using rule 57 (break_stmt -> BREAK .)


state 23

    (2) instructions -> instructions instruction .
    WHILE           reduce using rule 2 (instructions -> instructions instruction .)
    FOR             reduce using rule 2 (instructions -> instructions instruction .)
    IF              reduce using rule 2 (instructions -> instructions instruction .)
    PRINT           reduce using rule 2 (instructions -> instructions instruction .)
    RETURN          reduce using rule 2 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 2 (instructions -> instructions instruction .)
    BREAK           reduce using rule 2 (instructions -> instructions instruction .)
    ID              reduce using rule 2 (instructions -> instructions instruction .)
    $end            reduce using rule 2 (instructions -> instructions instruction .)
    }               reduce using rule 2 (instructions -> instructions instruction .)
    ELSE            reduce using rule 2 (instructions -> instructions instruction .)


state 24

    (4) instructions -> { instruction . }
    }               shift and go to state 53


state 25

    (6) instruction -> end_line_instruction ; .
    WHILE           reduce using rule 6 (instruction -> end_line_instruction ; .)
    FOR             reduce using rule 6 (instruction -> end_line_instruction ; .)
    IF              reduce using rule 6 (instruction -> end_line_instruction ; .)
    PRINT           reduce using rule 6 (instruction -> end_line_instruction ; .)
    RETURN          reduce using rule 6 (instruction -> end_line_instruction ; .)
    CONTINUE        reduce using rule 6 (instruction -> end_line_instruction ; .)
    BREAK           reduce using rule 6 (instruction -> end_line_instruction ; .)
    ID              reduce using rule 6 (instruction -> end_line_instruction ; .)
    $end            reduce using rule 6 (instruction -> end_line_instruction ; .)
    }               reduce using rule 6 (instruction -> end_line_instruction ; .)
    ELSE            reduce using rule 6 (instruction -> end_line_instruction ; .)


state 26

    (56) while_loop -> WHILE ( . expression ) instruction
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    expression                     shift and go to state 54
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 27

    (55) for_loop -> FOR ID . ASSIGN expression RANGE expression instruction
    ASSIGN          shift and go to state 55


state 28

    (15) assignment -> ID DIVASSIGN . expression
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    expression                     shift and go to state 56
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 29

    (16) assignment -> ID MULASSIGN . expression
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    expression                     shift and go to state 57
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 30

    (17) assignment -> ID SUBASSIGN . expression
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    expression                     shift and go to state 58
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 31

    (18) assignment -> ID ADDASSIGN . expression
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    expression                     shift and go to state 59
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 32

    (19) assignment -> ID ASSIGN . expression
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    expression                     shift and go to state 60
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 33

    (53) if_statement -> IF ( . expression ) instructions ELSE instructions
    (54) if_statement -> IF ( . expression ) instructions
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    expression                     shift and go to state 61
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 34

    (60) print_stmt -> PRINT expression .
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    ;               reduce using rule 60 (print_stmt -> PRINT expression .)
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTSUB          shift and go to state 68
    DOTADD          shift and go to state 69
    MINUS           shift and go to state 70
    PLUS            shift and go to state 71


state 35

    (48) expression -> expression_relational .
    NEQ             reduce using rule 48 (expression -> expression_relational .)
    EQ              reduce using rule 48 (expression -> expression_relational .)
    LE              reduce using rule 48 (expression -> expression_relational .)
    GE              reduce using rule 48 (expression -> expression_relational .)
    LT              reduce using rule 48 (expression -> expression_relational .)
    GT              reduce using rule 48 (expression -> expression_relational .)
    DOTSUB          reduce using rule 48 (expression -> expression_relational .)
    DOTADD          reduce using rule 48 (expression -> expression_relational .)
    MINUS           reduce using rule 48 (expression -> expression_relational .)
    PLUS            reduce using rule 48 (expression -> expression_relational .)
    ;               reduce using rule 48 (expression -> expression_relational .)
    )               reduce using rule 48 (expression -> expression_relational .)
    ]               reduce using rule 48 (expression -> expression_relational .)
    ,               reduce using rule 48 (expression -> expression_relational .)
    RANGE           reduce using rule 48 (expression -> expression_relational .)
    WHILE           reduce using rule 48 (expression -> expression_relational .)
    FOR             reduce using rule 48 (expression -> expression_relational .)
    IF              reduce using rule 48 (expression -> expression_relational .)
    PRINT           reduce using rule 48 (expression -> expression_relational .)
    RETURN          reduce using rule 48 (expression -> expression_relational .)
    CONTINUE        reduce using rule 48 (expression -> expression_relational .)
    BREAK           reduce using rule 48 (expression -> expression_relational .)
    ID              reduce using rule 48 (expression -> expression_relational .)


state 36

    (49) expression -> expression_op .
    NEQ             reduce using rule 49 (expression -> expression_op .)
    EQ              reduce using rule 49 (expression -> expression_op .)
    LE              reduce using rule 49 (expression -> expression_op .)
    GE              reduce using rule 49 (expression -> expression_op .)
    LT              reduce using rule 49 (expression -> expression_op .)
    GT              reduce using rule 49 (expression -> expression_op .)
    DOTSUB          reduce using rule 49 (expression -> expression_op .)
    DOTADD          reduce using rule 49 (expression -> expression_op .)
    MINUS           reduce using rule 49 (expression -> expression_op .)
    PLUS            reduce using rule 49 (expression -> expression_op .)
    ;               reduce using rule 49 (expression -> expression_op .)
    )               reduce using rule 49 (expression -> expression_op .)
    ]               reduce using rule 49 (expression -> expression_op .)
    ,               reduce using rule 49 (expression -> expression_op .)
    RANGE           reduce using rule 49 (expression -> expression_op .)
    WHILE           reduce using rule 49 (expression -> expression_op .)
    FOR             reduce using rule 49 (expression -> expression_op .)
    IF              reduce using rule 49 (expression -> expression_op .)
    PRINT           reduce using rule 49 (expression -> expression_op .)
    RETURN          reduce using rule 49 (expression -> expression_op .)
    CONTINUE        reduce using rule 49 (expression -> expression_op .)
    BREAK           reduce using rule 49 (expression -> expression_op .)
    ID              reduce using rule 49 (expression -> expression_op .)


state 37

    (50) expression -> MINUS . expression_negate
    (43) expression_negate -> . expression
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    expression_negate              shift and go to state 72
    expression                     shift and go to state 73
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 38

    (20) expression_op -> term .
    (26) term -> term . DOTDIV factor
    (27) term -> term . DOTMUL factor
    (28) term -> term . DIVIDE factor
    (29) term -> term . TIMES factor
    NEQ             reduce using rule 20 (expression_op -> term .)
    EQ              reduce using rule 20 (expression_op -> term .)
    LE              reduce using rule 20 (expression_op -> term .)
    GE              reduce using rule 20 (expression_op -> term .)
    LT              reduce using rule 20 (expression_op -> term .)
    GT              reduce using rule 20 (expression_op -> term .)
    DOTSUB          reduce using rule 20 (expression_op -> term .)
    DOTADD          reduce using rule 20 (expression_op -> term .)
    MINUS           reduce using rule 20 (expression_op -> term .)
    PLUS            reduce using rule 20 (expression_op -> term .)
    ;               reduce using rule 20 (expression_op -> term .)
    )               reduce using rule 20 (expression_op -> term .)
    ]               reduce using rule 20 (expression_op -> term .)
    ,               reduce using rule 20 (expression_op -> term .)
    RANGE           reduce using rule 20 (expression_op -> term .)
    WHILE           reduce using rule 20 (expression_op -> term .)
    FOR             reduce using rule 20 (expression_op -> term .)
    IF              reduce using rule 20 (expression_op -> term .)
    PRINT           reduce using rule 20 (expression_op -> term .)
    RETURN          reduce using rule 20 (expression_op -> term .)
    CONTINUE        reduce using rule 20 (expression_op -> term .)
    BREAK           reduce using rule 20 (expression_op -> term .)
    ID              reduce using rule 20 (expression_op -> term .)
    DOTDIV          shift and go to state 74
    DOTMUL          shift and go to state 75
    DIVIDE          shift and go to state 76
    TIMES           shift and go to state 77


state 39

    (25) term -> factor .
    (44) expression_transpose -> factor .
    DOTDIV          reduce using rule 25 (term -> factor .)
    DOTMUL          reduce using rule 25 (term -> factor .)
    DIVIDE          reduce using rule 25 (term -> factor .)
    TIMES           reduce using rule 25 (term -> factor .)
    NEQ             reduce using rule 25 (term -> factor .)
    EQ              reduce using rule 25 (term -> factor .)
    LE              reduce using rule 25 (term -> factor .)
    GE              reduce using rule 25 (term -> factor .)
    LT              reduce using rule 25 (term -> factor .)
    GT              reduce using rule 25 (term -> factor .)
    DOTSUB          reduce using rule 25 (term -> factor .)
    DOTADD          reduce using rule 25 (term -> factor .)
    MINUS           reduce using rule 25 (term -> factor .)
    PLUS            reduce using rule 25 (term -> factor .)
    ;               reduce using rule 25 (term -> factor .)
    )               reduce using rule 25 (term -> factor .)
    ]               reduce using rule 25 (term -> factor .)
    ,               reduce using rule 25 (term -> factor .)
    RANGE           reduce using rule 25 (term -> factor .)
    WHILE           reduce using rule 25 (term -> factor .)
    FOR             reduce using rule 25 (term -> factor .)
    IF              reduce using rule 25 (term -> factor .)
    PRINT           reduce using rule 25 (term -> factor .)
    RETURN          reduce using rule 25 (term -> factor .)
    CONTINUE        reduce using rule 25 (term -> factor .)
    BREAK           reduce using rule 25 (term -> factor .)
    ID              reduce using rule 25 (term -> factor .)
    TRANSPOSE       reduce using rule 44 (expression_transpose -> factor .)


state 40

    (30) factor -> expression_transpose . TRANSPOSE
    TRANSPOSE       shift and go to state 78


state 41

    (31) factor -> matrix_function .
    DOTDIV          reduce using rule 31 (factor -> matrix_function .)
    DOTMUL          reduce using rule 31 (factor -> matrix_function .)
    DIVIDE          reduce using rule 31 (factor -> matrix_function .)
    TIMES           reduce using rule 31 (factor -> matrix_function .)
    NEQ             reduce using rule 31 (factor -> matrix_function .)
    EQ              reduce using rule 31 (factor -> matrix_function .)
    LE              reduce using rule 31 (factor -> matrix_function .)
    GE              reduce using rule 31 (factor -> matrix_function .)
    LT              reduce using rule 31 (factor -> matrix_function .)
    GT              reduce using rule 31 (factor -> matrix_function .)
    DOTSUB          reduce using rule 31 (factor -> matrix_function .)
    DOTADD          reduce using rule 31 (factor -> matrix_function .)
    MINUS           reduce using rule 31 (factor -> matrix_function .)
    PLUS            reduce using rule 31 (factor -> matrix_function .)
    ;               reduce using rule 31 (factor -> matrix_function .)
    TRANSPOSE       reduce using rule 31 (factor -> matrix_function .)
    )               reduce using rule 31 (factor -> matrix_function .)
    ]               reduce using rule 31 (factor -> matrix_function .)
    ,               reduce using rule 31 (factor -> matrix_function .)
    RANGE           reduce using rule 31 (factor -> matrix_function .)
    WHILE           reduce using rule 31 (factor -> matrix_function .)
    FOR             reduce using rule 31 (factor -> matrix_function .)
    IF              reduce using rule 31 (factor -> matrix_function .)
    PRINT           reduce using rule 31 (factor -> matrix_function .)
    RETURN          reduce using rule 31 (factor -> matrix_function .)
    CONTINUE        reduce using rule 31 (factor -> matrix_function .)
    BREAK           reduce using rule 31 (factor -> matrix_function .)
    ID              reduce using rule 31 (factor -> matrix_function .)


state 42

    (32) factor -> [ . value_list ]
    (51) value_list -> . expression
    (52) value_list -> . value_list , expression
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    value_list                     shift and go to state 79
    expression                     shift and go to state 80
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 43

    (33) factor -> ( . expression )
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    expression                     shift and go to state 81
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 44

    (34) factor -> STRING .
    DOTDIV          reduce using rule 34 (factor -> STRING .)
    DOTMUL          reduce using rule 34 (factor -> STRING .)
    DIVIDE          reduce using rule 34 (factor -> STRING .)
    TIMES           reduce using rule 34 (factor -> STRING .)
    NEQ             reduce using rule 34 (factor -> STRING .)
    EQ              reduce using rule 34 (factor -> STRING .)
    LE              reduce using rule 34 (factor -> STRING .)
    GE              reduce using rule 34 (factor -> STRING .)
    LT              reduce using rule 34 (factor -> STRING .)
    GT              reduce using rule 34 (factor -> STRING .)
    DOTSUB          reduce using rule 34 (factor -> STRING .)
    DOTADD          reduce using rule 34 (factor -> STRING .)
    MINUS           reduce using rule 34 (factor -> STRING .)
    PLUS            reduce using rule 34 (factor -> STRING .)
    ;               reduce using rule 34 (factor -> STRING .)
    TRANSPOSE       reduce using rule 34 (factor -> STRING .)
    )               reduce using rule 34 (factor -> STRING .)
    ]               reduce using rule 34 (factor -> STRING .)
    ,               reduce using rule 34 (factor -> STRING .)
    RANGE           reduce using rule 34 (factor -> STRING .)
    WHILE           reduce using rule 34 (factor -> STRING .)
    FOR             reduce using rule 34 (factor -> STRING .)
    IF              reduce using rule 34 (factor -> STRING .)
    PRINT           reduce using rule 34 (factor -> STRING .)
    RETURN          reduce using rule 34 (factor -> STRING .)
    CONTINUE        reduce using rule 34 (factor -> STRING .)
    BREAK           reduce using rule 34 (factor -> STRING .)
    ID              reduce using rule 34 (factor -> STRING .)


state 45

    (35) factor -> ID .
    DOTDIV          reduce using rule 35 (factor -> ID .)
    DOTMUL          reduce using rule 35 (factor -> ID .)
    DIVIDE          reduce using rule 35 (factor -> ID .)
    TIMES           reduce using rule 35 (factor -> ID .)
    NEQ             reduce using rule 35 (factor -> ID .)
    EQ              reduce using rule 35 (factor -> ID .)
    LE              reduce using rule 35 (factor -> ID .)
    GE              reduce using rule 35 (factor -> ID .)
    LT              reduce using rule 35 (factor -> ID .)
    GT              reduce using rule 35 (factor -> ID .)
    DOTSUB          reduce using rule 35 (factor -> ID .)
    DOTADD          reduce using rule 35 (factor -> ID .)
    MINUS           reduce using rule 35 (factor -> ID .)
    PLUS            reduce using rule 35 (factor -> ID .)
    ;               reduce using rule 35 (factor -> ID .)
    TRANSPOSE       reduce using rule 35 (factor -> ID .)
    )               reduce using rule 35 (factor -> ID .)
    ]               reduce using rule 35 (factor -> ID .)
    ,               reduce using rule 35 (factor -> ID .)
    RANGE           reduce using rule 35 (factor -> ID .)
    WHILE           reduce using rule 35 (factor -> ID .)
    FOR             reduce using rule 35 (factor -> ID .)
    IF              reduce using rule 35 (factor -> ID .)
    PRINT           reduce using rule 35 (factor -> ID .)
    RETURN          reduce using rule 35 (factor -> ID .)
    CONTINUE        reduce using rule 35 (factor -> ID .)
    BREAK           reduce using rule 35 (factor -> ID .)
    ID              reduce using rule 35 (factor -> ID .)


state 46

    (36) factor -> NUMBER .
    DOTDIV          reduce using rule 36 (factor -> NUMBER .)
    DOTMUL          reduce using rule 36 (factor -> NUMBER .)
    DIVIDE          reduce using rule 36 (factor -> NUMBER .)
    TIMES           reduce using rule 36 (factor -> NUMBER .)
    NEQ             reduce using rule 36 (factor -> NUMBER .)
    EQ              reduce using rule 36 (factor -> NUMBER .)
    LE              reduce using rule 36 (factor -> NUMBER .)
    GE              reduce using rule 36 (factor -> NUMBER .)
    LT              reduce using rule 36 (factor -> NUMBER .)
    GT              reduce using rule 36 (factor -> NUMBER .)
    DOTSUB          reduce using rule 36 (factor -> NUMBER .)
    DOTADD          reduce using rule 36 (factor -> NUMBER .)
    MINUS           reduce using rule 36 (factor -> NUMBER .)
    PLUS            reduce using rule 36 (factor -> NUMBER .)
    ;               reduce using rule 36 (factor -> NUMBER .)
    TRANSPOSE       reduce using rule 36 (factor -> NUMBER .)
    )               reduce using rule 36 (factor -> NUMBER .)
    ]               reduce using rule 36 (factor -> NUMBER .)
    ,               reduce using rule 36 (factor -> NUMBER .)
    RANGE           reduce using rule 36 (factor -> NUMBER .)
    WHILE           reduce using rule 36 (factor -> NUMBER .)
    FOR             reduce using rule 36 (factor -> NUMBER .)
    IF              reduce using rule 36 (factor -> NUMBER .)
    PRINT           reduce using rule 36 (factor -> NUMBER .)
    RETURN          reduce using rule 36 (factor -> NUMBER .)
    CONTINUE        reduce using rule 36 (factor -> NUMBER .)
    BREAK           reduce using rule 36 (factor -> NUMBER .)
    ID              reduce using rule 36 (factor -> NUMBER .)


state 47

    (45) matrix_function -> EYE . ( expression )
    (               shift and go to state 82


state 48

    (46) matrix_function -> ONES . ( expression )
    (               shift and go to state 83


state 49

    (47) matrix_function -> ZEROS . ( expression )
    (               shift and go to state 84


state 50

    (61) NUMBER -> FLOATNUM .
    DOTDIV          reduce using rule 61 (NUMBER -> FLOATNUM .)
    DOTMUL          reduce using rule 61 (NUMBER -> FLOATNUM .)
    DIVIDE          reduce using rule 61 (NUMBER -> FLOATNUM .)
    TIMES           reduce using rule 61 (NUMBER -> FLOATNUM .)
    NEQ             reduce using rule 61 (NUMBER -> FLOATNUM .)
    EQ              reduce using rule 61 (NUMBER -> FLOATNUM .)
    LE              reduce using rule 61 (NUMBER -> FLOATNUM .)
    GE              reduce using rule 61 (NUMBER -> FLOATNUM .)
    LT              reduce using rule 61 (NUMBER -> FLOATNUM .)
    GT              reduce using rule 61 (NUMBER -> FLOATNUM .)
    DOTSUB          reduce using rule 61 (NUMBER -> FLOATNUM .)
    DOTADD          reduce using rule 61 (NUMBER -> FLOATNUM .)
    MINUS           reduce using rule 61 (NUMBER -> FLOATNUM .)
    PLUS            reduce using rule 61 (NUMBER -> FLOATNUM .)
    ;               reduce using rule 61 (NUMBER -> FLOATNUM .)
    TRANSPOSE       reduce using rule 61 (NUMBER -> FLOATNUM .)
    )               reduce using rule 61 (NUMBER -> FLOATNUM .)
    ]               reduce using rule 61 (NUMBER -> FLOATNUM .)
    ,               reduce using rule 61 (NUMBER -> FLOATNUM .)
    RANGE           reduce using rule 61 (NUMBER -> FLOATNUM .)
    WHILE           reduce using rule 61 (NUMBER -> FLOATNUM .)
    FOR             reduce using rule 61 (NUMBER -> FLOATNUM .)
    IF              reduce using rule 61 (NUMBER -> FLOATNUM .)
    PRINT           reduce using rule 61 (NUMBER -> FLOATNUM .)
    RETURN          reduce using rule 61 (NUMBER -> FLOATNUM .)
    CONTINUE        reduce using rule 61 (NUMBER -> FLOATNUM .)
    BREAK           reduce using rule 61 (NUMBER -> FLOATNUM .)
    ID              reduce using rule 61 (NUMBER -> FLOATNUM .)


state 51

    (62) NUMBER -> INTNUM .
    DOTDIV          reduce using rule 62 (NUMBER -> INTNUM .)
    DOTMUL          reduce using rule 62 (NUMBER -> INTNUM .)
    DIVIDE          reduce using rule 62 (NUMBER -> INTNUM .)
    TIMES           reduce using rule 62 (NUMBER -> INTNUM .)
    NEQ             reduce using rule 62 (NUMBER -> INTNUM .)
    EQ              reduce using rule 62 (NUMBER -> INTNUM .)
    LE              reduce using rule 62 (NUMBER -> INTNUM .)
    GE              reduce using rule 62 (NUMBER -> INTNUM .)
    LT              reduce using rule 62 (NUMBER -> INTNUM .)
    GT              reduce using rule 62 (NUMBER -> INTNUM .)
    DOTSUB          reduce using rule 62 (NUMBER -> INTNUM .)
    DOTADD          reduce using rule 62 (NUMBER -> INTNUM .)
    MINUS           reduce using rule 62 (NUMBER -> INTNUM .)
    PLUS            reduce using rule 62 (NUMBER -> INTNUM .)
    ;               reduce using rule 62 (NUMBER -> INTNUM .)
    TRANSPOSE       reduce using rule 62 (NUMBER -> INTNUM .)
    )               reduce using rule 62 (NUMBER -> INTNUM .)
    ]               reduce using rule 62 (NUMBER -> INTNUM .)
    ,               reduce using rule 62 (NUMBER -> INTNUM .)
    RANGE           reduce using rule 62 (NUMBER -> INTNUM .)
    WHILE           reduce using rule 62 (NUMBER -> INTNUM .)
    FOR             reduce using rule 62 (NUMBER -> INTNUM .)
    IF              reduce using rule 62 (NUMBER -> INTNUM .)
    PRINT           reduce using rule 62 (NUMBER -> INTNUM .)
    RETURN          reduce using rule 62 (NUMBER -> INTNUM .)
    CONTINUE        reduce using rule 62 (NUMBER -> INTNUM .)
    BREAK           reduce using rule 62 (NUMBER -> INTNUM .)
    ID              reduce using rule 62 (NUMBER -> INTNUM .)


state 52

    (59) return_stmt -> RETURN expression .
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    ;               reduce using rule 59 (return_stmt -> RETURN expression .)
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTSUB          shift and go to state 68
    DOTADD          shift and go to state 69
    MINUS           shift and go to state 70
    PLUS            shift and go to state 71


state 53

    (4) instructions -> { instruction } .
    WHILE           reduce using rule 4 (instructions -> { instruction } .)
    FOR             reduce using rule 4 (instructions -> { instruction } .)
    IF              reduce using rule 4 (instructions -> { instruction } .)
    PRINT           reduce using rule 4 (instructions -> { instruction } .)
    RETURN          reduce using rule 4 (instructions -> { instruction } .)
    CONTINUE        reduce using rule 4 (instructions -> { instruction } .)
    BREAK           reduce using rule 4 (instructions -> { instruction } .)
    ID              reduce using rule 4 (instructions -> { instruction } .)
    $end            reduce using rule 4 (instructions -> { instruction } .)
    }               reduce using rule 4 (instructions -> { instruction } .)
    ELSE            reduce using rule 4 (instructions -> { instruction } .)


state 54

    (56) while_loop -> WHILE ( expression . ) instruction
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    )               shift and go to state 85
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTSUB          shift and go to state 68
    DOTADD          shift and go to state 69
    MINUS           shift and go to state 70
    PLUS            shift and go to state 71


state 55

    (55) for_loop -> FOR ID ASSIGN . expression RANGE expression instruction
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    expression                     shift and go to state 86
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 56

    (15) assignment -> ID DIVASSIGN expression .
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    ;               reduce using rule 15 (assignment -> ID DIVASSIGN expression .)
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTSUB          shift and go to state 68
    DOTADD          shift and go to state 69
    MINUS           shift and go to state 70
    PLUS            shift and go to state 71


state 57

    (16) assignment -> ID MULASSIGN expression .
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    ;               reduce using rule 16 (assignment -> ID MULASSIGN expression .)
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTSUB          shift and go to state 68
    DOTADD          shift and go to state 69
    MINUS           shift and go to state 70
    PLUS            shift and go to state 71


state 58

    (17) assignment -> ID SUBASSIGN expression .
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    ;               reduce using rule 17 (assignment -> ID SUBASSIGN expression .)
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTSUB          shift and go to state 68
    DOTADD          shift and go to state 69
    MINUS           shift and go to state 70
    PLUS            shift and go to state 71


state 59

    (18) assignment -> ID ADDASSIGN expression .
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    ;               reduce using rule 18 (assignment -> ID ADDASSIGN expression .)
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTSUB          shift and go to state 68
    DOTADD          shift and go to state 69
    MINUS           shift and go to state 70
    PLUS            shift and go to state 71


state 60

    (19) assignment -> ID ASSIGN expression .
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    ;               reduce using rule 19 (assignment -> ID ASSIGN expression .)
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTSUB          shift and go to state 68
    DOTADD          shift and go to state 69
    MINUS           shift and go to state 70
    PLUS            shift and go to state 71


state 61

    (53) if_statement -> IF ( expression . ) instructions ELSE instructions
    (54) if_statement -> IF ( expression . ) instructions
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    )               shift and go to state 87
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTSUB          shift and go to state 68
    DOTADD          shift and go to state 69
    MINUS           shift and go to state 70
    PLUS            shift and go to state 71


state 62

    (37) expression_relational -> expression NEQ . expression
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    expression                     shift and go to state 88
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 63

    (38) expression_relational -> expression EQ . expression
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    expression                     shift and go to state 89
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 64

    (39) expression_relational -> expression LE . expression
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    expression                     shift and go to state 90
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 65

    (40) expression_relational -> expression GE . expression
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    expression                     shift and go to state 91
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 66

    (41) expression_relational -> expression LT . expression
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    expression                     shift and go to state 92
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 67

    (42) expression_relational -> expression GT . expression
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    expression                     shift and go to state 93
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 68

    (21) expression_op -> expression DOTSUB . term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    term                           shift and go to state 94
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 69

    (22) expression_op -> expression DOTADD . term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    term                           shift and go to state 95
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 70

    (23) expression_op -> expression MINUS . term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    term                           shift and go to state 96
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 71

    (24) expression_op -> expression PLUS . term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    term                           shift and go to state 97
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 72

    (50) expression -> MINUS expression_negate .
    NEQ             reduce using rule 50 (expression -> MINUS expression_negate .)
    EQ              reduce using rule 50 (expression -> MINUS expression_negate .)
    LE              reduce using rule 50 (expression -> MINUS expression_negate .)
    GE              reduce using rule 50 (expression -> MINUS expression_negate .)
    LT              reduce using rule 50 (expression -> MINUS expression_negate .)
    GT              reduce using rule 50 (expression -> MINUS expression_negate .)
    DOTSUB          reduce using rule 50 (expression -> MINUS expression_negate .)
    DOTADD          reduce using rule 50 (expression -> MINUS expression_negate .)
    MINUS           reduce using rule 50 (expression -> MINUS expression_negate .)
    PLUS            reduce using rule 50 (expression -> MINUS expression_negate .)
    ;               reduce using rule 50 (expression -> MINUS expression_negate .)
    )               reduce using rule 50 (expression -> MINUS expression_negate .)
    ]               reduce using rule 50 (expression -> MINUS expression_negate .)
    ,               reduce using rule 50 (expression -> MINUS expression_negate .)
    RANGE           reduce using rule 50 (expression -> MINUS expression_negate .)
    WHILE           reduce using rule 50 (expression -> MINUS expression_negate .)
    FOR             reduce using rule 50 (expression -> MINUS expression_negate .)
    IF              reduce using rule 50 (expression -> MINUS expression_negate .)
    PRINT           reduce using rule 50 (expression -> MINUS expression_negate .)
    RETURN          reduce using rule 50 (expression -> MINUS expression_negate .)
    CONTINUE        reduce using rule 50 (expression -> MINUS expression_negate .)
    BREAK           reduce using rule 50 (expression -> MINUS expression_negate .)
    ID              reduce using rule 50 (expression -> MINUS expression_negate .)


state 73

    (43) expression_negate -> expression .
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    NEQ             reduce using rule 43 (expression_negate -> expression .)
    EQ              reduce using rule 43 (expression_negate -> expression .)
    LE              reduce using rule 43 (expression_negate -> expression .)
    GE              reduce using rule 43 (expression_negate -> expression .)
    LT              reduce using rule 43 (expression_negate -> expression .)
    GT              reduce using rule 43 (expression_negate -> expression .)
    DOTSUB          reduce using rule 43 (expression_negate -> expression .)
    DOTADD          reduce using rule 43 (expression_negate -> expression .)
    MINUS           reduce using rule 43 (expression_negate -> expression .)
    PLUS            reduce using rule 43 (expression_negate -> expression .)
    ;               reduce using rule 43 (expression_negate -> expression .)
    )               reduce using rule 43 (expression_negate -> expression .)
    ]               reduce using rule 43 (expression_negate -> expression .)
    ,               reduce using rule 43 (expression_negate -> expression .)
    RANGE           reduce using rule 43 (expression_negate -> expression .)
    WHILE           reduce using rule 43 (expression_negate -> expression .)
    FOR             reduce using rule 43 (expression_negate -> expression .)
    IF              reduce using rule 43 (expression_negate -> expression .)
    PRINT           reduce using rule 43 (expression_negate -> expression .)
    RETURN          reduce using rule 43 (expression_negate -> expression .)
    CONTINUE        reduce using rule 43 (expression_negate -> expression .)
    BREAK           reduce using rule 43 (expression_negate -> expression .)
    ID              reduce using rule 43 (expression_negate -> expression .)


state 74

    (26) term -> term DOTDIV . factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    factor                         shift and go to state 98
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 75

    (27) term -> term DOTMUL . factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    factor                         shift and go to state 99
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 76

    (28) term -> term DIVIDE . factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    factor                         shift and go to state 100
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 77

    (29) term -> term TIMES . factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    factor                         shift and go to state 101
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 78

    (30) factor -> expression_transpose TRANSPOSE .
    DOTDIV          reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    DOTMUL          reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    DIVIDE          reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    TIMES           reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    NEQ             reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    EQ              reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    LE              reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    GE              reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    LT              reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    GT              reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    DOTSUB          reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    DOTADD          reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    MINUS           reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    PLUS            reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    ;               reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    TRANSPOSE       reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    )               reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    ]               reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    ,               reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    RANGE           reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    WHILE           reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    FOR             reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    IF              reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    PRINT           reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    RETURN          reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    CONTINUE        reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    BREAK           reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)
    ID              reduce using rule 30 (factor -> expression_transpose TRANSPOSE .)


state 79

    (32) factor -> [ value_list . ]
    (52) value_list -> value_list . , expression
    ]               shift and go to state 102
    ,               shift and go to state 103


state 80

    (51) value_list -> expression .
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    ]               reduce using rule 51 (value_list -> expression .)
    ,               reduce using rule 51 (value_list -> expression .)
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTSUB          shift and go to state 68
    DOTADD          shift and go to state 69
    MINUS           shift and go to state 70
    PLUS            shift and go to state 71


state 81

    (33) factor -> ( expression . )
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    )               shift and go to state 104
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTSUB          shift and go to state 68
    DOTADD          shift and go to state 69
    MINUS           shift and go to state 70
    PLUS            shift and go to state 71


state 82

    (45) matrix_function -> EYE ( . expression )
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    expression                     shift and go to state 105
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 83

    (46) matrix_function -> ONES ( . expression )
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    expression                     shift and go to state 106
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 84

    (47) matrix_function -> ZEROS ( . expression )
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    expression                     shift and go to state 107
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 85

    (56) while_loop -> WHILE ( expression ) . instruction
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction ;
    (12) non_end_instruction -> . while_loop
    (13) non_end_instruction -> . for_loop
    (14) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . print_stmt
    (8) end_line_instruction -> . return_stmt
    (9) end_line_instruction -> . continue_stmt
    (10) end_line_instruction -> . break_stmt
    (11) end_line_instruction -> . assignment
    (56) while_loop -> . WHILE ( expression ) instruction
    (55) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (53) if_statement -> . IF ( expression ) instructions ELSE instructions
    (54) if_statement -> . IF ( expression ) instructions
    (60) print_stmt -> . PRINT expression
    (59) return_stmt -> . RETURN expression
    (58) continue_stmt -> . CONTINUE
    (57) break_stmt -> . BREAK
    (15) assignment -> . ID DIVASSIGN expression
    (16) assignment -> . ID MULASSIGN expression
    (17) assignment -> . ID SUBASSIGN expression
    (18) assignment -> . ID ADDASSIGN expression
    (19) assignment -> . ID ASSIGN expression
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    CONTINUE        shift and go to state 21
    BREAK           shift and go to state 22
    ID              shift and go to state 17

    instruction                    shift and go to state 108
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 10
    return_stmt                    shift and go to state 11
    continue_stmt                  shift and go to state 12
    break_stmt                     shift and go to state 13
    assignment                     shift and go to state 14

state 86

    (55) for_loop -> FOR ID ASSIGN expression . RANGE expression instruction
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    RANGE           shift and go to state 109
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTSUB          shift and go to state 68
    DOTADD          shift and go to state 69
    MINUS           shift and go to state 70
    PLUS            shift and go to state 71


state 87

    (53) if_statement -> IF ( expression ) . instructions ELSE instructions
    (54) if_statement -> IF ( expression ) . instructions
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instructions -> . { instruction }
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction ;
    (12) non_end_instruction -> . while_loop
    (13) non_end_instruction -> . for_loop
    (14) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . print_stmt
    (8) end_line_instruction -> . return_stmt
    (9) end_line_instruction -> . continue_stmt
    (10) end_line_instruction -> . break_stmt
    (11) end_line_instruction -> . assignment
    (56) while_loop -> . WHILE ( expression ) instruction
    (55) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (53) if_statement -> . IF ( expression ) instructions ELSE instructions
    (54) if_statement -> . IF ( expression ) instructions
    (60) print_stmt -> . PRINT expression
    (59) return_stmt -> . RETURN expression
    (58) continue_stmt -> . CONTINUE
    (57) break_stmt -> . BREAK
    (15) assignment -> . ID DIVASSIGN expression
    (16) assignment -> . ID MULASSIGN expression
    (17) assignment -> . ID SUBASSIGN expression
    (18) assignment -> . ID ADDASSIGN expression
    (19) assignment -> . ID ASSIGN expression
    {               shift and go to state 4
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    CONTINUE        shift and go to state 21
    BREAK           shift and go to state 22
    ID              shift and go to state 17

    instructions                   shift and go to state 110
    instruction                    shift and go to state 3
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 10
    return_stmt                    shift and go to state 11
    continue_stmt                  shift and go to state 12
    break_stmt                     shift and go to state 13
    assignment                     shift and go to state 14

state 88

    (37) expression_relational -> expression NEQ expression .
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    NEQ             reduce using rule 37 (expression_relational -> expression NEQ expression .)
    EQ              reduce using rule 37 (expression_relational -> expression NEQ expression .)
    LE              reduce using rule 37 (expression_relational -> expression NEQ expression .)
    GE              reduce using rule 37 (expression_relational -> expression NEQ expression .)
    LT              reduce using rule 37 (expression_relational -> expression NEQ expression .)
    GT              reduce using rule 37 (expression_relational -> expression NEQ expression .)
    ;               reduce using rule 37 (expression_relational -> expression NEQ expression .)
    )               reduce using rule 37 (expression_relational -> expression NEQ expression .)
    ]               reduce using rule 37 (expression_relational -> expression NEQ expression .)
    ,               reduce using rule 37 (expression_relational -> expression NEQ expression .)
    RANGE           reduce using rule 37 (expression_relational -> expression NEQ expression .)
    WHILE           reduce using rule 37 (expression_relational -> expression NEQ expression .)
    FOR             reduce using rule 37 (expression_relational -> expression NEQ expression .)
    IF              reduce using rule 37 (expression_relational -> expression NEQ expression .)
    PRINT           reduce using rule 37 (expression_relational -> expression NEQ expression .)
    RETURN          reduce using rule 37 (expression_relational -> expression NEQ expression .)
    CONTINUE        reduce using rule 37 (expression_relational -> expression NEQ expression .)
    BREAK           reduce using rule 37 (expression_relational -> expression NEQ expression .)
    ID              reduce using rule 37 (expression_relational -> expression NEQ expression .)
    DOTSUB          shift and go to state 68
    DOTADD          shift and go to state 69
    MINUS           shift and go to state 70
    PLUS            shift and go to state 71


state 89

    (38) expression_relational -> expression EQ expression .
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    NEQ             reduce using rule 38 (expression_relational -> expression EQ expression .)
    EQ              reduce using rule 38 (expression_relational -> expression EQ expression .)
    LE              reduce using rule 38 (expression_relational -> expression EQ expression .)
    GE              reduce using rule 38 (expression_relational -> expression EQ expression .)
    LT              reduce using rule 38 (expression_relational -> expression EQ expression .)
    GT              reduce using rule 38 (expression_relational -> expression EQ expression .)
    ;               reduce using rule 38 (expression_relational -> expression EQ expression .)
    )               reduce using rule 38 (expression_relational -> expression EQ expression .)
    ]               reduce using rule 38 (expression_relational -> expression EQ expression .)
    ,               reduce using rule 38 (expression_relational -> expression EQ expression .)
    RANGE           reduce using rule 38 (expression_relational -> expression EQ expression .)
    WHILE           reduce using rule 38 (expression_relational -> expression EQ expression .)
    FOR             reduce using rule 38 (expression_relational -> expression EQ expression .)
    IF              reduce using rule 38 (expression_relational -> expression EQ expression .)
    PRINT           reduce using rule 38 (expression_relational -> expression EQ expression .)
    RETURN          reduce using rule 38 (expression_relational -> expression EQ expression .)
    CONTINUE        reduce using rule 38 (expression_relational -> expression EQ expression .)
    BREAK           reduce using rule 38 (expression_relational -> expression EQ expression .)
    ID              reduce using rule 38 (expression_relational -> expression EQ expression .)
    DOTSUB          shift and go to state 68
    DOTADD          shift and go to state 69
    MINUS           shift and go to state 70
    PLUS            shift and go to state 71


state 90

    (39) expression_relational -> expression LE expression .
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    NEQ             reduce using rule 39 (expression_relational -> expression LE expression .)
    EQ              reduce using rule 39 (expression_relational -> expression LE expression .)
    LE              reduce using rule 39 (expression_relational -> expression LE expression .)
    GE              reduce using rule 39 (expression_relational -> expression LE expression .)
    LT              reduce using rule 39 (expression_relational -> expression LE expression .)
    GT              reduce using rule 39 (expression_relational -> expression LE expression .)
    ;               reduce using rule 39 (expression_relational -> expression LE expression .)
    )               reduce using rule 39 (expression_relational -> expression LE expression .)
    ]               reduce using rule 39 (expression_relational -> expression LE expression .)
    ,               reduce using rule 39 (expression_relational -> expression LE expression .)
    RANGE           reduce using rule 39 (expression_relational -> expression LE expression .)
    WHILE           reduce using rule 39 (expression_relational -> expression LE expression .)
    FOR             reduce using rule 39 (expression_relational -> expression LE expression .)
    IF              reduce using rule 39 (expression_relational -> expression LE expression .)
    PRINT           reduce using rule 39 (expression_relational -> expression LE expression .)
    RETURN          reduce using rule 39 (expression_relational -> expression LE expression .)
    CONTINUE        reduce using rule 39 (expression_relational -> expression LE expression .)
    BREAK           reduce using rule 39 (expression_relational -> expression LE expression .)
    ID              reduce using rule 39 (expression_relational -> expression LE expression .)
    DOTSUB          shift and go to state 68
    DOTADD          shift and go to state 69
    MINUS           shift and go to state 70
    PLUS            shift and go to state 71


state 91

    (40) expression_relational -> expression GE expression .
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    NEQ             reduce using rule 40 (expression_relational -> expression GE expression .)
    EQ              reduce using rule 40 (expression_relational -> expression GE expression .)
    LE              reduce using rule 40 (expression_relational -> expression GE expression .)
    GE              reduce using rule 40 (expression_relational -> expression GE expression .)
    LT              reduce using rule 40 (expression_relational -> expression GE expression .)
    GT              reduce using rule 40 (expression_relational -> expression GE expression .)
    ;               reduce using rule 40 (expression_relational -> expression GE expression .)
    )               reduce using rule 40 (expression_relational -> expression GE expression .)
    ]               reduce using rule 40 (expression_relational -> expression GE expression .)
    ,               reduce using rule 40 (expression_relational -> expression GE expression .)
    RANGE           reduce using rule 40 (expression_relational -> expression GE expression .)
    WHILE           reduce using rule 40 (expression_relational -> expression GE expression .)
    FOR             reduce using rule 40 (expression_relational -> expression GE expression .)
    IF              reduce using rule 40 (expression_relational -> expression GE expression .)
    PRINT           reduce using rule 40 (expression_relational -> expression GE expression .)
    RETURN          reduce using rule 40 (expression_relational -> expression GE expression .)
    CONTINUE        reduce using rule 40 (expression_relational -> expression GE expression .)
    BREAK           reduce using rule 40 (expression_relational -> expression GE expression .)
    ID              reduce using rule 40 (expression_relational -> expression GE expression .)
    DOTSUB          shift and go to state 68
    DOTADD          shift and go to state 69
    MINUS           shift and go to state 70
    PLUS            shift and go to state 71


state 92

    (41) expression_relational -> expression LT expression .
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    NEQ             reduce using rule 41 (expression_relational -> expression LT expression .)
    EQ              reduce using rule 41 (expression_relational -> expression LT expression .)
    LE              reduce using rule 41 (expression_relational -> expression LT expression .)
    GE              reduce using rule 41 (expression_relational -> expression LT expression .)
    LT              reduce using rule 41 (expression_relational -> expression LT expression .)
    GT              reduce using rule 41 (expression_relational -> expression LT expression .)
    ;               reduce using rule 41 (expression_relational -> expression LT expression .)
    )               reduce using rule 41 (expression_relational -> expression LT expression .)
    ]               reduce using rule 41 (expression_relational -> expression LT expression .)
    ,               reduce using rule 41 (expression_relational -> expression LT expression .)
    RANGE           reduce using rule 41 (expression_relational -> expression LT expression .)
    WHILE           reduce using rule 41 (expression_relational -> expression LT expression .)
    FOR             reduce using rule 41 (expression_relational -> expression LT expression .)
    IF              reduce using rule 41 (expression_relational -> expression LT expression .)
    PRINT           reduce using rule 41 (expression_relational -> expression LT expression .)
    RETURN          reduce using rule 41 (expression_relational -> expression LT expression .)
    CONTINUE        reduce using rule 41 (expression_relational -> expression LT expression .)
    BREAK           reduce using rule 41 (expression_relational -> expression LT expression .)
    ID              reduce using rule 41 (expression_relational -> expression LT expression .)
    DOTSUB          shift and go to state 68
    DOTADD          shift and go to state 69
    MINUS           shift and go to state 70
    PLUS            shift and go to state 71


state 93

    (42) expression_relational -> expression GT expression .
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    NEQ             reduce using rule 42 (expression_relational -> expression GT expression .)
    EQ              reduce using rule 42 (expression_relational -> expression GT expression .)
    LE              reduce using rule 42 (expression_relational -> expression GT expression .)
    GE              reduce using rule 42 (expression_relational -> expression GT expression .)
    LT              reduce using rule 42 (expression_relational -> expression GT expression .)
    GT              reduce using rule 42 (expression_relational -> expression GT expression .)
    ;               reduce using rule 42 (expression_relational -> expression GT expression .)
    )               reduce using rule 42 (expression_relational -> expression GT expression .)
    ]               reduce using rule 42 (expression_relational -> expression GT expression .)
    ,               reduce using rule 42 (expression_relational -> expression GT expression .)
    RANGE           reduce using rule 42 (expression_relational -> expression GT expression .)
    WHILE           reduce using rule 42 (expression_relational -> expression GT expression .)
    FOR             reduce using rule 42 (expression_relational -> expression GT expression .)
    IF              reduce using rule 42 (expression_relational -> expression GT expression .)
    PRINT           reduce using rule 42 (expression_relational -> expression GT expression .)
    RETURN          reduce using rule 42 (expression_relational -> expression GT expression .)
    CONTINUE        reduce using rule 42 (expression_relational -> expression GT expression .)
    BREAK           reduce using rule 42 (expression_relational -> expression GT expression .)
    ID              reduce using rule 42 (expression_relational -> expression GT expression .)
    DOTSUB          shift and go to state 68
    DOTADD          shift and go to state 69
    MINUS           shift and go to state 70
    PLUS            shift and go to state 71


state 94

    (21) expression_op -> expression DOTSUB term .
    (26) term -> term . DOTDIV factor
    (27) term -> term . DOTMUL factor
    (28) term -> term . DIVIDE factor
    (29) term -> term . TIMES factor
    NEQ             reduce using rule 21 (expression_op -> expression DOTSUB term .)
    EQ              reduce using rule 21 (expression_op -> expression DOTSUB term .)
    LE              reduce using rule 21 (expression_op -> expression DOTSUB term .)
    GE              reduce using rule 21 (expression_op -> expression DOTSUB term .)
    LT              reduce using rule 21 (expression_op -> expression DOTSUB term .)
    GT              reduce using rule 21 (expression_op -> expression DOTSUB term .)
    DOTSUB          reduce using rule 21 (expression_op -> expression DOTSUB term .)
    DOTADD          reduce using rule 21 (expression_op -> expression DOTSUB term .)
    MINUS           reduce using rule 21 (expression_op -> expression DOTSUB term .)
    PLUS            reduce using rule 21 (expression_op -> expression DOTSUB term .)
    ;               reduce using rule 21 (expression_op -> expression DOTSUB term .)
    )               reduce using rule 21 (expression_op -> expression DOTSUB term .)
    ]               reduce using rule 21 (expression_op -> expression DOTSUB term .)
    ,               reduce using rule 21 (expression_op -> expression DOTSUB term .)
    RANGE           reduce using rule 21 (expression_op -> expression DOTSUB term .)
    WHILE           reduce using rule 21 (expression_op -> expression DOTSUB term .)
    FOR             reduce using rule 21 (expression_op -> expression DOTSUB term .)
    IF              reduce using rule 21 (expression_op -> expression DOTSUB term .)
    PRINT           reduce using rule 21 (expression_op -> expression DOTSUB term .)
    RETURN          reduce using rule 21 (expression_op -> expression DOTSUB term .)
    CONTINUE        reduce using rule 21 (expression_op -> expression DOTSUB term .)
    BREAK           reduce using rule 21 (expression_op -> expression DOTSUB term .)
    ID              reduce using rule 21 (expression_op -> expression DOTSUB term .)
    DOTDIV          shift and go to state 74
    DOTMUL          shift and go to state 75
    DIVIDE          shift and go to state 76
    TIMES           shift and go to state 77


state 95

    (22) expression_op -> expression DOTADD term .
    (26) term -> term . DOTDIV factor
    (27) term -> term . DOTMUL factor
    (28) term -> term . DIVIDE factor
    (29) term -> term . TIMES factor
    NEQ             reduce using rule 22 (expression_op -> expression DOTADD term .)
    EQ              reduce using rule 22 (expression_op -> expression DOTADD term .)
    LE              reduce using rule 22 (expression_op -> expression DOTADD term .)
    GE              reduce using rule 22 (expression_op -> expression DOTADD term .)
    LT              reduce using rule 22 (expression_op -> expression DOTADD term .)
    GT              reduce using rule 22 (expression_op -> expression DOTADD term .)
    DOTSUB          reduce using rule 22 (expression_op -> expression DOTADD term .)
    DOTADD          reduce using rule 22 (expression_op -> expression DOTADD term .)
    MINUS           reduce using rule 22 (expression_op -> expression DOTADD term .)
    PLUS            reduce using rule 22 (expression_op -> expression DOTADD term .)
    ;               reduce using rule 22 (expression_op -> expression DOTADD term .)
    )               reduce using rule 22 (expression_op -> expression DOTADD term .)
    ]               reduce using rule 22 (expression_op -> expression DOTADD term .)
    ,               reduce using rule 22 (expression_op -> expression DOTADD term .)
    RANGE           reduce using rule 22 (expression_op -> expression DOTADD term .)
    WHILE           reduce using rule 22 (expression_op -> expression DOTADD term .)
    FOR             reduce using rule 22 (expression_op -> expression DOTADD term .)
    IF              reduce using rule 22 (expression_op -> expression DOTADD term .)
    PRINT           reduce using rule 22 (expression_op -> expression DOTADD term .)
    RETURN          reduce using rule 22 (expression_op -> expression DOTADD term .)
    CONTINUE        reduce using rule 22 (expression_op -> expression DOTADD term .)
    BREAK           reduce using rule 22 (expression_op -> expression DOTADD term .)
    ID              reduce using rule 22 (expression_op -> expression DOTADD term .)
    DOTDIV          shift and go to state 74
    DOTMUL          shift and go to state 75
    DIVIDE          shift and go to state 76
    TIMES           shift and go to state 77


state 96

    (23) expression_op -> expression MINUS term .
    (26) term -> term . DOTDIV factor
    (27) term -> term . DOTMUL factor
    (28) term -> term . DIVIDE factor
    (29) term -> term . TIMES factor
    NEQ             reduce using rule 23 (expression_op -> expression MINUS term .)
    EQ              reduce using rule 23 (expression_op -> expression MINUS term .)
    LE              reduce using rule 23 (expression_op -> expression MINUS term .)
    GE              reduce using rule 23 (expression_op -> expression MINUS term .)
    LT              reduce using rule 23 (expression_op -> expression MINUS term .)
    GT              reduce using rule 23 (expression_op -> expression MINUS term .)
    DOTSUB          reduce using rule 23 (expression_op -> expression MINUS term .)
    DOTADD          reduce using rule 23 (expression_op -> expression MINUS term .)
    MINUS           reduce using rule 23 (expression_op -> expression MINUS term .)
    PLUS            reduce using rule 23 (expression_op -> expression MINUS term .)
    ;               reduce using rule 23 (expression_op -> expression MINUS term .)
    )               reduce using rule 23 (expression_op -> expression MINUS term .)
    ]               reduce using rule 23 (expression_op -> expression MINUS term .)
    ,               reduce using rule 23 (expression_op -> expression MINUS term .)
    RANGE           reduce using rule 23 (expression_op -> expression MINUS term .)
    WHILE           reduce using rule 23 (expression_op -> expression MINUS term .)
    FOR             reduce using rule 23 (expression_op -> expression MINUS term .)
    IF              reduce using rule 23 (expression_op -> expression MINUS term .)
    PRINT           reduce using rule 23 (expression_op -> expression MINUS term .)
    RETURN          reduce using rule 23 (expression_op -> expression MINUS term .)
    CONTINUE        reduce using rule 23 (expression_op -> expression MINUS term .)
    BREAK           reduce using rule 23 (expression_op -> expression MINUS term .)
    ID              reduce using rule 23 (expression_op -> expression MINUS term .)
    DOTDIV          shift and go to state 74
    DOTMUL          shift and go to state 75
    DIVIDE          shift and go to state 76
    TIMES           shift and go to state 77


state 97

    (24) expression_op -> expression PLUS term .
    (26) term -> term . DOTDIV factor
    (27) term -> term . DOTMUL factor
    (28) term -> term . DIVIDE factor
    (29) term -> term . TIMES factor
    NEQ             reduce using rule 24 (expression_op -> expression PLUS term .)
    EQ              reduce using rule 24 (expression_op -> expression PLUS term .)
    LE              reduce using rule 24 (expression_op -> expression PLUS term .)
    GE              reduce using rule 24 (expression_op -> expression PLUS term .)
    LT              reduce using rule 24 (expression_op -> expression PLUS term .)
    GT              reduce using rule 24 (expression_op -> expression PLUS term .)
    DOTSUB          reduce using rule 24 (expression_op -> expression PLUS term .)
    DOTADD          reduce using rule 24 (expression_op -> expression PLUS term .)
    MINUS           reduce using rule 24 (expression_op -> expression PLUS term .)
    PLUS            reduce using rule 24 (expression_op -> expression PLUS term .)
    ;               reduce using rule 24 (expression_op -> expression PLUS term .)
    )               reduce using rule 24 (expression_op -> expression PLUS term .)
    ]               reduce using rule 24 (expression_op -> expression PLUS term .)
    ,               reduce using rule 24 (expression_op -> expression PLUS term .)
    RANGE           reduce using rule 24 (expression_op -> expression PLUS term .)
    WHILE           reduce using rule 24 (expression_op -> expression PLUS term .)
    FOR             reduce using rule 24 (expression_op -> expression PLUS term .)
    IF              reduce using rule 24 (expression_op -> expression PLUS term .)
    PRINT           reduce using rule 24 (expression_op -> expression PLUS term .)
    RETURN          reduce using rule 24 (expression_op -> expression PLUS term .)
    CONTINUE        reduce using rule 24 (expression_op -> expression PLUS term .)
    BREAK           reduce using rule 24 (expression_op -> expression PLUS term .)
    ID              reduce using rule 24 (expression_op -> expression PLUS term .)
    DOTDIV          shift and go to state 74
    DOTMUL          shift and go to state 75
    DIVIDE          shift and go to state 76
    TIMES           shift and go to state 77


state 98

    (26) term -> term DOTDIV factor .
    (44) expression_transpose -> factor .
    DOTDIV          reduce using rule 26 (term -> term DOTDIV factor .)
    DOTMUL          reduce using rule 26 (term -> term DOTDIV factor .)
    DIVIDE          reduce using rule 26 (term -> term DOTDIV factor .)
    TIMES           reduce using rule 26 (term -> term DOTDIV factor .)
    NEQ             reduce using rule 26 (term -> term DOTDIV factor .)
    EQ              reduce using rule 26 (term -> term DOTDIV factor .)
    LE              reduce using rule 26 (term -> term DOTDIV factor .)
    GE              reduce using rule 26 (term -> term DOTDIV factor .)
    LT              reduce using rule 26 (term -> term DOTDIV factor .)
    GT              reduce using rule 26 (term -> term DOTDIV factor .)
    DOTSUB          reduce using rule 26 (term -> term DOTDIV factor .)
    DOTADD          reduce using rule 26 (term -> term DOTDIV factor .)
    MINUS           reduce using rule 26 (term -> term DOTDIV factor .)
    PLUS            reduce using rule 26 (term -> term DOTDIV factor .)
    ;               reduce using rule 26 (term -> term DOTDIV factor .)
    )               reduce using rule 26 (term -> term DOTDIV factor .)
    ]               reduce using rule 26 (term -> term DOTDIV factor .)
    ,               reduce using rule 26 (term -> term DOTDIV factor .)
    RANGE           reduce using rule 26 (term -> term DOTDIV factor .)
    WHILE           reduce using rule 26 (term -> term DOTDIV factor .)
    FOR             reduce using rule 26 (term -> term DOTDIV factor .)
    IF              reduce using rule 26 (term -> term DOTDIV factor .)
    PRINT           reduce using rule 26 (term -> term DOTDIV factor .)
    RETURN          reduce using rule 26 (term -> term DOTDIV factor .)
    CONTINUE        reduce using rule 26 (term -> term DOTDIV factor .)
    BREAK           reduce using rule 26 (term -> term DOTDIV factor .)
    ID              reduce using rule 26 (term -> term DOTDIV factor .)
    TRANSPOSE       reduce using rule 44 (expression_transpose -> factor .)


state 99

    (27) term -> term DOTMUL factor .
    (44) expression_transpose -> factor .
    DOTDIV          reduce using rule 27 (term -> term DOTMUL factor .)
    DOTMUL          reduce using rule 27 (term -> term DOTMUL factor .)
    DIVIDE          reduce using rule 27 (term -> term DOTMUL factor .)
    TIMES           reduce using rule 27 (term -> term DOTMUL factor .)
    NEQ             reduce using rule 27 (term -> term DOTMUL factor .)
    EQ              reduce using rule 27 (term -> term DOTMUL factor .)
    LE              reduce using rule 27 (term -> term DOTMUL factor .)
    GE              reduce using rule 27 (term -> term DOTMUL factor .)
    LT              reduce using rule 27 (term -> term DOTMUL factor .)
    GT              reduce using rule 27 (term -> term DOTMUL factor .)
    DOTSUB          reduce using rule 27 (term -> term DOTMUL factor .)
    DOTADD          reduce using rule 27 (term -> term DOTMUL factor .)
    MINUS           reduce using rule 27 (term -> term DOTMUL factor .)
    PLUS            reduce using rule 27 (term -> term DOTMUL factor .)
    ;               reduce using rule 27 (term -> term DOTMUL factor .)
    )               reduce using rule 27 (term -> term DOTMUL factor .)
    ]               reduce using rule 27 (term -> term DOTMUL factor .)
    ,               reduce using rule 27 (term -> term DOTMUL factor .)
    RANGE           reduce using rule 27 (term -> term DOTMUL factor .)
    WHILE           reduce using rule 27 (term -> term DOTMUL factor .)
    FOR             reduce using rule 27 (term -> term DOTMUL factor .)
    IF              reduce using rule 27 (term -> term DOTMUL factor .)
    PRINT           reduce using rule 27 (term -> term DOTMUL factor .)
    RETURN          reduce using rule 27 (term -> term DOTMUL factor .)
    CONTINUE        reduce using rule 27 (term -> term DOTMUL factor .)
    BREAK           reduce using rule 27 (term -> term DOTMUL factor .)
    ID              reduce using rule 27 (term -> term DOTMUL factor .)
    TRANSPOSE       reduce using rule 44 (expression_transpose -> factor .)


state 100

    (28) term -> term DIVIDE factor .
    (44) expression_transpose -> factor .
    DOTDIV          reduce using rule 28 (term -> term DIVIDE factor .)
    DOTMUL          reduce using rule 28 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 28 (term -> term DIVIDE factor .)
    TIMES           reduce using rule 28 (term -> term DIVIDE factor .)
    NEQ             reduce using rule 28 (term -> term DIVIDE factor .)
    EQ              reduce using rule 28 (term -> term DIVIDE factor .)
    LE              reduce using rule 28 (term -> term DIVIDE factor .)
    GE              reduce using rule 28 (term -> term DIVIDE factor .)
    LT              reduce using rule 28 (term -> term DIVIDE factor .)
    GT              reduce using rule 28 (term -> term DIVIDE factor .)
    DOTSUB          reduce using rule 28 (term -> term DIVIDE factor .)
    DOTADD          reduce using rule 28 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 28 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 28 (term -> term DIVIDE factor .)
    ;               reduce using rule 28 (term -> term DIVIDE factor .)
    )               reduce using rule 28 (term -> term DIVIDE factor .)
    ]               reduce using rule 28 (term -> term DIVIDE factor .)
    ,               reduce using rule 28 (term -> term DIVIDE factor .)
    RANGE           reduce using rule 28 (term -> term DIVIDE factor .)
    WHILE           reduce using rule 28 (term -> term DIVIDE factor .)
    FOR             reduce using rule 28 (term -> term DIVIDE factor .)
    IF              reduce using rule 28 (term -> term DIVIDE factor .)
    PRINT           reduce using rule 28 (term -> term DIVIDE factor .)
    RETURN          reduce using rule 28 (term -> term DIVIDE factor .)
    CONTINUE        reduce using rule 28 (term -> term DIVIDE factor .)
    BREAK           reduce using rule 28 (term -> term DIVIDE factor .)
    ID              reduce using rule 28 (term -> term DIVIDE factor .)
    TRANSPOSE       reduce using rule 44 (expression_transpose -> factor .)


state 101

    (29) term -> term TIMES factor .
    (44) expression_transpose -> factor .
    DOTDIV          reduce using rule 29 (term -> term TIMES factor .)
    DOTMUL          reduce using rule 29 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 29 (term -> term TIMES factor .)
    TIMES           reduce using rule 29 (term -> term TIMES factor .)
    NEQ             reduce using rule 29 (term -> term TIMES factor .)
    EQ              reduce using rule 29 (term -> term TIMES factor .)
    LE              reduce using rule 29 (term -> term TIMES factor .)
    GE              reduce using rule 29 (term -> term TIMES factor .)
    LT              reduce using rule 29 (term -> term TIMES factor .)
    GT              reduce using rule 29 (term -> term TIMES factor .)
    DOTSUB          reduce using rule 29 (term -> term TIMES factor .)
    DOTADD          reduce using rule 29 (term -> term TIMES factor .)
    MINUS           reduce using rule 29 (term -> term TIMES factor .)
    PLUS            reduce using rule 29 (term -> term TIMES factor .)
    ;               reduce using rule 29 (term -> term TIMES factor .)
    )               reduce using rule 29 (term -> term TIMES factor .)
    ]               reduce using rule 29 (term -> term TIMES factor .)
    ,               reduce using rule 29 (term -> term TIMES factor .)
    RANGE           reduce using rule 29 (term -> term TIMES factor .)
    WHILE           reduce using rule 29 (term -> term TIMES factor .)
    FOR             reduce using rule 29 (term -> term TIMES factor .)
    IF              reduce using rule 29 (term -> term TIMES factor .)
    PRINT           reduce using rule 29 (term -> term TIMES factor .)
    RETURN          reduce using rule 29 (term -> term TIMES factor .)
    CONTINUE        reduce using rule 29 (term -> term TIMES factor .)
    BREAK           reduce using rule 29 (term -> term TIMES factor .)
    ID              reduce using rule 29 (term -> term TIMES factor .)
    TRANSPOSE       reduce using rule 44 (expression_transpose -> factor .)


state 102

    (32) factor -> [ value_list ] .
    DOTDIV          reduce using rule 32 (factor -> [ value_list ] .)
    DOTMUL          reduce using rule 32 (factor -> [ value_list ] .)
    DIVIDE          reduce using rule 32 (factor -> [ value_list ] .)
    TIMES           reduce using rule 32 (factor -> [ value_list ] .)
    NEQ             reduce using rule 32 (factor -> [ value_list ] .)
    EQ              reduce using rule 32 (factor -> [ value_list ] .)
    LE              reduce using rule 32 (factor -> [ value_list ] .)
    GE              reduce using rule 32 (factor -> [ value_list ] .)
    LT              reduce using rule 32 (factor -> [ value_list ] .)
    GT              reduce using rule 32 (factor -> [ value_list ] .)
    DOTSUB          reduce using rule 32 (factor -> [ value_list ] .)
    DOTADD          reduce using rule 32 (factor -> [ value_list ] .)
    MINUS           reduce using rule 32 (factor -> [ value_list ] .)
    PLUS            reduce using rule 32 (factor -> [ value_list ] .)
    ;               reduce using rule 32 (factor -> [ value_list ] .)
    TRANSPOSE       reduce using rule 32 (factor -> [ value_list ] .)
    )               reduce using rule 32 (factor -> [ value_list ] .)
    ]               reduce using rule 32 (factor -> [ value_list ] .)
    ,               reduce using rule 32 (factor -> [ value_list ] .)
    RANGE           reduce using rule 32 (factor -> [ value_list ] .)
    WHILE           reduce using rule 32 (factor -> [ value_list ] .)
    FOR             reduce using rule 32 (factor -> [ value_list ] .)
    IF              reduce using rule 32 (factor -> [ value_list ] .)
    PRINT           reduce using rule 32 (factor -> [ value_list ] .)
    RETURN          reduce using rule 32 (factor -> [ value_list ] .)
    CONTINUE        reduce using rule 32 (factor -> [ value_list ] .)
    BREAK           reduce using rule 32 (factor -> [ value_list ] .)
    ID              reduce using rule 32 (factor -> [ value_list ] .)


state 103

    (52) value_list -> value_list , . expression
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    expression                     shift and go to state 111
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 104

    (33) factor -> ( expression ) .
    DOTDIV          reduce using rule 33 (factor -> ( expression ) .)
    DOTMUL          reduce using rule 33 (factor -> ( expression ) .)
    DIVIDE          reduce using rule 33 (factor -> ( expression ) .)
    TIMES           reduce using rule 33 (factor -> ( expression ) .)
    NEQ             reduce using rule 33 (factor -> ( expression ) .)
    EQ              reduce using rule 33 (factor -> ( expression ) .)
    LE              reduce using rule 33 (factor -> ( expression ) .)
    GE              reduce using rule 33 (factor -> ( expression ) .)
    LT              reduce using rule 33 (factor -> ( expression ) .)
    GT              reduce using rule 33 (factor -> ( expression ) .)
    DOTSUB          reduce using rule 33 (factor -> ( expression ) .)
    DOTADD          reduce using rule 33 (factor -> ( expression ) .)
    MINUS           reduce using rule 33 (factor -> ( expression ) .)
    PLUS            reduce using rule 33 (factor -> ( expression ) .)
    ;               reduce using rule 33 (factor -> ( expression ) .)
    TRANSPOSE       reduce using rule 33 (factor -> ( expression ) .)
    )               reduce using rule 33 (factor -> ( expression ) .)
    ]               reduce using rule 33 (factor -> ( expression ) .)
    ,               reduce using rule 33 (factor -> ( expression ) .)
    RANGE           reduce using rule 33 (factor -> ( expression ) .)
    WHILE           reduce using rule 33 (factor -> ( expression ) .)
    FOR             reduce using rule 33 (factor -> ( expression ) .)
    IF              reduce using rule 33 (factor -> ( expression ) .)
    PRINT           reduce using rule 33 (factor -> ( expression ) .)
    RETURN          reduce using rule 33 (factor -> ( expression ) .)
    CONTINUE        reduce using rule 33 (factor -> ( expression ) .)
    BREAK           reduce using rule 33 (factor -> ( expression ) .)
    ID              reduce using rule 33 (factor -> ( expression ) .)


state 105

    (45) matrix_function -> EYE ( expression . )
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    )               shift and go to state 112
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTSUB          shift and go to state 68
    DOTADD          shift and go to state 69
    MINUS           shift and go to state 70
    PLUS            shift and go to state 71


state 106

    (46) matrix_function -> ONES ( expression . )
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    )               shift and go to state 113
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTSUB          shift and go to state 68
    DOTADD          shift and go to state 69
    MINUS           shift and go to state 70
    PLUS            shift and go to state 71


state 107

    (47) matrix_function -> ZEROS ( expression . )
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    )               shift and go to state 114
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTSUB          shift and go to state 68
    DOTADD          shift and go to state 69
    MINUS           shift and go to state 70
    PLUS            shift and go to state 71


state 108

    (56) while_loop -> WHILE ( expression ) instruction .
    WHILE           reduce using rule 56 (while_loop -> WHILE ( expression ) instruction .)
    FOR             reduce using rule 56 (while_loop -> WHILE ( expression ) instruction .)
    IF              reduce using rule 56 (while_loop -> WHILE ( expression ) instruction .)
    PRINT           reduce using rule 56 (while_loop -> WHILE ( expression ) instruction .)
    RETURN          reduce using rule 56 (while_loop -> WHILE ( expression ) instruction .)
    CONTINUE        reduce using rule 56 (while_loop -> WHILE ( expression ) instruction .)
    BREAK           reduce using rule 56 (while_loop -> WHILE ( expression ) instruction .)
    ID              reduce using rule 56 (while_loop -> WHILE ( expression ) instruction .)
    $end            reduce using rule 56 (while_loop -> WHILE ( expression ) instruction .)
    }               reduce using rule 56 (while_loop -> WHILE ( expression ) instruction .)
    ELSE            reduce using rule 56 (while_loop -> WHILE ( expression ) instruction .)


state 109

    (55) for_loop -> FOR ID ASSIGN expression RANGE . expression instruction
    (48) expression -> . expression_relational
    (49) expression -> . expression_op
    (50) expression -> . MINUS expression_negate
    (37) expression_relational -> . expression NEQ expression
    (38) expression_relational -> . expression EQ expression
    (39) expression_relational -> . expression LE expression
    (40) expression_relational -> . expression GE expression
    (41) expression_relational -> . expression LT expression
    (42) expression_relational -> . expression GT expression
    (20) expression_op -> . term
    (21) expression_op -> . expression DOTSUB term
    (22) expression_op -> . expression DOTADD term
    (23) expression_op -> . expression MINUS term
    (24) expression_op -> . expression PLUS term
    (25) term -> . factor
    (26) term -> . term DOTDIV factor
    (27) term -> . term DOTMUL factor
    (28) term -> . term DIVIDE factor
    (29) term -> . term TIMES factor
    (30) factor -> . expression_transpose TRANSPOSE
    (31) factor -> . matrix_function
    (32) factor -> . [ value_list ]
    (33) factor -> . ( expression )
    (34) factor -> . STRING
    (35) factor -> . ID
    (36) factor -> . NUMBER
    (44) expression_transpose -> . factor
    (45) matrix_function -> . EYE ( expression )
    (46) matrix_function -> . ONES ( expression )
    (47) matrix_function -> . ZEROS ( expression )
    (61) NUMBER -> . FLOATNUM
    (62) NUMBER -> . INTNUM
    MINUS           shift and go to state 37
    [               shift and go to state 42
    (               shift and go to state 43
    STRING          shift and go to state 44
    ID              shift and go to state 45
    EYE             shift and go to state 47
    ONES            shift and go to state 48
    ZEROS           shift and go to state 49
    FLOATNUM        shift and go to state 50
    INTNUM          shift and go to state 51

    expression                     shift and go to state 115
    expression_relational          shift and go to state 35
    expression_op                  shift and go to state 36
    term                           shift and go to state 38
    factor                         shift and go to state 39
    expression_transpose           shift and go to state 40
    matrix_function                shift and go to state 41
    NUMBER                         shift and go to state 46

state 110

    (53) if_statement -> IF ( expression ) instructions . ELSE instructions
    (54) if_statement -> IF ( expression ) instructions .
    (2) instructions -> instructions . instruction
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction ;
    (12) non_end_instruction -> . while_loop
    (13) non_end_instruction -> . for_loop
    (14) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . print_stmt
    (8) end_line_instruction -> . return_stmt
    (9) end_line_instruction -> . continue_stmt
    (10) end_line_instruction -> . break_stmt
    (11) end_line_instruction -> . assignment
    (56) while_loop -> . WHILE ( expression ) instruction
    (55) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (53) if_statement -> . IF ( expression ) instructions ELSE instructions
    (54) if_statement -> . IF ( expression ) instructions
    (60) print_stmt -> . PRINT expression
    (59) return_stmt -> . RETURN expression
    (58) continue_stmt -> . CONTINUE
    (57) break_stmt -> . BREAK
    (15) assignment -> . ID DIVASSIGN expression
    (16) assignment -> . ID MULASSIGN expression
    (17) assignment -> . ID SUBASSIGN expression
    (18) assignment -> . ID ADDASSIGN expression
    (19) assignment -> . ID ASSIGN expression
    ELSE            shift and go to state 116
    WHILE           reduce using rule 54 (if_statement -> IF ( expression ) instructions .)
    FOR             reduce using rule 54 (if_statement -> IF ( expression ) instructions .)
    IF              reduce using rule 54 (if_statement -> IF ( expression ) instructions .)
    PRINT           reduce using rule 54 (if_statement -> IF ( expression ) instructions .)
    RETURN          reduce using rule 54 (if_statement -> IF ( expression ) instructions .)
    CONTINUE        reduce using rule 54 (if_statement -> IF ( expression ) instructions .)
    BREAK           reduce using rule 54 (if_statement -> IF ( expression ) instructions .)
    ID              reduce using rule 54 (if_statement -> IF ( expression ) instructions .)
    $end            reduce using rule 54 (if_statement -> IF ( expression ) instructions .)
    }               reduce using rule 54 (if_statement -> IF ( expression ) instructions .)

    instruction                    shift and go to state 23
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 10
    return_stmt                    shift and go to state 11
    continue_stmt                  shift and go to state 12
    break_stmt                     shift and go to state 13
    assignment                     shift and go to state 14

state 111

    (52) value_list -> value_list , expression .
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    ]               reduce using rule 52 (value_list -> value_list , expression .)
    ,               reduce using rule 52 (value_list -> value_list , expression .)
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTSUB          shift and go to state 68
    DOTADD          shift and go to state 69
    MINUS           shift and go to state 70
    PLUS            shift and go to state 71


state 112

    (45) matrix_function -> EYE ( expression ) .
    DOTDIV          reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    DOTMUL          reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    DIVIDE          reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    TIMES           reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    NEQ             reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    EQ              reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    LE              reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    GE              reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    LT              reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    GT              reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    DOTSUB          reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    DOTADD          reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    MINUS           reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    PLUS            reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    ;               reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    TRANSPOSE       reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    )               reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    ]               reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    ,               reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    RANGE           reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    WHILE           reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    FOR             reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    IF              reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    PRINT           reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    RETURN          reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    CONTINUE        reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    BREAK           reduce using rule 45 (matrix_function -> EYE ( expression ) .)
    ID              reduce using rule 45 (matrix_function -> EYE ( expression ) .)


state 113

    (46) matrix_function -> ONES ( expression ) .
    DOTDIV          reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    DOTMUL          reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    DIVIDE          reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    TIMES           reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    NEQ             reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    EQ              reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    LE              reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    GE              reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    LT              reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    GT              reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    DOTSUB          reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    DOTADD          reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    MINUS           reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    PLUS            reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    ;               reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    TRANSPOSE       reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    )               reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    ]               reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    ,               reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    RANGE           reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    WHILE           reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    FOR             reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    IF              reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    PRINT           reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    RETURN          reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    CONTINUE        reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    BREAK           reduce using rule 46 (matrix_function -> ONES ( expression ) .)
    ID              reduce using rule 46 (matrix_function -> ONES ( expression ) .)


state 114

    (47) matrix_function -> ZEROS ( expression ) .
    DOTDIV          reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    DOTMUL          reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    DIVIDE          reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    TIMES           reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    NEQ             reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    EQ              reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    LE              reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    GE              reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    LT              reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    GT              reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    DOTSUB          reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    DOTADD          reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    MINUS           reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    PLUS            reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    ;               reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    TRANSPOSE       reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    )               reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    ]               reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    ,               reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    RANGE           reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    WHILE           reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    FOR             reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    IF              reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    PRINT           reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    RETURN          reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    CONTINUE        reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    BREAK           reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)
    ID              reduce using rule 47 (matrix_function -> ZEROS ( expression ) .)


state 115

    (55) for_loop -> FOR ID ASSIGN expression RANGE expression . instruction
    (37) expression_relational -> expression . NEQ expression
    (38) expression_relational -> expression . EQ expression
    (39) expression_relational -> expression . LE expression
    (40) expression_relational -> expression . GE expression
    (41) expression_relational -> expression . LT expression
    (42) expression_relational -> expression . GT expression
    (21) expression_op -> expression . DOTSUB term
    (22) expression_op -> expression . DOTADD term
    (23) expression_op -> expression . MINUS term
    (24) expression_op -> expression . PLUS term
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction ;
    (12) non_end_instruction -> . while_loop
    (13) non_end_instruction -> . for_loop
    (14) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . print_stmt
    (8) end_line_instruction -> . return_stmt
    (9) end_line_instruction -> . continue_stmt
    (10) end_line_instruction -> . break_stmt
    (11) end_line_instruction -> . assignment
    (56) while_loop -> . WHILE ( expression ) instruction
    (55) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (53) if_statement -> . IF ( expression ) instructions ELSE instructions
    (54) if_statement -> . IF ( expression ) instructions
    (60) print_stmt -> . PRINT expression
    (59) return_stmt -> . RETURN expression
    (58) continue_stmt -> . CONTINUE
    (57) break_stmt -> . BREAK
    (15) assignment -> . ID DIVASSIGN expression
    (16) assignment -> . ID MULASSIGN expression
    (17) assignment -> . ID SUBASSIGN expression
    (18) assignment -> . ID ADDASSIGN expression
    (19) assignment -> . ID ASSIGN expression
    NEQ             shift and go to state 62
    EQ              shift and go to state 63
    LE              shift and go to state 64
    GE              shift and go to state 65
    LT              shift and go to state 66
    GT              shift and go to state 67
    DOTSUB          shift and go to state 68
    DOTADD          shift and go to state 69
    MINUS           shift and go to state 70
    PLUS            shift and go to state 71
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    CONTINUE        shift and go to state 21
    BREAK           shift and go to state 22
    ID              shift and go to state 17

    instruction                    shift and go to state 117
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 10
    return_stmt                    shift and go to state 11
    continue_stmt                  shift and go to state 12
    break_stmt                     shift and go to state 13
    assignment                     shift and go to state 14

state 116

    (53) if_statement -> IF ( expression ) instructions ELSE . instructions
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instructions -> . { instruction }
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction ;
    (12) non_end_instruction -> . while_loop
    (13) non_end_instruction -> . for_loop
    (14) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . print_stmt
    (8) end_line_instruction -> . return_stmt
    (9) end_line_instruction -> . continue_stmt
    (10) end_line_instruction -> . break_stmt
    (11) end_line_instruction -> . assignment
    (56) while_loop -> . WHILE ( expression ) instruction
    (55) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (53) if_statement -> . IF ( expression ) instructions ELSE instructions
    (54) if_statement -> . IF ( expression ) instructions
    (60) print_stmt -> . PRINT expression
    (59) return_stmt -> . RETURN expression
    (58) continue_stmt -> . CONTINUE
    (57) break_stmt -> . BREAK
    (15) assignment -> . ID DIVASSIGN expression
    (16) assignment -> . ID MULASSIGN expression
    (17) assignment -> . ID SUBASSIGN expression
    (18) assignment -> . ID ADDASSIGN expression
    (19) assignment -> . ID ASSIGN expression
    {               shift and go to state 4
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 18
    PRINT           shift and go to state 19
    RETURN          shift and go to state 20
    CONTINUE        shift and go to state 21
    BREAK           shift and go to state 22
    ID              shift and go to state 17

    instructions                   shift and go to state 118
    instruction                    shift and go to state 3
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 10
    return_stmt                    shift and go to state 11
    continue_stmt                  shift and go to state 12
    break_stmt                     shift and go to state 13
    assignment                     shift and go to state 14

state 117

    (55) for_loop -> FOR ID ASSIGN expression RANGE expression instruction .
    WHILE           reduce using rule 55 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    FOR             reduce using rule 55 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    IF              reduce using rule 55 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    PRINT           reduce using rule 55 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    RETURN          reduce using rule 55 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    CONTINUE        reduce using rule 55 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    BREAK           reduce using rule 55 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    ID              reduce using rule 55 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    $end            reduce using rule 55 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    }               reduce using rule 55 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)
    ELSE            reduce using rule 55 (for_loop -> FOR ID ASSIGN expression RANGE expression instruction .)


state 118

    (53) if_statement -> IF ( expression ) instructions ELSE instructions .
    (2) instructions -> instructions . instruction
    (5) instruction -> . non_end_instruction
    (6) instruction -> . end_line_instruction ;
    (12) non_end_instruction -> . while_loop
    (13) non_end_instruction -> . for_loop
    (14) non_end_instruction -> . if_statement
    (7) end_line_instruction -> . print_stmt
    (8) end_line_instruction -> . return_stmt
    (9) end_line_instruction -> . continue_stmt
    (10) end_line_instruction -> . break_stmt
    (11) end_line_instruction -> . assignment
    (56) while_loop -> . WHILE ( expression ) instruction
    (55) for_loop -> . FOR ID ASSIGN expression RANGE expression instruction
    (53) if_statement -> . IF ( expression ) instructions ELSE instructions
    (54) if_statement -> . IF ( expression ) instructions
    (60) print_stmt -> . PRINT expression
    (59) return_stmt -> . RETURN expression
    (58) continue_stmt -> . CONTINUE
    (57) break_stmt -> . BREAK
    (15) assignment -> . ID DIVASSIGN expression
    (16) assignment -> . ID MULASSIGN expression
    (17) assignment -> . ID SUBASSIGN expression
    (18) assignment -> . ID ADDASSIGN expression
    (19) assignment -> . ID ASSIGN expression
    WHILE           reduce using rule 53 (if_statement -> IF ( expression ) instructions ELSE instructions .)
    FOR             reduce using rule 53 (if_statement -> IF ( expression ) instructions ELSE instructions .)
    IF              reduce using rule 53 (if_statement -> IF ( expression ) instructions ELSE instructions .)
    PRINT           reduce using rule 53 (if_statement -> IF ( expression ) instructions ELSE instructions .)
    RETURN          reduce using rule 53 (if_statement -> IF ( expression ) instructions ELSE instructions .)
    CONTINUE        reduce using rule 53 (if_statement -> IF ( expression ) instructions ELSE instructions .)
    BREAK           reduce using rule 53 (if_statement -> IF ( expression ) instructions ELSE instructions .)
    ID              reduce using rule 53 (if_statement -> IF ( expression ) instructions ELSE instructions .)
    $end            reduce using rule 53 (if_statement -> IF ( expression ) instructions ELSE instructions .)
    }               reduce using rule 53 (if_statement -> IF ( expression ) instructions ELSE instructions .)
    ELSE            reduce using rule 53 (if_statement -> IF ( expression ) instructions ELSE instructions .)

    instruction                    shift and go to state 23
    non_end_instruction            shift and go to state 5
    end_line_instruction           shift and go to state 6
    while_loop                     shift and go to state 7
    for_loop                       shift and go to state 8
    if_statement                   shift and go to state 9
    print_stmt                     shift and go to state 10
    return_stmt                    shift and go to state 11
    continue_stmt                  shift and go to state 12
    break_stmt                     shift and go to state 13
    assignment                     shift and go to state 14